{"title":"关于mysql","slug":"about-mysql","date":"2018-03-26T08:52:37.000Z","updated":"2020-08-31T21:43:20.603Z","comments":true,"path":"api/articles/about-mysql.json","excerpt":null,"covers":["/assets/blogimg/p10-1.png","/assets/blogimg/p10-2.png","/assets/blogimg/p10-3.png"],"content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p><img src=\"/assets/blogimg/p10-1.png\" alt=\"login mysql\" title=\"login mysql\"></p>\n<h3 id=\"如何开启mysql的远程连接\"><a href=\"#如何开启mysql的远程连接\" class=\"headerlink\" title=\"如何开启mysql的远程连接\"></a>如何开启mysql的远程连接</h3><p>1.直接修改user表</p>\n<pre><code class=\"plsql\">    use mysql;//选择mysql库\n    update user set host=&#39;%&#39; where user=&#39;root&#39;;//把user表内的root用户的host设置为任意ip\n    flush privileges;//刷新数据库</code></pre>\n<p>2.root用户远程连接数据库</p>\n<pre><code class=\"plsql\">    grant all privileges on *.* to &#39;user&#39;@&#39;%&#39; identified by &#39;password&#39; with grant option;\n    flush privileges;</code></pre>\n<p>上面第一行代码的意思是允许user这个用户在任意ip使用password这个密码登陆mysql，如果没有user这个用户就会创建一个；</p>\n<p>让我们来查一下可以远程登陆的用户吧:<br><img src=\"/assets/blogimg/p10-2.png\" alt=\"select\" title=\"select\"><br>这样就可以在本地使用<code>mysql -h *** -u root -p</code>连接远程数据库啦，也可以使用图形化工具如<strong>Navicat for MySQL</strong>管理你的数据库了；<br>如果你的mysql还不可以远程连接的话，你可能需要进入<code>/etc/mysql/my.conf</code>把<code>bind-address = 127.0.0.1</code>改为<code>bind-address = 0.0.0.0</code>或者直接用#注释掉。</p>\n<h3 id=\"关于一些sql语法；\"><a href=\"#关于一些sql语法；\" class=\"headerlink\" title=\"关于一些sql语法；\"></a>关于一些sql语法；</h3><table>\n<thead>\n<tr>\n<th align=\"left\">operation</th>\n<th align=\"left\">usage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">创建数据库</td>\n<td align=\"left\">CREATE DATABASE STUDENTS</td>\n</tr>\n<tr>\n<td align=\"left\">删除数据库</td>\n<td align=\"left\">DROP DATABASE STUDENTS</td>\n</tr>\n<tr>\n<td align=\"left\">创建数据表</td>\n<td align=\"left\">CREATE TABLE table_name (column_name column_type);</td>\n</tr>\n<tr>\n<td align=\"left\">删除数据表</td>\n<td align=\"left\">DROP TABLE table_name</td>\n</tr>\n<tr>\n<td align=\"left\">增(insert)</td>\n<td align=\"left\">INSERT INTO table_name ( field1, field2,…fieldN )VALUES( value1, value2,…valueN );</td>\n</tr>\n<tr>\n<td align=\"left\">删(delete)</td>\n<td align=\"left\">DELETE FROM stu_info WHERE stu_no = ‘035’;</td>\n</tr>\n<tr>\n<td align=\"left\">查(select)</td>\n<td align=\"left\">select * from stu_info;</td>\n</tr>\n<tr>\n<td align=\"left\">改(update)</td>\n<td align=\"left\">UPDATE stu_info SET field1=value1 WHERE…</td>\n</tr>\n</tbody></table>\n<p>其中关于创建数据表：</p>\n<pre><code class=\"plsql\">CREATE TABLE IF NOT EXISTS `stuInfo`(\n   `stuId` INT UNSIGNED AUTO_INCREMENT,//自增；\n   `stuNo`  CHAR(6)  NOT  NULL,\n   `stuName` VARCHAR(40) NOT NULL,\n   `stuAge` INTEGER,\n   `stuAddress` VARCHAR(100) NOT NULL,\n   `subDate` DATE,//上传时间NOW();\n   PRIMARY KEY ( `stuId` )//主键;\n)ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre>\n<p>其中关于往数据表中增加一条数据：</p>\n<pre><code class=\"plsql\">INSERT INTO stu_info(stu_no,stu_name,stu_age,submission_date) VALUES(&#39;032&#39;,&#39;Ford&#39;,22,SYSDATE);</code></pre>\n<p>往数据表中增加多条数据：</p>\n<pre><code class=\"plsql\">INSERT INTO table_name  (field1, field2,...fieldN)\nVALUES\n(valueA1,valueA2,...valueAN),\n(valueB1,valueB2,...valueBN),\n(valueC1,valueC2,...valueCN)\n......;</code></pre>\n<p>改数据表中的数据：</p>\n<pre><code class=\"plsql\">UPDATE stu_info SET stu_age = 26, submission_date = &#39;2012-09-18&#39;WHERE stu_no= &#39;035&#39;;</code></pre>\n<p><img src=\"/assets/blogimg/p10-3.png\" alt=\"select\" title=\"select\"></p>\n<p>more…click <a href=\"http://www.runoob.com/mysql/mysql-tutorial.html\" target=\"_blank\" rel=\"noopener\">runoob.com</a><br>demo…click <a href=\"http://www.madeai.cn:8888/test\" target=\"_blank\" rel=\"noopener\">here</a></p>\n","more":"<p><img src=\"/assets/blogimg/p10-1.png\" alt=\"login mysql\" title=\"login mysql\"></p>\n<h3 id=\"如何开启mysql的远程连接\"><a href=\"#如何开启mysql的远程连接\" class=\"headerlink\" title=\"如何开启mysql的远程连接\"></a>如何开启mysql的远程连接</h3><p>1.直接修改user表</p>\n<pre><code class=\"plsql\">    use mysql;//选择mysql库\n    update user set host=&#39;%&#39; where user=&#39;root&#39;;//把user表内的root用户的host设置为任意ip\n    flush privileges;//刷新数据库</code></pre>\n<p>2.root用户远程连接数据库</p>\n<pre><code class=\"plsql\">    grant all privileges on *.* to &#39;user&#39;@&#39;%&#39; identified by &#39;password&#39; with grant option;\n    flush privileges;</code></pre>\n<p>上面第一行代码的意思是允许user这个用户在任意ip使用password这个密码登陆mysql，如果没有user这个用户就会创建一个；</p>\n<p>让我们来查一下可以远程登陆的用户吧:<br><img src=\"/assets/blogimg/p10-2.png\" alt=\"select\" title=\"select\"><br>这样就可以在本地使用<code>mysql -h *** -u root -p</code>连接远程数据库啦，也可以使用图形化工具如<strong>Navicat for MySQL</strong>管理你的数据库了；<br>如果你的mysql还不可以远程连接的话，你可能需要进入<code>/etc/mysql/my.conf</code>把<code>bind-address = 127.0.0.1</code>改为<code>bind-address = 0.0.0.0</code>或者直接用#注释掉。</p>\n<h3 id=\"关于一些sql语法；\"><a href=\"#关于一些sql语法；\" class=\"headerlink\" title=\"关于一些sql语法；\"></a>关于一些sql语法；</h3><table>\n<thead>\n<tr>\n<th align=\"left\">operation</th>\n<th align=\"left\">usage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">创建数据库</td>\n<td align=\"left\">CREATE DATABASE STUDENTS</td>\n</tr>\n<tr>\n<td align=\"left\">删除数据库</td>\n<td align=\"left\">DROP DATABASE STUDENTS</td>\n</tr>\n<tr>\n<td align=\"left\">创建数据表</td>\n<td align=\"left\">CREATE TABLE table_name (column_name column_type);</td>\n</tr>\n<tr>\n<td align=\"left\">删除数据表</td>\n<td align=\"left\">DROP TABLE table_name</td>\n</tr>\n<tr>\n<td align=\"left\">增(insert)</td>\n<td align=\"left\">INSERT INTO table_name ( field1, field2,…fieldN )VALUES( value1, value2,…valueN );</td>\n</tr>\n<tr>\n<td align=\"left\">删(delete)</td>\n<td align=\"left\">DELETE FROM stu_info WHERE stu_no = ‘035’;</td>\n</tr>\n<tr>\n<td align=\"left\">查(select)</td>\n<td align=\"left\">select * from stu_info;</td>\n</tr>\n<tr>\n<td align=\"left\">改(update)</td>\n<td align=\"left\">UPDATE stu_info SET field1=value1 WHERE…</td>\n</tr>\n</tbody></table>\n<p>其中关于创建数据表：</p>\n<pre><code class=\"plsql\">CREATE TABLE IF NOT EXISTS `stuInfo`(\n   `stuId` INT UNSIGNED AUTO_INCREMENT,//自增；\n   `stuNo`  CHAR(6)  NOT  NULL,\n   `stuName` VARCHAR(40) NOT NULL,\n   `stuAge` INTEGER,\n   `stuAddress` VARCHAR(100) NOT NULL,\n   `subDate` DATE,//上传时间NOW();\n   PRIMARY KEY ( `stuId` )//主键;\n)ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre>\n<p>其中关于往数据表中增加一条数据：</p>\n<pre><code class=\"plsql\">INSERT INTO stu_info(stu_no,stu_name,stu_age,submission_date) VALUES(&#39;032&#39;,&#39;Ford&#39;,22,SYSDATE);</code></pre>\n<p>往数据表中增加多条数据：</p>\n<pre><code class=\"plsql\">INSERT INTO table_name  (field1, field2,...fieldN)\nVALUES\n(valueA1,valueA2,...valueAN),\n(valueB1,valueB2,...valueBN),\n(valueC1,valueC2,...valueCN)\n......;</code></pre>\n<p>改数据表中的数据：</p>\n<pre><code class=\"plsql\">UPDATE stu_info SET stu_age = 26, submission_date = &#39;2012-09-18&#39;WHERE stu_no= &#39;035&#39;;</code></pre>\n<p><img src=\"/assets/blogimg/p10-3.png\" alt=\"select\" title=\"select\"></p>\n<p>more…click <a href=\"http://www.runoob.com/mysql/mysql-tutorial.html\" target=\"_blank\" rel=\"noopener\">runoob.com</a><br>demo…click <a href=\"http://www.madeai.cn:8888/test\" target=\"_blank\" rel=\"noopener\">here</a></p>\n","categories":[],"tags":[{"name":"MySQL","path":"api/tags/MySQL.json"}]}