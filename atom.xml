<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无人之境</title>
  
  <subtitle>默默地coding是我的态度</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.madeai.cn/"/>
  <updated>2020-08-28T11:58:35.106Z</updated>
  <id>http://blog.madeai.cn/</id>
  
  <author>
    <name>madeai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>官网信息更新获得通知</title>
    <link href="http://blog.madeai.cn/articles/get-website-message-alert.html"/>
    <id>http://blog.madeai.cn/articles/get-website-message-alert.html</id>
    <published>2020-03-10T04:19:53.000Z</published>
    <updated>2020-08-28T11:58:35.106Z</updated>
    
    <content type="html"><![CDATA[<h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><p>国家线还没出, 众多2020考研学子们一定异常焦急地等待官网的通告, 想着复试名单什么时候出, 但又不能时时刻刻盯着官网的通知栏; 别担心, 让代码来帮助你…<br>我们需要代码帮我们完成这样几件事:</p><ol><li>每隔10min检查一下官网的通知栏</li><li>抓取第一条通知</li><li>将抓取到的通知与上一条抓取的通知比对<ul><li>如果不相同则将这次的通知发送到用户的手机上, 将上一条通告覆盖并重复以上步骤</li><li>如果相同则不进行操作, 重复以上三个步骤</li></ul></li></ol><h3 id="jsoup"><a href="#jsoup" class="headerlink" title="jsoup"></a>jsoup</h3><blockquote><p>jsoup is a Java library for working with real-world HTML. It provides a very convenient API for fetching URLs and extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</p></blockquote><p>jsoup是一个HTML解析器, 他能像CSS选择器一样选取DOM节点, 做到类似于XPath的效果;</p><p>使用jsoup获得网页内容就一句话<code>Document doc = Jsoup.connect(TARGET_URL).get();</code><br><img src="/assets/blogimg/example_2020-03-10.jpg" alt="example"><br>如何选到<code>&lt;a&gt;</code>标签中的Text呢?</p><ol><li>先获取到它们的父级标签<code>&lt;td class=&quot;tablexu&quot;&gt;</code><pre><code class="java">Element element = doc.select(&quot;td.tablexu&quot;).first();</code></pre></li><li>在<code>&lt;a&gt;</code>标签所组成的集合里面选取第一个标签并获取标签内的文字, 也就是最新的通告<pre><code class="java">String newMsg=element.select(&quot;a&quot;).first().text();</code></pre><h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3></li></ol><p><strong>Timer</strong>是javaAPI中的一个定时器, 它能每隔一段时间开启一个子线程处理任务(C#中也有类似的API);</p><p>java代码如下:</p><pre><code class="java">import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.URL;import java.net.URLConnection;import java.util.List;import java.util.Map;import java.util.Timer;import java.util.TimerTask;public class Main {    public final static String TARGET_URL=&quot;http://jky.yangtzeu.edu.cn/tzgg.htm&quot;;    public final static String TARGET_URL2=&quot;http://yjsc.yangtzeu.edu.cn/zsgz/tzgg.htm&quot;;    public final static String MSG_URL;    private static String oldMsg=&quot;&quot;;    public static void main(String[] args) {        Timer timer=new Timer();        timer.schedule(new FooTimerTask(),1000,1000*60*10);    }    static class FooTimerTask extends TimerTask {        @Override        public void run() {            try {                Document doc = Jsoup.connect(TARGET_URL2).get();                Element element = doc.select(&quot;td.tablexu&quot;).first();                String newMsg=element.select(&quot;a&quot;).first().text();                if (!newMsg.equals(oldMsg)){                    System.out.println(newMsg);                    System.out.println(sendGet(MSG_URL+&quot;?text=&quot;+newMsg.replace(&quot; &quot;,&quot;&quot;)+&quot;&amp;desp=[点击这里](http://yjsc.yangtzeu.edu.cn/&quot;+element.select(&quot;a&quot;).attr(&quot;href&quot;).replace(&quot;..&quot;,&quot;&quot;)+&quot;)&quot;));                    oldMsg=newMsg;                }            }catch(Exception e) {                System.err.println(sendGet(MSG_URL+&quot;?text=get website message failed!!!&amp;desep=&quot;+e.getMessage()));            }        }    }    public static String sendGet(String urlName){        String result = &quot;&quot;;        try{            URL realUrl = new URL(urlName);            URLConnection conn = realUrl.openConnection();            conn.setRequestProperty(&quot;accept&quot;, &quot;*/*&quot;);            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);            conn.setRequestProperty(&quot;user-agent&quot;,                    &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);            conn.connect();            Map&lt;String, List&lt;String&gt;&gt; map = conn.getHeaderFields();            for (String key : map.keySet()) {                System.out.println(key + &quot;--&gt;&quot; + map.get(key));            }            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));            String line;            while ((line = in.readLine()) != null) {                result += line;            }        } catch (Exception e) {            System.out.println(&quot;get request failed!!&quot; + e);            e.printStackTrace();        }        return result;    }}</code></pre><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><ul><li>怎么把通知发送到手机上?<ul><li>可以借助于微信或者QQ的API(我用的是Server酱)</li><li>可以用做一个AndroidAPP用Socket和部署在服务器上的脚本建立连接;</li></ul></li><li>怎么部署<ul><li>将项目打包成可执行的jar包扔到装有JDK的服务器上运行</li><li>服务器甚至不需要开放相应的端口(省去了很多麻烦)</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;background&quot;&gt;&lt;a href=&quot;#background&quot; class=&quot;headerlink&quot; title=&quot;background&quot;&gt;&lt;/a&gt;background&lt;/h3&gt;&lt;p&gt;国家线还没出, 众多2020考研学子们一定异常焦急地等待官网的通告, 想着复
      
    
    </summary>
    
    
      <category term="Java" scheme="http://blog.madeai.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>欧拉公式の推导</title>
    <link href="http://blog.madeai.cn/articles/euler-s-formula.html"/>
    <id>http://blog.madeai.cn/articles/euler-s-formula.html</id>
    <published>2019-07-27T07:48:56.000Z</published>
    <updated>2020-08-27T15:06:11.350Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/commons/6/60/Leonhard_Euler_2.jpg" alt="Euler"></p><a id="more"></a><h3 id="Euler’s-formula"><a href="#Euler’s-formula" class="headerlink" title="Euler’s formula:"></a>Euler’s formula:</h3><p>$$<br>\Large{e^{ix}=cosx+isinx<br>\xrightarrow{x=\pi}<br>e^{\pi i}+1=0}<br>$$<br>This formula called <code>created by god</code>, because it contain $e\quad\pi\quad1$.</p><h3 id="How-the-formula-come-from"><a href="#How-the-formula-come-from" class="headerlink" title="How the formula come from?"></a>How the formula come from?</h3><p>This answer is <strong>Taloyr</strong><br>$$<br>\underset{x \to x_{0}}{\lim}f(x)=\sum_{i=0}^{n}\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+o(x^n)<br>$$<br>when $x_0$ equals $0$, the formula transform to<br>$$<br>\underset{x \to 0}{\lim}f(x)=\sum_{i=0}^{n}\frac{f^{(n)}(0)}{n!}x^n+o(x^n)<br>$$</p><p>Here’s three items about $e^x\quad sinx\quad cosx$</p><p>$\small{e^x=1+x+\frac{x^2}{2!}+\frac{x^3}{3!}+…+\frac{x^n}{n!}}<br>$</p><p>$\small{sinx=x-\frac{x^3}{3!}+\frac{x^5}{5!}+O(x^5)}<br>$</p><p>$\small{cosx=1-\frac{x^2}{2!}+\frac{x^4}{4!}+O(x^4)}<br>$</p><p>At the first equaltion we replace the partation of $x$ with $ix$<br>and the orgainal equaltion become to</p><p>$e^{ix}=1+ix-\frac{x^2}{2!}-i\frac{x^3}{3!}+\frac{x^4}{4!}+i\frac{x^5}{5!}+…+\frac{x^{in}}{in!}\Rightarrow e^{ix}=\left(1-\frac{x^2}{2!}+\frac{x^4}{4!}+O(x^4)\right)+\left(ix-i\frac{x^3}{3!}+i\frac{x^5}{5!}+O(x^5)\right)<br>$</p><p>that is $e^{ix}=cosx+isinx$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/6/60/Leonhard_Euler_2.jpg&quot; alt=&quot;Euler&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.madeai.cn/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>&lt;算法第四版&gt;最佳实践</title>
    <link href="http://blog.madeai.cn/articles/algorithms-fourth-edition-best-practice.html"/>
    <id>http://blog.madeai.cn/articles/algorithms-fourth-edition-best-practice.html</id>
    <published>2019-06-29T19:12:11.000Z</published>
    <updated>2020-08-27T13:33:28.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/sort-algorithm-banner.png" alt="sort-algorithm"></p><a id="more"></a><h3 id="bucket-sort"><a href="#bucket-sort" class="headerlink" title="bucket sort"></a>bucket sort</h3><p><strong>桶排序</strong>的基本思路是遍历一个待排的数组,把每个数出现的次数记录到一个新的数组里面,那这个新的数组里的下标就是待排序的数组的值.</p><p>设待排数组是arr,记录待排数组的桶是bucket让我们来理一下思路:</p><ol><li>新建一个数组,数组的大小是arr.length-1;</li><li>循环遍历arr这个数组,在循环体里面将arr数出现的次数记录到bucket这个数组里面;</li><li>遍历bucket这个数组,判断值是多少就输出多少次bucket的下标;</li></ol><p>以下是Java代码:</p><pre><code class="java">public static void bucketSort(int [] arr){        int[] bucket=new int[max(arr)+1];        for (int i = 0; i &lt; arr.length; i++) {            bucket[arr[i]]++;        }        int count=0;        for (int i=0;i&lt;bucket.length;i++){            for (int j = 1; j &lt;= bucket[i]; j++) {                arr[count++]=i;            }        }    }</code></pre><p>以上只是一个简单的桶排序,<em>不能排序负数和小数</em>,但它的时间复杂度也仅仅是<code>T(N)=O(N+M)</code>;</p><h3 id="buble-sort"><a href="#buble-sort" class="headerlink" title="buble sort"></a>buble sort</h3><p><strong>冒泡排序</strong>的的思路就是遍历数组,交换(<em>swap</em>)相邻两个元素,使余下未排序数组部分最大(或最小)的元素浮到最前或最后;<br>这样排序一个长度为N的数组所需要的时间复杂度<code>T(N)=O(N&lt;sup&gt;2&lt;/sup&gt;)</code></p><p>以下是java代码:</p><pre><code class="java">    public static void bubbleSort(int [] arr){        for (int i = arr.length; i &gt; 0; i--) {            for (int j = 0; j &lt; i-1; j++) {                if (arr[j]&gt;arr[j+1]){                    swap(arr,j,j+1);                }            }        }    }</code></pre><p>冒泡排序的缺点很明显,在全部无序的情况下,时间复杂度太高了(因为它只能交换相邻两个元素);<br>而且上述的示例有一个需要改进的地方就是:设想一个数组前半部分是有序的,但是如果有序的话检查一次就够了(前面在排序后半部分的元素中已经检查过了),所以我们可以设一个布尔型的flag值,有序就直接跳过,这样能大大缩短代码运行时间;</p><h3 id="selection-sort"><a href="#selection-sort" class="headerlink" title="selection sort"></a>selection sort</h3><p><strong>选择排序</strong>和冒泡排序有点类似,它的基本思路就是把数组看成两部分:一部分有序,一部分无序;<br>把后面无序的部分的最小值放到前半部分的最后面(<em>冒泡排序是交换相邻的元素</em>)</p><p>以下是java代码:</p><pre><code class="java">    public static void selectionSort(int[] arr){        for (int i = 0; i &lt; arr.length; i++) {            for (int j = i+1; j &lt; arr.length; j++) {                if (arr[j]&lt;arr[i]){                    swap(arr,j,i);                }            }        }    }</code></pre><p>选择排序的时间复杂度也是<code>O(N&lt;sup&gt;2&lt;/sup&gt;)</code></p><h3 id="insertion-sort"><a href="#insertion-sort" class="headerlink" title="insertion sort"></a>insertion sort</h3><p><strong>插入排序</strong>的基本思路是选择后面没排序的部分的第一个元素,插入到前半部分有序的合适位置(和选择排序正好相反);</p><p><em>让我们来理一下思路吧:</em></p><ol><li>arr[0]是有序的;</li><li>遍历余下的将arr[1]放到前面有序部分的合适位置(arr[0]前面或后面);</li><li>每次把余下部分的第一个放到前面有序的合适位置(重复1,2步骤);</li><li>直到余下的部分没有元素.</li></ol><p>以下是java代码:</p><pre><code class="java">    /**     * thought the arr as two part, the front part is ordered and the end part is unordered;     * in the loop each time put the fist element of the end part to the appropriate position in the front part;     * until the outer loop is over;     * @param arr the array wait to sort;     */    public static void insertionSort(int[] arr){        for (int i = 0; i &lt; arr.length; i++) {            for (int j = 0; j &lt; i; j++) {                if (arr[i]&lt;arr[j]){                    int tmp=arr[i];                    for (int k = i; k &gt; j; k--) {                        arr[k]=arr[k-1];                    }                    arr[j]=tmp;                    break;                }            }        }    }</code></pre><p>由于有两层循环,所以它的时间复杂度也是<code>O(N&lt;sup&gt;2&lt;/sup&gt;)</code>,不过和选择排序不同的是它是<em>稳定的排序</em>;</p><h3 id="quick-sort"><a href="#quick-sort" class="headerlink" title="quick sort"></a>quick sort</h3><p><strong>快速排序</strong>采用分治法(<em>divide-and-conquer method</em>),利用递归(<em>recursion</em>)对数组作拆分处理;<br>分治法的基本思路就是:大事化小,小事化无;</p><p>让我们来理一下思路吧:</p><ol><li>随便找一个元素看作基准点(为了方便起见我们不妨把arr[0]看作基准点);</li><li>基准点左边的数比基准点小,右边的数比它大;</li><li>循环调用,直到每部分只有两数,左边小,右边大;</li></ol><p>java代码如下:</p><pre><code class="java">    /**     * &lt;quote&gt;Quicksort is a divide-and-conquer method for sorting.&lt;/quote&gt;     * divide the arr to two parts, set the leftest element as the standard position;     * find the smaller element than standard position from the right;     * find the larger element than standard position from the left;     * @param arr the arr wait to sort     * @param left left guard     * @param right right guard     */    public static void quickSort(int[] arr,int left,int right){        if (left&gt;right) return;        int i=left,j=right,pos=arr[left];        while(i!=j){            while(i&lt;j&amp;&amp;arr[j]&gt;=pos){                j--;            }            while(i&lt;j&amp;&amp;arr[i]&lt;=pos){                i++;            }            if (i&lt;j){                swap(arr,i,j);            }        }        arr[left]=arr[i];        arr[i]=pos;        quickSort(arr,left,i-1);        quickSort(arr,i+1,right);    }</code></pre><p>由于快排是跳跃交换元素位置的(和冒泡排序不同),所以它的平均时间复杂度是<code>O(NlogN)</code>;没接触到递归的同学可能觉得快排有点抽象,可以参照&lt;啊哈,算法&gt;或&lt;算法第四版&gt;(实际上我也在用这两本教材),你也可以看看发明者关于快排的论文;</p><h3 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h3><p>以下是每种算法的平均时间复杂度:</p><table><thead><tr><th>name</th><th>T(N)</th></tr></thead><tbody><tr><td>bucket sort</td><td>O(N+M)</td></tr><tr><td>buble sort</td><td>O(N<sup>2</sup>)</td></tr><tr><td>selection sort</td><td>O(N<sup>2</sup>)</td></tr><tr><td>insertion sort</td><td>O(N<sup>2</sup>)</td></tr><tr><td>quick sort</td><td>O(NlogN)</td></tr></tbody></table><p>还有其他的希尔排序,堆排序,计数排序,基数排序啊有待同学们去一一探索,这里就不再一一赘述了.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/sort-algorithm-banner.png&quot; alt=&quot;sort-algorithm&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://blog.madeai.cn/tags/Java/"/>
    
      <category term="algorithm" scheme="http://blog.madeai.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>关于Android线程</title>
    <link href="http://blog.madeai.cn/articles/about-android-thread.html"/>
    <id>http://blog.madeai.cn/articles/about-android-thread.html</id>
    <published>2019-02-13T22:05:32.000Z</published>
    <updated>2020-08-27T13:33:20.693Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/andy-lg.png" alt="banner"></p><a id="more"></a><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><p>众所周知,android只能在主线程中更新UI视图,而一些诸如网络请求,socket通讯和Json解析之类比较耗时的操作一般放在子线程(用线程池来管理便于回收)中处理,否则会阻塞(zu se)UI线程.那么子线程中处理的结果怎么显示出来呢?有三种方法:</p><ul><li>使用RunOnUiThread切回主线程;</li><li>用handler来进行消息传递;</li><li>继承AsyncTask类,在onPostExecute方法中更新UI.</li></ul><h3 id="RunOnUiThread"><a href="#RunOnUiThread" class="headerlink" title="RunOnUiThread"></a>RunOnUiThread</h3><p>可以把RunOnUiThread看成是一个特殊的线程,如果RunOnUiThread运行在主线程,则立即执行里面的代码,否则将Runable对象添加到消息处理队列;<br>具体事例如下:</p><pre><code class="java">new Thread(new Runnable() {            @Override            public void run() {                //模拟耗时操作;                try {                    Thread.sleep( 2000 );                } catch (InterruptedException e) {                    e.printStackTrace();                }                //切回UI线程;                runOnUiThread(new Runnable() {                    @Override                    public void run() {                        //更新UI视图;                    }                });            }        }).start();</code></pre><h3 id="handler"><a href="#handler" class="headerlink" title="handler"></a>handler</h3><p>我们用handler携带message来进行子线程和主线程间的通讯,在这里我把handler看成是一个hook或者signal;<br>handler的初始化:</p><pre><code class="java">Handler handler=new Handler(){    public void handlerMessage(message msg){        super.handlerMessage(msg);        switch(msg.what){            case 0:                doSomething(msg.getData().getString(&quot;key&quot;));                break;            case 1:                doAnotherthing((Cast)msg.obj);                break;            default:        }    }};</code></pre><p>在这里message的用法有两种,一种是使用<code>message.obj</code>来传递具体的数据,还有一种是把数据放在<font color="red">bundle</font>里面再用<code>message.setData</code>来传递<font color="red">bundle</font>.</p><h4 id="利用message-obj来携带数据"><a href="#利用message-obj来携带数据" class="headerlink" title="利用message.obj来携带数据"></a>利用message.obj来携带数据</h4><pre><code class="java">Message msg=Message.obtain();msg.what=1;msg.obj=new Cast();msg.arg1=123;msg.arg2=1234;handler.sendMessage(msg);</code></pre><h4 id="利用bundle来携带数据"><a href="#利用bundle来携带数据" class="headerlink" title="利用bundle来携带数据"></a>利用bundle来携带数据</h4><pre><code class="java">Message msg=new Message();msg.what=0;Bundle bundle=new Bundle();bundle.putString(&quot;key&quot;,&quot;value&quot;);msg.setData(bundle);handler.sendMessage(msg);</code></pre><h3 id="AsyncTask"><a href="#AsyncTask" class="headerlink" title="AsyncTask"></a>AsyncTask</h3><p>顾名思(si)义,AsyncTask是异步任务;它的基本用法如下:</p><pre><code class="java">//传入三个泛型参数,分别是: a传入给后台任务的strings, b用于显示进度条, c返回结果;class Task extends AsyncTask&lt;String,String,String&gt;{    @Override    protected void onPreExecute(){    }    @Override    protected void doInBackground(String... strings){    }    @Override    protected void postExecute(String string){    }}</code></pre><ul><li><code>onPreExecute()</code>中进行UI界面的初始化工作,列如显示进度条或onloading的Gif动画;<img src="/assets/blogimg/2019-02-14.png" width="30%" alt="onloading"></li><li><code>doInBackground()</code>中处理耗时操作,不能进行UI操作;</li><li><code>postExecute()</code>中后台任务执行完后要进行的事,列如提关闭进度条或显示任务执行结果.</li></ul><hr><p>关于AsyncTask的更多信息请参考郭霖老师的&lt;&lt;第二行代码&gt;&gt;第十章第二节.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/andy-lg.png&quot; alt=&quot;banner&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://blog.madeai.cn/tags/Java/"/>
    
      <category term="Android" scheme="http://blog.madeai.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>自动出题机</title>
    <link href="http://blog.madeai.cn/articles/automatic-generate-question.html"/>
    <id>http://blog.madeai.cn/articles/automatic-generate-question.html</id>
    <published>2018-09-24T04:01:24.000Z</published>
    <updated>2020-08-28T11:58:35.127Z</updated>
    
    <content type="html"><![CDATA[<h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><pre><code>学校开始了新一轮的信息技术大赛,我们班的科技委员下发了3191道复习题,当时excel格式的复习题无论在PC和移动端看起来都不太方便,所以就想用一个空闲的时间弄一个自动出题机(带评分功能的).</code></pre><h3 id="step1-mysql大法好"><a href="#step1-mysql大法好" class="headerlink" title="step1:mysql大法好"></a>step1:mysql大法好</h3><p>  关于mysql表的设计,总共有两张表(暂时),一张examination表存的是问题,答案,题号,难度之类的:</p><p><img src="https://i.loli.net/2018/09/24/5ba86bc0380f6.png" alt="5ba86bc0380f6"></p><p>还有一张exam_report表存用户提交之后产生的数据,比如:内网ip,外网ip,agent,提交时间,分数和多少道题没做.</p><p><img src="https://i.loli.net/2018/09/24/5ba86cdf6f9e0.png" alt="5ba86cdf6f9e0"></p><p>然后把excel导入数据库.</p><h3 id="step2-后端API的设计-PHP是web最牛逼的语言"><a href="#step2-后端API的设计-PHP是web最牛逼的语言" class="headerlink" title="step2:后端API的设计(PHP是web最牛逼的语言)"></a>step2:后端API的设计(PHP是web最牛逼的语言)</h3><ol><li><p>先来说一下需求吧,首先是像从数据库中随机抽取100道题,在把这些题目转为json格式(这里有一个不理想的地方是答案也一起包含进去了,这个在v2.0中改进)向前端提供.然后从前端接受json格式的分数等用户信息.</p></li><li><p>需求弄清楚就好办了,在时间紧迫和项目比较小的情况下用PHP做后端是比较理想的.结果向前端提供题目数据的<code>handle.php</code>减掉注释只用了<font color="red">26-9</font>行,从前端接收信息的<code>report.php</code>只用了<font color="red">20-4</font>行.让我不禁感叹PHP是web开发对新人最友好的后端语言!!<img src="https://i.loli.net/2018/09/24/5ba8724b10653.jpg" alt="5ba8724b10653"></p></li></ol><h3 id="step3-前端页面设计-主要用jquery"><a href="#step3-前端页面设计-主要用jquery" class="headerlink" title="step3:前端页面设计(主要用jquery)"></a>step3:前端页面设计(主要用jquery)</h3><p>前端css用的很少主要是展示一个原型,在v2.0后会用现成的工具继续美化,主要是用js生成的页面</p><p><img src="https://i.loli.net/2018/09/24/5ba873882c817.png" alt="5ba873882c817"></p><p>做完之后评分和给出答案(后续在v2.0会添加一些feature):<img src="https://i.loli.net/2018/09/24/5ba873edaca3d.png" alt="5ba873edaca3d"></p><h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3><p>这不是一篇科普向的博文,主要是说明一个idea.然后在v2.0中需要添加的功能:</p><ul><li><p><strong>todo list</strong></p><ul><li><p>单独列为一个项目用<code>http://www.exam.madeai.cn</code></p></li><li><p>添加rank排行榜</p></li><li><p>添加评论系统</p></li><li><p>css美化页面</p></li><li><p>更友好的交互体验</p></li></ul></li></ul><p>然后是传送门:<a href="http://www.madeai.cn/exam" target="_blank" rel="noopener">信息技术大赛出题机</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;background&quot;&gt;&lt;a href=&quot;#background&quot; class=&quot;headerlink&quot; title=&quot;background&quot;&gt;&lt;/a&gt;background&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;学校开始了新一轮的信息技术大赛,我们班的科技委员下发了319
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://blog.madeai.cn/tags/MySQL/"/>
    
      <category term="PHP" scheme="http://blog.madeai.cn/tags/PHP/"/>
    
      <category term="JS" scheme="http://blog.madeai.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>一些linux命令</title>
    <link href="http://blog.madeai.cn/articles/p17.html"/>
    <id>http://blog.madeai.cn/articles/p17.html</id>
    <published>2018-07-14T10:20:05.000Z</published>
    <updated>2020-08-28T20:22:09.895Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//img2.tfd.com/pp/wikiimg.ashx?p=commons%2fthumb%2f3%2f35%2fTux.svg%2f280px-Tux.svg.png" alt="liunx"></p><blockquote><p>Talk is cheap, show me the code.</p><footer><strong>@Linus Benedict Torvalds ---</strong><cite><a href="https://github.com/torvalds" target="_blank" rel="noopener">github.com/torvalds</a></cite></footer></blockquote><a id="more"></a><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><pre><code>liunx常见的发行版有ubuntu,red hat,centos,gun,kail...整理一些常用的liunx(测试环境 centos release 6.9)命令,然后由于要学英语嘛,尝试用英语写作.</code></pre><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","video":{"url":"https://gslb.miaopai.com/stream/gX1nvE-FwDbx3sHgFfAvVfhdFHSViZLDe7mO9Q__.mp4?yx=&refer=weibo_app&Expires=1531913346&ssig=ieIoafqxGZ&KID=unistore,video","pic":"/assets/img/dplayer-cover.svg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h3 id="file-operation-at-touch-vi-ls-cd"><a href="#file-operation-at-touch-vi-ls-cd" class="headerlink" title="file operation (at,touch,vi,ls,cd..)"></a>file operation (at,touch,vi,ls,cd..)</h3><ul><li><p>cat perview file content.</p></li><li><p><code>touch+path+filename</code> creat an empty file.</p></li><li><p>vi edit file.<br>vim有四种模式,分别是command(normal)-mode,last-line-mode,insert-mode,和visual-mode.默认进入vim时是普通模式,此时按:是底行模式,按insert是插入模式,按v是视图模式(可以用鼠标滑动)</p><ul><li>在普通模式下dd删除光标所在行</li><li>在底行模式下wq保存并退出!q不保存退出</li></ul></li><li><p>ls list folder or file.</p><ul><li><p><code>ls -l +path</code>view property of file or folder.<br><img src="https://i.loli.net/2018/07/16/5b4c66f7af213.png" alt="5b4c66f7af213"></p></li><li><p><code>ls +[letters]*</code>list file or folder began with letters(正则表达式).<br><img src="https://i.loli.net/2018/07/16/5b4c694bc560a.png" alt="5b4c694bc560a"></p></li></ul></li><li><p>cd Change the shell working directory.</p><ul><li><code>cd ..</code>进入当前目录的父目录</li><li><code>cd -</code>切换到上一个工作目录</li><li><code>cd ~</code>切换到root工作目录</li><li><code>cd \</code>切换到根目录注意不是root目录</li><li>如果路径太长你不想用cd的话看这里–&gt;<a href="https://olivierlacan.com/posts/cd-is-wasting-your-time/?utm_source=wanqu.co&utm_campaign=Wanqu+Daily&utm_medium=website" target="_blank" rel="noopener">cd is wasting time</a></li></ul></li><li><p><code>tree -d -L 2</code>搜索的深度为2层且只搜索文件夹,注意区分大小写</p></li></ul><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><ol><li>切换用户<ul><li>root-&gt;普通用户:<code>su +username</code></li><li>普通用户-&gt;root:<code>sudo su</code>或者<code>su -root</code><br><img src="https://i.loli.net/2018/07/22/5b54953315576.png" alt="5b54953315576"><br>需要稍加注意的是当在root环境下时前面是#,而在普通用户环境下时前面是~</li></ul></li></ol><h3 id="package-management"><a href="#package-management" class="headerlink" title="package management"></a>package management</h3><p>yum,pkg,apt…</p><p>brew,npm,yarn,pip…</p><h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><ol><li><a href="https://www.jianshu.com/p/a182a0be4b8a" target="_blank" rel="noopener">看完这篇Linux基本的操作就会了</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;//img2.tfd.com/pp/wikiimg.ashx?p=commons%2fthumb%2f3%2f35%2fTux.svg%2f280px-Tux.svg.png&quot; alt=&quot;liunx&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Talk is cheap, show me the code.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;@Linus Benedict Torvalds ---&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://github.com/torvalds&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github.com/torvalds&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="hotkey" scheme="http://blog.madeai.cn/tags/hotkey/"/>
    
      <category term="Linux" scheme="http://blog.madeai.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>如何使用win10提高工作效率</title>
    <link href="http://blog.madeai.cn/articles/p16.html"/>
    <id>http://blog.madeai.cn/articles/p16.html</id>
    <published>2018-07-07T14:43:30.000Z</published>
    <updated>2020-08-28T11:54:09.394Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/windows-icon.png" alt="windows-icon"></p><a id="more"></a><p><meting-js server="netease" type="song" id="5197160"></meting-js></p><h3 id="windows-10-快捷键"><a href="#windows-10-快捷键" class="headerlink" title="windows 10 快捷键"></a>windows 10 快捷键</h3><h5 id="1-截图"><a href="#1-截图" class="headerlink" title="1. 截图"></a>1. 截图</h5><table><thead><tr><th>快捷键</th><th>是否保存到剪贴板</th><th>是否保存到目录</th><th>是否可选区域</th></tr></thead><tbody><tr><td>win+shift+s</td><td>是</td><td>否</td><td>是</td></tr><tr><td>printscreen</td><td>是</td><td>是(onedrive)</td><td>否(全屏)</td></tr><tr><td>alt+printscreen</td><td>是</td><td>是(onedrive)</td><td>否(当前窗口)</td></tr><tr><td>win+printscreen</td><td>是</td><td>是</td><td>否(全屏)</td></tr></tbody></table><h5 id="2-窗口操作"><a href="#2-窗口操作" class="headerlink" title="2. 窗口操作"></a>2. 窗口操作</h5><ul><li><p>切换当前工作窗口用<code>win+tab</code>或<code>alt+tab</code></p></li><li><p><code>alt+f4</code>关闭当前窗口</p></li><li><p><code>win+↓</code>缩小当前窗口至任务栏</p></li><li><p><code>win+↑</code>放大当前窗口至全屏</p></li><li><p><code>win+m</code>缩小所有窗口至任务栏,恢复缩小的窗口用<code>win+shift+m</code></p></li><li><p><code>win+d</code>缩小所有窗口至任务栏,恢复缩小的窗口用<code>win+d</code></p></li></ul><h5 id="3-文件操作"><a href="#3-文件操作" class="headerlink" title="3. 文件操作"></a>3. 文件操作</h5><ul><li><p><code>win+e</code>打开资源管理器</p></li><li><p><code>win+shift+n</code>新建文件夹</p></li><li><p><code>选中文件+f2</code>文件重命名</p></li><li><p><code>alt+double click</code>查看文件属性</p></li><li><p><code>选中文件+ctrl+d</code>删除文件(不可恢复)</p></li></ul><h5 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h5><ul><li><p><code>win+a</code>打开通知面板</p></li><li><p><code>win+p</code>打开投影(此电脑投影到同一局域网下别的设备)</p></li><li><p><code>win+k</code>同一局域网下别的设备(智能手机)投影到此电脑</p></li><li><p><code>win+t</code>任务栏切换图标,配合<code>win+shift+t</code>和<code>win+number</code>使用效果更佳</p></li><li><p><code>win+break</code>控制面板中的系统界面(设置环境变量佷方便)</p></li><li><p><code>win+r</code>打开运行界面(输入后可以快捷地打开一些小工具)</p></li></ul><h3 id="windows10运行界面"><a href="#windows10运行界面" class="headerlink" title="windows10运行界面"></a>windows10运行界面</h3><ul><li><p>mspaint—画图工具</p></li><li><p>osk—虚拟键盘(一些tablet computer会用到)</p></li><li><p>psr—步骤记录器</p></li><li><p>ftp—windows10自带的文件传输协议(其他版本的windows应该也有)</p></li><li><p>notepad—windows最**的记事本(推荐用notepad++,你会爱上它)</p></li><li><p>sysdm.cpl—打开系统属性界(可以方便地设置远程协助)</p></li><li><p>mstsc(microsoft terminal services client)—打开远程桌面连接(remote desktop connecting)</p></li><li><p>cmd—windows自带的dos系统</p></li></ul><hr><p>ps:由于正在身为学生的博主正在学习英语所以会穿插一些英语不要见怪…</p><p>and:未完待续…</p><p>other:一些格式上的问题不习惯的话<a href="../item/example/windows10-hotkey.html">点我</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/windows-icon.png&quot; alt=&quot;windows-icon&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="DOS" scheme="http://blog.madeai.cn/tags/DOS/"/>
    
      <category term="hotkey" scheme="http://blog.madeai.cn/tags/hotkey/"/>
    
  </entry>
  
  <entry>
    <title>网红辞职信</title>
    <link href="http://blog.madeai.cn/articles/p15.html"/>
    <id>http://blog.madeai.cn/articles/p15.html</id>
    <published>2018-06-30T06:30:11.000Z</published>
    <updated>2020-08-28T15:07:21.140Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/p15-1.png" alt="banner"></p><a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景:"></a>背景:</h3><pre><code>前几天抖音头条刷的特别火的臣退了的视频被人拿来写辞职信,于是就蹭一波热度.</code></pre><p>头条上的视频</p>{% dplayer "url=http://publicereadmsmnsnsnnss.oss-cn-hangzhou.aliyuncs.com/_14-39-09.mp4 " "loop=no" "theme=#FADFA3" "autoplay=false" %}<h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><h4 id="样式"><a href="#样式" class="headerlink" title="样式:"></a>样式:</h4><pre><code>&lt;style&gt;    .main{        width: 500px;        height: 250px;        border: 2px solid black;        margin: 0 auto;        position:absolute;        left: 500px;    }    .title,.chose{        text-align: center;    }    .chose{        margin:40px;    }    .yes{        margin-right: 40px;    }&lt;/style&gt;</code></pre><h4 id="dom树"><a href="#dom树" class="headerlink" title="dom树:"></a>dom树:</h4><pre><code class="html">&lt;div class=&quot;main&quot;&gt;    &lt;h2 class=&quot;title&quot;&gt;辞职信&lt;/h2&gt;    &lt;article&gt;老板我要辞职&lt;img width=&quot;100&quot; src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1530346447488&amp;di=cdd760f50b3188a667921dc3de943d38&amp;imgtype=0&amp;src=http%3A%2F%2F1873.img.pp.sohu.com.cn%2Fimages%2Fblog%2F2011%2F5%2F3%2F13%2F13%2Fu115243949_1306e5597e5g214.gif&quot;&gt;,请批准!&lt;/article&gt;    &lt;div class=&quot;chose&quot;&gt;&lt;button class=&quot;yes&quot; id=&quot;yes&quot;&gt;同意&lt;/button&gt;&lt;button class=&quot;no&quot; id=&quot;no&quot;&gt;不同意&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;</code></pre><h4 id="javascript"><a href="#javascript" class="headerlink" title="javascript:"></a>javascript:</h4><pre><code class="script">&lt;script type=&quot;text/javascript&quot;&gt;    var no=document.getElementById(&quot;no&quot;);    var yes=document.getElementById(&quot;yes&quot;);    var main=document.querySelector(&quot;.main&quot;);    no.onmouseover=function () {        var x=Math.random() * (500-this.offsetWidth);        var y=Math.random()*(250-this.offsetHeight);        this.setAttribute(&#39;style&#39;,            &#39;position:absolute;&#39;+            &#39;left:&#39;+x+&#39;px;&#39;+            &#39;top:&#39;+y+&#39;px;&#39;        );    }    yes.onmousedown=function () {    main.innerHTML=&quot;&lt;h3 style=&#39;size: 30px; color: orangered;&#39;&gt;臣退了&lt;/h3&gt;,这一退也许就是一辈子~~~~&quot;;    }&lt;/script&gt;</code></pre><hr><p>实际演示请转向<a href="http://blog.madeai.cn/item/example/resign.html">demo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/p15-1.png&quot; alt=&quot;banner&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS" scheme="http://blog.madeai.cn/tags/JS/"/>
    
      <category term="H5" scheme="http://blog.madeai.cn/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>ajax异步加载</title>
    <link href="http://blog.madeai.cn/articles/p12.html"/>
    <id>http://blog.madeai.cn/articles/p12.html</id>
    <published>2018-06-02T09:17:18.000Z</published>
    <updated>2020-08-27T13:36:43.506Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/p12-1.png" alt="p12-1" title="p12-1"></p><a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre><code>ajax即Asynchronous Javascript And XML,异步javascript和XML;json即JavaScript Object Notation,javascript对象标记.</code></pre><h3 id="使用原生js创建XMLHttpRequest对象"><a href="#使用原生js创建XMLHttpRequest对象" class="headerlink" title="使用原生js创建XMLHttpRequest对象"></a>使用原生js创建XMLHttpRequest对象</h3><pre><code class="javascript">var xhr = new XMLHttpRequest;xhr.open(&quot;GET&quot;, &quot;https://blog.madeai.cn/api&quot;);xhr.onload = function () {    var data = JSON.parse(xhr.responseText);    doSomething(data);}xhr.send();</code></pre><ol><li>其中<code>xhr.open();</code>有3个传入参数,第一个是数据传输的方式,最常用的就是<code>post</code>,<code>get</code>,<code>put</code>,<code>delect</code>了.第二个是后端的URL,值得注意的是如果是<strong>跨域</strong>的话,需要在后端PHP代码前添加<code>header(&quot;Access-Control-Allow-Origin: *&quot;);</code>,或者用代理.<br>第三参数是Boolean型的可选项,表示是否异步加载;</li><li><code>xhr.onload();</code>是在数据加载完成后要处理的事情;也可以用<code>xhr.onreadystatechange=doSomething;</code>.<blockquote><p>onreadystatechange 是一个事件句柄。它的值 (state_Change) 是一个函数的名称，当 XMLHttpRequest 对象的状态发生改变时，会触发此函数。状态从 0 (uninitialized) 到 4 (complete) 进行变化。仅在状态为 4 时，我们才执行代码。</p></blockquote></li><li>最后一个<code>xhr.send();</code>就是将请求发送到服务器端了;</li></ol><h3 id="使用jquery封装的-ajax-和-getJSON-函数"><a href="#使用jquery封装的-ajax-和-getJSON-函数" class="headerlink" title="使用jquery封装的$ajax()和$getJSON()函数"></a>使用jquery封装的$ajax()和$getJSON()函数</h3><ul><li>$ajax比较灵活哦,异步加载任何格式的数据;<pre><code class="javascript">$.ajax({  type: &quot;POST&quot;,//像登陆一样的比较重要的数据要用post,放进请求体里哦;  url: &quot;http://madeai.cn/api&quot;,  dataType: &quot;json&quot;,  data: {      username:444,      password:6666//用md5签名,数据传输更安全;  },  success: function (obj) {      doSomething(obj);  },  error: function(XMLHttpRequest, textStatus, errorThrown) {      console.log(XMLHttpRequest.status,XMLHttpRequest.status,textStatus);  },</code></pre></li><li>用$getJSON()来获取json数据;<pre><code class="javascript">$.getJSON(&quot;http://madeai.cn/api&quot;, &quot;&quot;, function (data) {  $.each(data[&quot;result&quot;].tracks, function (i, item) {//each循环 使用$.each方法遍历返回的数据data  /*doSomething;   *function();中第一个参数是数组的索引index,第二个是原数组对象;   */  });});</code></pre></li></ul><p>jquery还封装了类似<code>$get()</code>,<code>$.post()</code>的函数;</p><hr><p>demo click <a href="https://huangyebiaoke.github.io/item/example/ajax&json.html" target="_blank" rel="noopener">here</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/p12-1.png&quot; alt=&quot;p12-1&quot; title=&quot;p12-1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS" scheme="http://blog.madeai.cn/tags/JS/"/>
    
      <category term="AJAX" scheme="http://blog.madeai.cn/tags/AJAX/"/>
    
      <category term="JSON" scheme="http://blog.madeai.cn/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>CMD批处理命令的强大</title>
    <link href="http://blog.madeai.cn/articles/p11.html"/>
    <id>http://blog.madeai.cn/articles/p11.html</id>
    <published>2018-04-27T23:52:38.000Z</published>
    <updated>2020-08-28T11:55:27.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre><code>前几天我用quickbms批量提取韩游天命之子（destiny_child）的pck文件，提取出来的是一个一个文件夹：</code></pre><p><img src="/assets/blogimg/p11-1.png" alt="p11-1" title="p11-1"><br>    每个文件夹里是这样的文件：<br><img src="/assets/blogimg/p11-2.png" alt="p11-2" title="p11-2"><br>现在我需要：</p><ol><li>将每个子文件夹里以.dat为后缀的文件批量改成.exp.json为后缀;将每个子文件夹里以.txt为后缀的文件批量改成.mtn为后缀.</li><li>在每个子文件夹里建立3个文件夹：expressions，montions，textures.</li><li>将每个子文件夹里.exp.json为后缀的文件放入expressions文件夹，以.mtn为后缀的文件放入montions文件夹，以png为后缀的文件放入textures文件夹.<h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3> 毫无疑问，在图形界面面对200多个子文件夹做复制粘贴的重复工作不仅枯燥而且效率低下。那么有没有更快捷的方法呢？答案是有，下面有请cmd批处理命令！！！！<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3></li><li>对于我们以上提出的第一个<code>for /r %i in (*.txt) do ren &quot;%i&quot; *.mtn</code>命令是行之有效的。他的作用是遍历output这个主文件夹下的所有子文件夹，并且把.txt后缀改为.mtn。%i这个变量代表.txt,就是不断在每个子目录下运行<code>ren *.txt *.mtn</code>这个命令。</li><li>对于第二个我们可以用<code>for /d %i in (*) do md &quot;%~fsi\expressions&quot; &quot;%~fsi\motions&quot; %~fsi\textures&quot;</code>这个命令来完成。意思就是不断在每个子目录下运行<code>md &quot;\expressions&quot; &quot;\motions&quot; &quot;\textures&quot;</code>这个命令。</li><li>对于第三个<code>for /d %i in (*) do move &quot;%~fsi\*.exp.json&quot; &quot;%~fsi\expressions&quot;</code>意思大同小异。<br>然后我们看看效果：<br><img src="/assets/blogimg/p11-3.png" alt="p11-3" title="p11-3"><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3></li></ol><ul><li>小彩蛋：<br><img src="/assets/blogimg/p11-4.gif" alt="p11-4" title="p11-4"></li><li>参考：</li></ul><ol><li><a href="https://tieba.baidu.com/p/5218112440" title="【教程】提取韩游【天命之子】的人物模型" target="_blank" rel="noopener">【教程】提取韩游【天命之子】的人物模型</a></li><li><a href="https://tieba.baidu.com/p/5260198912?share=9105&fr=share&see_lz=1" title="天命之子 live2d打包教程" target="_blank" rel="noopener">天命之子 live2d打包教程</a></li><li><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" title="给博客添加能动的看板娘(Live2D)" target="_blank" rel="noopener">给博客添加能动的看板娘(Live2D)</a></li><li><a href="https://tieba.baidu.com/p/3192612677?pn=1" title="24小时快速建模[Live2D Cubism 2.0 closed beta]报告" target="_blank" rel="noopener">24小时快速建模[Live2D Cubism 2.0 closed beta]报告</a></li></ol><ul><li>demo click <a href="http://www.madeai.cn/live2d/" title="demo" target="_blank" rel="noopener">here</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;前几天我用quickbms批量提取韩游天命之子（destiny_child）的pck文件，提取出来的是一个一个文件夹：&lt;/c
      
    
    </summary>
    
    
      <category term="CMD" scheme="http://blog.madeai.cn/tags/CMD/"/>
    
      <category term="DOS" scheme="http://blog.madeai.cn/tags/DOS/"/>
    
      <category term=".bat" scheme="http://blog.madeai.cn/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>关于mysql</title>
    <link href="http://blog.madeai.cn/articles/about-mysql.html"/>
    <id>http://blog.madeai.cn/articles/about-mysql.html</id>
    <published>2018-03-26T08:52:37.000Z</published>
    <updated>2020-08-28T12:27:09.986Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/p10-1.png" alt="login mysql" title="login mysql"></p><a id="more"></a><h3 id="如何开启mysql的远程连接"><a href="#如何开启mysql的远程连接" class="headerlink" title="如何开启mysql的远程连接"></a>如何开启mysql的远程连接</h3><p>1.直接修改user表</p><pre><code class="plsql">    use mysql;//选择mysql库    update user set host=&#39;%&#39; where user=&#39;root&#39;;//把user表内的root用户的host设置为任意ip    flush privileges;//刷新数据库</code></pre><p>2.root用户远程连接数据库</p><pre><code class="plsql">    grant all privileges on *.* to &#39;user&#39;@&#39;%&#39; identified by &#39;password&#39; with grant option;    flush privileges;</code></pre><p>上面第一行代码的意思是允许user这个用户在任意ip使用password这个密码登陆mysql，如果没有user这个用户就会创建一个；</p><p>让我们来查一下可以远程登陆的用户吧:<br><img src="/assets/blogimg/p10-2.png" alt="select" title="select"><br>这样就可以在本地使用<code>mysql -h *** -u root -p</code>连接远程数据库啦，也可以使用图形化工具如<strong>Navicat for MySQL</strong>管理你的数据库了；<br>如果你的mysql还不可以远程连接的话，你可能需要进入<code>/etc/mysql/my.conf</code>把<code>bind-address = 127.0.0.1</code>改为<code>bind-address = 0.0.0.0</code>或者直接用#注释掉。</p><h3 id="关于一些sql语法；"><a href="#关于一些sql语法；" class="headerlink" title="关于一些sql语法；"></a>关于一些sql语法；</h3><table><thead><tr><th align="left">operation</th><th align="left">usage</th></tr></thead><tbody><tr><td align="left">创建数据库</td><td align="left">CREATE DATABASE STUDENTS</td></tr><tr><td align="left">删除数据库</td><td align="left">DROP DATABASE STUDENTS</td></tr><tr><td align="left">创建数据表</td><td align="left">CREATE TABLE table_name (column_name column_type);</td></tr><tr><td align="left">删除数据表</td><td align="left">DROP TABLE table_name</td></tr><tr><td align="left">增(insert)</td><td align="left">INSERT INTO table_name ( field1, field2,…fieldN )VALUES( value1, value2,…valueN );</td></tr><tr><td align="left">删(delete)</td><td align="left">DELETE FROM stu_info WHERE stu_no = ‘035’;</td></tr><tr><td align="left">查(select)</td><td align="left">select * from stu_info;</td></tr><tr><td align="left">改(update)</td><td align="left">UPDATE stu_info SET field1=value1 WHERE…</td></tr></tbody></table><p>其中关于创建数据表：</p><pre><code class="plsql">CREATE TABLE IF NOT EXISTS `stuInfo`(   `stuId` INT UNSIGNED AUTO_INCREMENT,//自增；   `stuNo`  CHAR(6)  NOT  NULL,   `stuName` VARCHAR(40) NOT NULL,   `stuAge` INTEGER,   `stuAddress` VARCHAR(100) NOT NULL,   `subDate` DATE,//上传时间NOW();   PRIMARY KEY ( `stuId` )//主键;)ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre><p>其中关于往数据表中增加一条数据：</p><pre><code class="plsql">INSERT INTO stu_info(stu_no,stu_name,stu_age,submission_date) VALUES(&#39;032&#39;,&#39;Ford&#39;,22,SYSDATE);</code></pre><p>往数据表中增加多条数据：</p><pre><code class="plsql">INSERT INTO table_name  (field1, field2,...fieldN)VALUES(valueA1,valueA2,...valueAN),(valueB1,valueB2,...valueBN),(valueC1,valueC2,...valueCN)......;</code></pre><p>改数据表中的数据：</p><pre><code class="plsql">UPDATE stu_info SET stu_age = 26, submission_date = &#39;2012-09-18&#39;WHERE stu_no= &#39;035&#39;;</code></pre><p><img src="/assets/blogimg/p10-3.png" alt="select" title="select"></p><p>more…click <a href="http://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener">runoob.com</a><br>demo…click <a href="http://www.madeai.cn:8888/test" target="_blank" rel="noopener">here</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/p10-1.png&quot; alt=&quot;login mysql&quot; title=&quot;login mysql&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://blog.madeai.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>关于java的各种包</title>
    <link href="http://blog.madeai.cn/articles/p9.html"/>
    <id>http://blog.madeai.cn/articles/p9.html</id>
    <published>2018-03-18T08:08:02.000Z</published>
    <updated>2020-08-28T11:56:00.476Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在整个JavaSE API中，大约包含1 200个包，总体来看，包名第一个名称主要有3种：java、javax和org。其中以java开头的包名是基础语言包，以javax开头的属于扩展包（其中x是extend的简写），而以org开头的则是第三方组织提供的功能包（organization的简写）。<br>下面简单介绍几个Java SE API的主要包。<br>（1）java．lang，是Java语言的核心包，是编写Java程序所需要的基本类和接口，包括Object类、System类、Class类、异常处理类、线程类等。这个包由编译器自动引入。<br>（2）java．applet，提供Applet执行时需要的类。<br>（3）java．awt，提供操作图形用户界面的基本功能。<br>（4）java．io，提供Java程序进行输入输出的类，以及目录和文件管理类。<br>（5）java．net，提供实现网络功能。<br>（6）java．util，提供实用程序类及集合类等常用的工具类。<br>（7）java．sql，提供使Java程序具有访问不同数据库的能力。<br>（8）java．rmi，提供远程连接与载入，实现了远程方法调用的功能。</p></blockquote><h3 id="java-util-Arrays"><a href="#java-util-Arrays" class="headerlink" title="java.util.Arrays;"></a>java.util.Arrays;</h3><p>usage：</p><pre><code class="java">    import java.util.Arrays;    Arrays.sort(arr);//升序排序    Arrays.toString(arr);//将数组转为字符串</code></pre><h3 id="java-util-Scanner"><a href="#java-util-Scanner" class="headerlink" title="java.util.Scanner;"></a>java.util.Scanner;</h3><pre><code class="java">import java.util.Scanner;Scanner input = new Scanner(System.in);String name=input.next();int num=input.nextIn();</code></pre><h3 id="关于equals；"><a href="#关于equals；" class="headerlink" title="关于equals；"></a>关于equals；</h3><p><img src="http://img.mukewang.com/53703cb10001f78a06340312.jpg" alt="picture" title="picture"></p><pre><code class="java">import java.util.*;if( a!=null &amp;&amp; a.equals(b) ){.............}if(Objects.equals(a,b)){.......}</code></pre><p>more…click <a href="https://docs.oracle.com/javase/9/index.html" target="_blank" rel="noopener">docs.oracle.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在整个JavaSE API中，大约包含1 200个包，总体来看，包名第一个名称主要有3种：java、javax和org。其中以java开头的包名是基础语言包，以javax开头的属于扩展包（其中x是extend的简写），而以org开头的则是第三方组织
      
    
    </summary>
    
    
      <category term="Java" scheme="http://blog.madeai.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>git创建版本库和关联远程库</title>
    <link href="http://blog.madeai.cn/articles/p8.html"/>
    <id>http://blog.madeai.cn/articles/p8.html</id>
    <published>2017-11-17T02:53:24.000Z</published>
    <updated>2020-08-28T11:39:15.939Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogimg/p8-1.png" alt="banner"></p><a id="more"></a><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><ol><li>mkdir LearningDataStructure//创建本地文件夹</li><li>cd LearningDataStructure//进入文件夹</li><li>pwd//显示当前目录<pre><code class="bash"> /e/LearningDataStructure</code></pre></li><li>git init//初始化<br> Initialized empty Git repository in /e/LearningDataStructure/.git/</li><li>git add README.md//把文件添加到仓库</li><li>git commit -m “这是一个readme文件”//把文件提交到仓库并添加描述<pre><code class="bash"> [master (root-commit) cb926e7] wrote a readme file  1 file changed, 2 insertions(+)  create mode 100644 readme.txt</code></pre><h2 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h2></li><li>click “Create a new repository”</li><li>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:huangyebiaoke/LearningDataStructure.git//本地关联远程库</li><li>git remote remove origin//取消本地关联远程库</li><li>git push -u origin master//把本地内容推送到远程库<h2 id="git思维导图"><a href="#git思维导图" class="headerlink" title="git思维导图"></a>git思维导图</h2><img src="/assets/blogimg/p8-2.png" alt="git picture"></li></ol><hr><p>附:<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰老师的git教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogimg/p8-1.png&quot; alt=&quot;banner&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://blog.madeai.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>线性表的增删查改</title>
    <link href="http://blog.madeai.cn/articles/p7.html"/>
    <id>http://blog.madeai.cn/articles/p7.html</id>
    <published>2017-11-16T07:29:36.000Z</published>
    <updated>2020-08-28T11:56:58.137Z</updated>
    
    <content type="html"><![CDATA[<p>part1:头部</p><pre><code class="c++">#include&lt;stdio.h&gt;#define datatype int#define MAXSIZE 100typedef struct{    datatype data[MAXSIZE];    int last;}SeqList;</code></pre><p>part2:初始化线性表 建立空表</p><pre><code class="c++">SeqList *InIt(){    SeqList *L;    L=new SeqList;//L=(SeqList*)malloc(sizeof(SeqList));    L-&gt;last=-1;    return L;}</code></pre><p>part3:插入 尾插法</p><pre><code class="c++">int InsList(SeqList *L, int i, datatype x){    if (i&lt;0||i&gt;MAXSIZE){        printf(&quot;要插入点不在范围内&quot;);        return -1;    }    if (L-&gt;last==MAXSIZE){        printf(&quot;线性表已满&quot;);        return -1;    }    for (int j=L-&gt;last+1; j&gt;=i; --j){        L-&gt;data[j]=L-&gt;data[--j];/* data(j++) */        }    L-&gt;data[i]=x;    L-&gt;last++;//插入一个新元素 last指针后移    return 1;}</code></pre><p>part4:删除</p><pre><code class="c++">int DelList(SeqList *L, int i){    if (i&lt;0||i&gt;MAXSIZE){        printf(&quot;要删除点不在范围内&quot;);        return -1;    }    for (int j=i; j&lt;=L-&gt;last-1; ++j){        L-&gt;data[j]=L-&gt;data[++j];    }    L-&gt;last--;    return 1;}</code></pre><p>part5:按值查找</p><pre><code class="c++">int SeacherList(SeqList *L, datatype x){    for (int j=0; j&lt;=L-&gt;last; ++j){        if(L-&gt;data[j]==x){        return j;        }    }}</code></pre><p>part6:输出控制台</p><pre><code class="c++">void ShowList(SeqList *L){    for (int j=0; j&lt;=L-&gt;last; ++j){        printf(&quot;%d\t&quot;,L-&gt;data[j]);    }}</code></pre><p>part7:主函数 调用</p><pre><code class="c++">int main(int argc, char const *argv[]){//int main(void)    int x=0;    SeqList *L;    L=InIt();    for (int i=0; ; ++i){        scanf(&quot;%d&quot;,&amp;x);        if (x==-1)            break;        InsList(L,i,x);    }    ShowList(L);    return 0;}</code></pre><p>结果:<br><img src="/assets/blogimg/p9-1.png" alt="result"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;part1:头部&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;#include&amp;lt;stdio.h&amp;gt;

#define datatype int
#define MAXSIZE 100

typedef struct{
    datatype data[
      
    
    </summary>
    
    
      <category term="C" scheme="http://blog.madeai.cn/tags/C/"/>
    
      <category term="CPP" scheme="http://blog.madeai.cn/tags/CPP/"/>
    
  </entry>
  
  <entry>
    <title>My idol--Obama</title>
    <link href="http://blog.madeai.cn/articles/p6.html"/>
    <id>http://blog.madeai.cn/articles/p6.html</id>
    <published>2017-11-02T14:23:47.000Z</published>
    <updated>2020-08-27T13:39:29.140Z</updated>
    
    <content type="html"><![CDATA[<img src="https://upload.wikimedia.org/wikipedia/commons/8/8d/President_Barack_Obama.jpg" alt="Obama" align="left" hspace="30" style="width=3rem;border-radius: 5px;box-shadow: 0.6px 0.6px o.5px #888888;">    As an old saying goes: An idol is an example to advise you what should do and what should not do.everyone hastheir own idol.Maybe actor singer or other famous people.    My idol is Obama--the first African American to have served as the 44th President of the United States.He is so humorous,wise and farsighted.He is so glamour that attract me to look forward with him.<a id="more"></a>    As a president,he did so many great for America.The first thing he did is promote the establishment of a world without nuclear weapons in 2009.The second thing is killed BenLaden--the biggest terrorist.without Obama's order,who care you live or die.The third event occur in 2008--the global financial crisis.The president Obama saved America,again.    As a husband,he love his wife Michele so much,no somking no drinking and no whoring.As a father,he also pay withhis daughter whenever how busy he is.    Oboma is so great person that's why I like him.<p>附：</p><ol><li><a href="https://en.wikipedia.org/wiki/Barack_Obama" target="_blank" rel="noopener">wiki/Barack_Obama</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/8d/President_Barack_Obama.jpg&quot; alt=&quot;Obama&quot; align=&quot;left&quot; hspace=&quot;30&quot; style=&quot;width=3rem;border-radius: 5px;box-shadow: 0.6px 0.6px o.5px #888888;&quot;&gt;
    As an old saying goes: An idol is an example to advise you what should do and what should not do.everyone has
their own idol.Maybe actor singer or other famous people.
    My idol is Obama--the first African American to have served as the 44th President of the United States.He is so 
humorous,wise and farsighted.He is so glamour that attract me to look forward with him.
    
    </summary>
    
    
      <category term="English" scheme="http://blog.madeai.cn/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>撒野</title>
    <link href="http://blog.madeai.cn/articles/i-can-not-hear-you.html"/>
    <id>http://blog.madeai.cn/articles/i-can-not-hear-you.html</id>
    <published>2017-10-27T04:19:00.000Z</published>
    <updated>2020-08-28T11:53:13.541Z</updated>
    
    <content type="html"><![CDATA[<p><meting-js server="netease" type="song" id="483937795"></meting-js></p><p>这首歌就一句话:好听！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;meting-js server=&quot;netease&quot; type=&quot;song&quot; id=&quot;483937795&quot;&gt;&lt;/meting-js&gt;&lt;/p&gt;
&lt;p&gt;这首歌就一句话:好听！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="think" scheme="http://blog.madeai.cn/tags/think/"/>
    
      <category term="music" scheme="http://blog.madeai.cn/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>什么是伴随矩阵？</title>
    <link href="http://blog.madeai.cn/articles/what-is-adjoint-matrix.html"/>
    <id>http://blog.madeai.cn/articles/what-is-adjoint-matrix.html</id>
    <published>2017-10-13T12:44:46.000Z</published>
    <updated>2020-08-26T08:00:47.276Z</updated>
    
    <content type="html"><![CDATA[<img src="/assets/blogimg/伴随矩阵.jpg"><a id="more"></a><h2>首先我们来看如何得到<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5" target="_blank" rel="noopener">伴随矩阵</a>:</h2>~~1.设A=（a<sub>ij</sub>）为n阶方阵2.A<sub>ij</sub>是|A|在（i，j）上a<sub>ij</sub>的代数余子式3.则全部由代数余子式组成的n阶方阵为A的伴随矩阵A*~~<h2>我们来弄清楚几个专有名词：</h2>~~|A|：n阶方阵的n阶行列式，行列式是一个数;a<sub>ij</sub>的元余子式：n阶行列式去除i行j列剩下的部分，记作M<sub>ij</sub>;a<sub>ij</sub>的代数余子式：A<sub>ij</sub>=(-1)<sup>i+j</sup>M<sub>ij</sub>;~~<p>现在知道什么叫伴随矩阵了吗？不知道点这里—&gt;<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5" target="_blank" rel="noopener">https://www.baidu.com/s?ie=UTF-8&amp;wd=伴随矩阵</a></p><h2>放图时间：</h2><img src="/assets/blogimg/cat1.jpg"><img src="/assets/blogimg/cat2.jpg"><img src="/assets/blogimg/cat3.jpg">]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/assets/blogimg/伴随矩阵.jpg&quot;&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://blog.madeai.cn/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>跳跳球</title>
    <link href="http://blog.madeai.cn/articles/mark-ball-game.html"/>
    <id>http://blog.madeai.cn/articles/mark-ball-game.html</id>
    <published>2017-10-06T08:12:38.000Z</published>
    <updated>2020-08-27T13:37:57.628Z</updated>
    
    <content type="html"><![CDATA[<p>这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：<br><img src="/assets/blogimg/item_game_tiaotiaoball_ball.png"></p><a id="more"></a><p>1.<a href="/item/game/tiaotiaoball/settime">计时器：</a></p><pre><code class="bash">&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;!--解决中文乱码的问题--&gt;    &lt;script&gt;        function init() {            setInterval(&quot;document.f.display.value=String(Number(document.f.display.value)+1)&quot;,1000);        }//定时器 每隔一秒加一次        /*function incre() {         document.f.display.value=String(Number(document.f.display.value)+1);         }*/    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init()&quot;&gt;    &lt;form name=&quot;f&quot;&gt;&lt;!--不写form总报错 不知道为啥--&gt;        &lt;input name=&quot;display&quot; type=&quot;text&quot; value=&quot;0&quot;/&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>2.<a href="/item/game/tiaotiaoball/ball1">用canvas插入img：</a></p><pre><code class="bash">&lt;html&gt;&lt;head&gt;    &lt;title&gt;ball&lt;/title&gt;    &lt;script type=&quot;text/javascript&quot;&gt;    var img1=new Image();    var img2=new Image();    img1.src=&quot;../../images/cool.jpg&quot;;    img2.src=&quot;../../images/dog.gif&quot;;    var ctx;    function init(){        ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);        ctx.drawImage(img1,10,20,50,50);        ctx.drawImage(img2,150,20,100,100);    }    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init();&quot;&gt;    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;        your browser don&#39;t support convas    &lt;/canvas&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>3.<a href="/item/game/tiaotiaoball/ball">跳跳球：</a></p><pre><code class="bash">&lt;html&gt;&lt;head&gt;    &lt;title&gt;ball&lt;/title&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;script type=&quot;text/javascript&quot;&gt;    var boxx=50,boxy=50,boxw=300,boxh=300;//盒子左上角据左边画布的距离，盒子左上角据上边画布的距离，盒子的宽高；    var ballx=20,bally=20,ballvx=2,ballvy=4,ballr=6;//球的初始位置（相对盒子），球的位移，球的半径；    var hshang=boxy+ballr,hxia=boxh+boxy-ballr,hzuo=boxx+ballr,hyou=boxw+boxx-ballr;//里面的小盒子 用于检测碰撞；    var ctx;//保存上下文 不太懂上下文是啥    function init(){        ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);//获取canvas的上下文        ctx.fillStyle=&quot;rgb(200.0.0)&quot;;//设置填充颜色        ctx.lineWidth=6; //设置线宽        moveball();//先显示ball        setInterval(moveball,10); //setTimeout()只执行一次事件 不能重复调用moveball事件；    }    function moveball() {        ctx.clearRect(boxx,boxy,boxw,boxh);//擦除整个盒子包括ball 第一次运行不会有任何影响        moveandcheck();        ctx.beginPath();        ctx.arc(ballx,bally,ballr,0,2*Math.PI,true);//画圆        ctx.fill();        ctx.strokeRect(boxx,boxy,boxw,boxh);//画盒子    }    function moveandcheck() {//检测碰撞        var perballx=ballx+ballvx,perbally=bally+ballvy;        if(perballx&gt;hyou) {//如果超过小盒子的右边            ballvx=-ballvx;//改变水平方向            perballx=hyou; //&quot;设置下一个x等于这个边界值&quot; 没看懂啥意思；        }        if(perballx&lt;hzuo) {            perballx=hzuo;            ballvx=-ballvx;        }        if(perbally&gt;hxia) {            perbally=hxia;            ballvy=-ballvy;        }        if(perbally&lt;hshang) {            perbally=hshang;            ballvy=-ballvy;        }        ballx=perballx;        bally=perbally;    }    function change() {        ballvx=Number(document.f.vx.value);        ballvy=Number(document.f.vy.value);    }//在form标签里调用onsubmit=&quot;return change();&quot;需要设置return false不然会整个刷新页面    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init();&quot;&gt;    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;        your browser don&#39;t support convas    &lt;/canvas&gt;    &lt;form name=&quot;f&quot; id=&quot;f&quot;&gt;        水平速度:&lt;input name=&quot;vx&quot; id=&quot;vx&quot; type=&quot;number&quot; value=&quot;2&quot;&gt;        垂直速度:&lt;input name=&quot;vy&quot; id=&quot;xy&quot; type=&quot;number&quot; value=&quot;4&quot;&gt;        &lt;input type=&quot;button&quot; value=&quot;change&quot; onclick=&quot;change()&quot;&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>附：<br>1.<a href="http://www.friendsofed.com/downloads.html" target="_blank" rel="noopener">The Essential Guide to HTML5—using games to learn html5 and javascript</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：&lt;br&gt;&lt;img src=&quot;/assets/blogimg/item_game_tiaotiaoball_ball.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS" scheme="http://blog.madeai.cn/tags/JS/"/>
    
      <category term="H5" scheme="http://blog.madeai.cn/tags/H5/"/>
    
      <category term="canvas" scheme="http://blog.madeai.cn/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>扔骰（tou）子小游戏</title>
    <link href="http://blog.madeai.cn/articles/make-dice-game.html"/>
    <id>http://blog.madeai.cn/articles/make-dice-game.html</id>
    <published>2017-10-05T14:09:18.000Z</published>
    <updated>2020-08-27T13:37:49.340Z</updated>
    
    <content type="html"><![CDATA[<p>这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：</p><a id="more"></a><h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1:"></a>demo1:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;craps&lt;/title&gt;    &lt;script&gt;        function init() {            var ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);            ctx.beginPath();            ctx.fillStyle = &quot;rgb(200,0,200)&quot;;            ctx.arc(200,20,200,0,0.5*Math.PI,true);            ctx.lineWidth=5;            ctx.closePath();            ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;            ctx.stroke();            ctx.fill();        }    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init();&quot; &gt;    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;      your explor don&#39;t support h5 cavas    &lt;/canvas&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2:"></a>demo2:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;craps&lt;/title&gt;    &lt;script&gt;        var sw=50;//骰子的宽高        var sh=50;        var cw=400;//画布的宽高        var ch=300;        var sx=50;//骰子的距画布的位置        var sy=50;        var pd=6;//圆点半径        var ctx;//保存上下文变量        function init() {            //var rs=1+math.floor(math.random()*6);            var rs=5;            drewface(rs);        }            function drewface(n) {                ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);                ctx.lineWidth=5;                ctx.clearRect(sx,sy,sw,sh);                ctx.strokeRect(sx,sy,sw,sh);                ctx.fillStyle = &quot;rgb(0,0,0)&quot;;                switch (n){                    case 1: drew1(); break;                    case 2: drew2(); break;                    case 3: drew2(); drew1();  break;                    case 4: drew4();  break;                    case 5: drew4(); drew1(); break;                    case 6: drew4(); drew2mid(); break;                }                /*ctx.beginPath();                ctx.arc(200,20,200,0,0.5*Math.PI,true);                ctx.lineWidth=5;                ctx.closePath();                ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;                ctx.stroke();                ctx.fill();*/                function drew1() {                    var px=sx+0.5*sw;                    var py=sy+0.5*sh;                    ctx.beginPath();                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.fill();                }                function drew2() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+sh-3-pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }                function drew4() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+sh-3-pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+3+pd;                    py=sy+sh-3-pd;                    ctx.closePath();/*注意要先结束左上角和右下角圆点的绘制不然会产生交叉感染*/                    ctx.fill();                    ctx.beginPath()                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }                function drew2mid() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+0.5*sh;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+0.5*sh;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }            }    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init();&quot; &gt;    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;300&quot;&gt;      your explor don&#39;t support h5 cavas    &lt;/canvas&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="demo3"><a href="#demo3" class="headerlink" title="demo3:"></a>demo3:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;craps&lt;/title&gt;    &lt;script&gt;        var sw=50;//骰子的宽高        var sh=50;        var cw=400;//画布的宽高        var ch=300;        var sx=50;//骰子的距画布的位置        var sy=50;        var pd=6;//圆点半径        var ctx;//保存上下文变量        function init() {            var rs=1+Math.floor(Math.random()*6);            drewface(rs);            document.f.point.value=rs;        }            function drewface(n) {                ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);                ctx.lineWidth=5;                ctx.clearRect(sx,sy,sw,sh);                ctx.strokeRect(sx,sy,sw,sh);                ctx.fillStyle = &quot;rgb(0,0,0)&quot;;                switch (n){                    case 1: drew1(); break;                    case 2: drew2(); break;                    case 3: drew2(); drew1();  break;                    case 4: drew4();  break;                    case 5: drew4(); drew1(); break;                    case 6: drew4(); drew2mid(); break;                }                /*ctx.beginPath();                ctx.arc(200,20,200,0,0.5*Math.PI,true);                ctx.lineWidth=5;                ctx.closePath();                ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;                ctx.stroke();                ctx.fill();*/                function drew1() {                    var px=sx+0.5*sw;                    var py=sy+0.5*sh;                    ctx.beginPath();                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.fill();                }                function drew2() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+sh-3-pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }                function drew4() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+sh-3-pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+3+pd;                    py=sy+sh-3-pd;                    ctx.closePath();/*注意要先结束左上角和右下角圆点的绘制不然会产生交叉感染*/                    ctx.fill();                    ctx.beginPath()                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+3+pd;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }                function drew2mid() {                    var px;                    var py;                    ctx.beginPath()                    px=sx+3+pd;                    py=sy+0.5*sh;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    px=sx+sw-3-pd;                    py=sy+0.5*sh;                    ctx.arc(px,py,pd,0,2*Math.PI,true);                    ctx.closePath();                    ctx.fill();                }            }    &lt;/script&gt;&lt;/head&gt;&lt;body onload=&quot;init();&quot; &gt;    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;300&quot;&gt;      your explor don&#39;t support h5 cavas    &lt;/canvas&gt;    &lt;form name=&quot;f&quot;&gt;        &lt;input type=&quot;submit&quot; value=&quot;扔骰子&quot;&gt;        你的点数是&lt;input name=&quot;point&quot; type=&quot;text&quot; value=&quot; &quot;&gt;    &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>附：<br>1.<a href="http://www.friendsofed.com/downloads.html" target="_blank" rel="noopener">The Essential Guide to HTML5—using games to learn html5 and javascript</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS" scheme="http://blog.madeai.cn/tags/JS/"/>
    
      <category term="H5" scheme="http://blog.madeai.cn/tags/H5/"/>
    
      <category term="canvas" scheme="http://blog.madeai.cn/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>就是不听话</title>
    <link href="http://blog.madeai.cn/articles/just-fuck-you.html"/>
    <id>http://blog.madeai.cn/articles/just-fuck-you.html</id>
    <published>2017-10-04T19:58:57.000Z</published>
    <updated>2020-08-27T13:35:02.834Z</updated>
    
    <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=15018146&cid=24462732&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=15018146&amp;cid=24462732&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot;
      
    
    </summary>
    
    
      <category term="think" scheme="http://blog.madeai.cn/tags/think/"/>
    
  </entry>
  
</feed>
