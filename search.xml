<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于mysql</title>
    <url>/articles/about-mysql.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/p10-1.png" alt="login mysql" title="login mysql"></p>
<h3 id="如何开启mysql的远程连接"><a href="#如何开启mysql的远程连接" class="headerlink" title="如何开启mysql的远程连接"></a>如何开启mysql的远程连接</h3><p>1.直接修改user表</p>
<pre><code class="plsql">    use mysql;//选择mysql库
    update user set host=&#39;%&#39; where user=&#39;root&#39;;//把user表内的root用户的host设置为任意ip
    flush privileges;//刷新数据库</code></pre>
<p>2.root用户远程连接数据库</p>
<pre><code class="plsql">    grant all privileges on *.* to &#39;user&#39;@&#39;%&#39; identified by &#39;password&#39; with grant option;
    flush privileges;</code></pre>
<p>上面第一行代码的意思是允许user这个用户在任意ip使用password这个密码登陆mysql，如果没有user这个用户就会创建一个；</p>
<p>让我们来查一下可以远程登陆的用户吧:<br><img src="/assets/blogimg/p10-2.png" alt="select" title="select"><br>这样就可以在本地使用<code>mysql -h *** -u root -p</code>连接远程数据库啦，也可以使用图形化工具如<strong>Navicat for MySQL</strong>管理你的数据库了；<br>如果你的mysql还不可以远程连接的话，你可能需要进入<code>/etc/mysql/my.conf</code>把<code>bind-address = 127.0.0.1</code>改为<code>bind-address = 0.0.0.0</code>或者直接用#注释掉。</p>
<h3 id="关于一些sql语法；"><a href="#关于一些sql语法；" class="headerlink" title="关于一些sql语法；"></a>关于一些sql语法；</h3><table>
<thead>
<tr>
<th align="left">operation</th>
<th align="left">usage</th>
</tr>
</thead>
<tbody><tr>
<td align="left">创建数据库</td>
<td align="left">CREATE DATABASE STUDENTS</td>
</tr>
<tr>
<td align="left">删除数据库</td>
<td align="left">DROP DATABASE STUDENTS</td>
</tr>
<tr>
<td align="left">创建数据表</td>
<td align="left">CREATE TABLE table_name (column_name column_type);</td>
</tr>
<tr>
<td align="left">删除数据表</td>
<td align="left">DROP TABLE table_name</td>
</tr>
<tr>
<td align="left">增(insert)</td>
<td align="left">INSERT INTO table_name ( field1, field2,…fieldN )VALUES( value1, value2,…valueN );</td>
</tr>
<tr>
<td align="left">删(delete)</td>
<td align="left">DELETE FROM stu_info WHERE stu_no = ‘035’;</td>
</tr>
<tr>
<td align="left">查(select)</td>
<td align="left">select * from stu_info;</td>
</tr>
<tr>
<td align="left">改(update)</td>
<td align="left">UPDATE stu_info SET field1=value1 WHERE…</td>
</tr>
</tbody></table>
<p>其中关于创建数据表：</p>
<pre><code class="plsql">CREATE TABLE IF NOT EXISTS `stuInfo`(
   `stuId` INT UNSIGNED AUTO_INCREMENT,//自增；
   `stuNo`  CHAR(6)  NOT  NULL,
   `stuName` VARCHAR(40) NOT NULL,
   `stuAge` INTEGER,
   `stuAddress` VARCHAR(100) NOT NULL,
   `subDate` DATE,//上传时间NOW();
   PRIMARY KEY ( `stuId` )//主键;
)ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre>
<p>其中关于往数据表中增加一条数据：</p>
<pre><code class="plsql">INSERT INTO stu_info(stu_no,stu_name,stu_age,submission_date) VALUES(&#39;032&#39;,&#39;Ford&#39;,22,SYSDATE);</code></pre>
<p>往数据表中增加多条数据：</p>
<pre><code class="plsql">INSERT INTO table_name  (field1, field2,...fieldN)
VALUES
(valueA1,valueA2,...valueAN),
(valueB1,valueB2,...valueBN),
(valueC1,valueC2,...valueCN)
......;</code></pre>
<p>改数据表中的数据：</p>
<pre><code class="plsql">UPDATE stu_info SET stu_age = 26, submission_date = &#39;2012-09-18&#39;WHERE stu_no= &#39;035&#39;;</code></pre>
<p><img src="/assets/blogimg/p10-3.png" alt="select" title="select"></p>
<p>more…click <a href="http://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener">runoob.com</a><br>demo…click <a href="http://www.madeai.cn:8888/test" target="_blank" rel="noopener">here</a></p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>AlphaGo论文读后感及其应用</title>
    <url>/articles/alpha-go.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="论文摘要"><a href="#论文摘要" class="headerlink" title="论文摘要"></a>论文摘要</h2><ol>
<li><p>这个方法使用估值神经网络来评估棋局，以及使用策略网络来选择如何落子。这些深度神经网络被一种新的组合来训练：使用了人类专业比赛数据的监督学习，以及自我对弈的强化学习。</p>
</li>
<li><p>在状态 s 时对搜索树进行剪枝，然后用一个近似估值函数v(s)≈v∗(s)取代状态 s 下面的子树，这个近似估值函数预测状态 s 之后的对弈结果。</p>
</li>
<li><p>搜索的宽度可以通过来自策略p(a|s)的样品动作来降低，这个策略是一个在位置 s 的可能下棋走子 a 概率分布。</p>
</li>
<li><p>蒙特卡洛树搜索使用蒙特卡洛走子方法，评估搜索树中每一个状态的估值。随着执行越来越多的模拟，这个搜索树成长越来越大，而且相关估值愈发精确。</p>
</li>
<li><p>然而，先前的工作已经受到了基于输入的线性组合的肤浅的策略或估值函数的限制。</p>
</li>
<li><p>它们使用很多层的神经网络，每一个安排在重叠的瓦片，用来构建愈发抽象的，局部代表的图片，我们为围棋程序部署了类似的体系架构。我们给程序传入了一个 19*19 大小棋局的图片，然后使用卷积神经网络来构建一个位置的代表。我们使用这些神经网络来降低搜索树的有效的深度和广度：通过估值网络来评估棋局，和使用策略网络来博弈取样。</p>
</li>
<li><p>我们的AlphaGo程序有效地把策略网络、估值网络，和蒙特卡洛搜索树结合在一起。</p>
</li>
<li><p>如果赢棋，结果等于 +1，如果输棋，结果等于 -1。然后权重在每一个步骤 t 更新：朝向最大化预期结果的方向随机梯度递增。</p>
</li>
<li><p>我们想出了新的自我对弈的数据集合，包含了三千万个不同的棋局，每一个都是从不同盘博弈中采样。每一盘博弈都是在 RL 策略网络和自己之间对弈，直到博弈本身结束。</p>
</li>
<li><p>AlphaGo 在把策略网络、估值网络和 MCTS 算法结合，MCTS 通过预测搜索选择下棋动作。</p>
</li>
<li><p>基于高性能蒙特卡洛树搜索算法的、蒙特卡洛树搜索</p>
</li>
<li><p>基于一个深度神经网络和树搜索的结合开发了一个围棋程序。我们首次，对围棋开发了一个有效地下棋走子选择器和棋局评估函数，它是基于被一个创新型地监督学习和强化学习地组合训练的深度网络。我们引入了新的搜索算法，它成功的把神经网络评估和蒙特卡洛滚动走子结合在一起。我们的程序 AlphaGo 把这些组成部分按照比例集成在一起，成为了一个高性能的树搜索引擎。</p>
</li>
<li><p>一个有挑战性的决策任务；一个难以对付的解空间；和一个非常复杂的最优解，以至于它看上去不可能世界使用策略或者估值函数逼近。</p>
</li>
<li><p>通过把树搜索和策略估值网络结合在一起，AlphaGo最终达到了围棋职业选手的水平。</p>
</li>
</ol>
<h2 id="AlphaGo应用——五子棋"><a href="#AlphaGo应用——五子棋" class="headerlink" title="AlphaGo应用——五子棋"></a>AlphaGo应用——五子棋</h2><h3 id="评估函数"><a href="#评估函数" class="headerlink" title="评估函数"></a>评估函数</h3><ol>
<li><p><strong>是对一个可走的空位子进行打分</strong>，如果ai白子落在这个空位置的分数越高，说明这个位置就越好，每次ai走棋就找到一个最好的空位置就行了。</p>
</li>
<li><p><strong>是对现在的棋盘局面进行打分</strong>。 ai白子首先找所有可以走的空位置，模拟走了这个位置以后，用f函数进行局面评分，如果走了这样的一个空位置的得分越高，说明这个位置就越好，每次ai走棋就找这样一个分数最高的位置。</p>
</li>
</ol>
<p>如果你只是想实现一个只看一步的ai，那么你可以用第一个函数也可以用第二个函数。但是如果你想要实现基于博弈树的极大极小搜索和α-β剪枝算法的”聪明”ai，就只能用第二个函数，因为<strong>博弈树必须要对局面打分，而不是对位置打分</strong>。</p>
<h3 id="棋型权重设计"><a href="#棋型权重设计" class="headerlink" title="棋型权重设计"></a>棋型权重设计</h3><table>
<thead>
<tr>
<th>棋型代号</th>
<th>棋型说明</th>
<th>权重</th>
<th>棋型代号</th>
<th>棋型说明</th>
<th><strong>权重</strong></th>
</tr>
</thead>
<tbody><tr>
<td>WIN</td>
<td>白赢</td>
<td>1000000</td>
<td>LOSE</td>
<td>黑赢</td>
<td>-10000000</td>
</tr>
<tr>
<td>FLEX4</td>
<td>白活4</td>
<td>50000</td>
<td>flex4</td>
<td>黑活4</td>
<td>-100000</td>
</tr>
<tr>
<td>BLOCK4</td>
<td>白冲4</td>
<td>400</td>
<td>block4</td>
<td>黑冲4</td>
<td>-100000</td>
</tr>
<tr>
<td>FLEX3</td>
<td>白活3</td>
<td>400</td>
<td>flex3</td>
<td>黑活3</td>
<td>-8000</td>
</tr>
<tr>
<td>BLOCK3</td>
<td>白眠3</td>
<td>20</td>
<td>block3</td>
<td>黑眠3</td>
<td>-50</td>
</tr>
<tr>
<td>FLEX2</td>
<td>白活2</td>
<td>20</td>
<td>flex2</td>
<td>黑活2</td>
<td>-50</td>
</tr>
<tr>
<td>BLOCK2</td>
<td>白眠2</td>
<td>1</td>
<td>block2</td>
<td>黑眠2</td>
<td>-3</td>
</tr>
<tr>
<td>FLEX1</td>
<td>白活1</td>
<td>1</td>
<td>flex1</td>
<td>黑活1</td>
<td>-3</td>
</tr>
</tbody></table>
<p>权重设计表格</p>
<h3 id="极大极小搜索"><a href="#极大极小搜索" class="headerlink" title="极大极小搜索"></a>极大极小搜索</h3><p>在博弈树中，当ai走棋时选择对自己最有利的位置节点走，而当玩家走棋时，是ai模拟玩家选择对玩家最有利的位置节点走。由于评估函数F对局势的评分是对于ai白子来说的，所以ai走棋时选择F最大的节点，模拟玩家走棋时选择F最小的节点（F越小，对ai越不利，对玩家越有利，ai模拟玩家时是认为玩家是”聪明”的），这就是称为极大极小搜索的缘故。</p>
<h3 id="α-β剪枝算法"><a href="#α-β剪枝算法" class="headerlink" title="α-β剪枝算法"></a>α-β剪枝算法</h3><p>α-β剪枝算法中每一个节点对应有一个α和一个β，α表示目前该节点的最好下界，β表示目前该节点的最好上界。在最开始时，α为负无穷，β为正无穷。然后进行搜索，max层节点每搜索它的一个子节点，就要更新自己的α（下界），而min层节点每搜索它的一个子节点，就要更新自己的β（上界）。如果更新之后发现α&gt;=β了，说明后面的子节点已经不需要进行搜索了，直接break剪枝掉。这就是α-β剪枝算法的全部含义。</p>
<h3 id="局部搜索和静态评价启发"><a href="#局部搜索和静态评价启发" class="headerlink" title="局部搜索和静态评价启发"></a>局部搜索和静态评价启发</h3><p>a)  局部搜索是说，只考虑那些能和棋子产生关系的空位置，而不用考虑所有空位置，这样能极大减小b的值。</p>
<p>b)  静态评价启发是对于α-β剪枝算法而言的，意思是说，如果越早搜索到较优走法，剪枝就会越早发生。如果对可走节点的评估分数进行简单排序，就可以提高剪枝速度。</p>
<h2 id="Bingo-AI的实现"><a href="#Bingo-AI的实现" class="headerlink" title="Bingo AI的实现"></a>Bingo AI的实现</h2><h3 id="游戏规则"><a href="#游戏规则" class="headerlink" title="游戏规则"></a>游戏规则</h3><p>游戏双方分别在3x3的方格纸上依次画x或o，直到一方的x或o连成一条直线（3个子）获胜。</p>
<p><img src="https://qiniu.madeai.cn/blogimg/image-20201120172338713.png?imgslim" alt="image-20201120172338713"></p>
<p>平局示意图</p>
<h3 id="系统架构设计"><a href="#系统架构设计" class="headerlink" title="系统架构设计"></a>系统架构设计</h3><h4 id="Pygame"><a href="#Pygame" class="headerlink" title="Pygame"></a>Pygame</h4><blockquote>
<p>Pygame is a set of Python modules designed for writing video games. Pygame adds functionality on top of the excellent SDL library. This allows you to create fully featured games and multimedia programs in the python language.</p>
</blockquote>
<h4 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h4><blockquote>
<p>TensorFlow 是一个端到端开源机器学习平台。它拥有一个全面而灵活的生态系统，其中包含各种工具、库和社区资源，可助力研究人员推动先进机器学习技术的发展，并使开发者能够轻松地构建和部署由机器学习提供支持的应用。</p>
</blockquote>
<h3 id="编码阶段"><a href="#编码阶段" class="headerlink" title="编码阶段"></a>编码阶段</h3><p><img src="https://qiniu.madeai.cn/blogimg/image-20201120172538668.png?imgslim" alt="image-20201120172538668"></p>
<p>界面设计图示</p>
<p>在规则设定上，默认玩家先手AI后手。玩家用”X”表示，AI用”O”表示。</p>
<p><img src="https://qiniu.madeai.cn/blogimg/clip_image001.png?imgslim" alt="img"></p>
<p>博弈树的设计图示</p>
<p>在上图中，树的深度是9，因为最坏情况下要走9步。每个节点记录落子的方位和权值信息。由于是玩家先手，所以第一层的节点存储玩家的信息，由于AI的胜率要尽可能大，所以估值函数返回的值当中一定要是最小的才行；下一层是AI执棋，所以估值函数的返回值要选择大的。</p>
<p><img src="https://qiniu.madeai.cn/blogimg/image-20201121180223198.png?imgslim" alt="image-20201121180223198"></p>
<p>AI必输局面</p>
<p>由以上局面和一般经验总结，占据最中间的位置赢面最大，所以可以设置在arr[1][1]时的初始权重最大；其次是边角位置，由于可以分别向两个方向落3个子，所以它的初始权重次之。边缘的位置不好判断，要结合具体的局面来设置权重。我们把所有的局面输入神经网络，通过神经网络的BP机制来动态调整权重。</p>
<p><strong>AI自学习：</strong></p>
<div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","video":{"url":"http://pan.madeai.cn/?/video/p1.mp4","pic":"/assets/img/dplayer-cover.svg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>

<p>监督学习演示视频</p>
<p>如以上视频所示，一开始我们和AI下棋，AI通过随机函数来随机生成落子方位。随着棋局的增加，AI将局面数组、赢方、权重的信息记录进一个json文件，根据玩家赢得次数来设计每个局面的权重。然后进入神经网络学习，通过BP来调整权重，通过α-β剪枝来降低搜索时间复杂度。随着我们和AI对弈次数的增加，AI会变得越来越有赢面，最后不再使用随机函数。</p>
<p><strong>参数设计：</strong></p>
<table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Arr</td>
<td>Int[][]</td>
<td>游戏地图，0是空，1是玩家子，2是AI子</td>
</tr>
<tr>
<td>Hold</td>
<td>Int</td>
<td>谁落子，1是玩家落子，2是AI落子</td>
</tr>
</tbody></table>
<p><strong>函数设计：</strong></p>
<table>
<thead>
<tr>
<th>函数名称</th>
<th>参数</th>
<th>返回值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>judge_full</td>
<td>Arr:棋局地图</td>
<td>Bool:是否平局</td>
<td>供judge_win调用</td>
</tr>
<tr>
<td>judge_win</td>
<td>Arr:棋局地图</td>
<td>Int:哪方赢(0,1,2,-1)</td>
<td>判断局面情况</td>
</tr>
<tr>
<td>fill_zero</td>
<td>Arr:棋局地图</td>
<td>NaN</td>
<td>游戏结束将地图填充0</td>
</tr>
<tr>
<td>computer_move</td>
<td>Arr:棋局地图</td>
<td>NaN</td>
<td>AI落子</td>
</tr>
<tr>
<td>process_res</td>
<td>NaN</td>
<td>NaN</td>
<td>游戏结束后的处理，是否继续</td>
</tr>
<tr>
<td>evaluate</td>
<td>Arr:棋局地图</td>
<td>Int:权重</td>
<td>估值函数，里面要调用学习到的模型来输出权重</td>
</tr>
</tbody></table>
<p><strong>展望：</strong></p>
<p>关于AI状态机的设定。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p><a href="https://studygolang.com/articles/6466" target="_blank" rel="noopener">AlphaGo论文的译文</a></p>
</li>
<li><p><a href="https://www.researchgate.net/publication/292074166_Mastering_the_game_of_Go_with_deep_neural_networks_and_tree_search" target="_blank" rel="noopener">Mastering the game of Go with deep neural networks and tree search</a></p>
</li>
<li><p><a href="https://blog.csdn.net/livingsu/article/details/104536005" target="_blank" rel="noopener">五子棋ai：极大极小搜索和α-β剪枝算法的思想和实现(qt和c++)</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1a7411K7g1" target="_blank" rel="noopener">Alpha-Beta剪枝算法(极大极小算法-人工智能)</a></p>
</li>
<li><p><a href="https://eyehere.net/2011/python-pygame-novice-professional-index/" target="_blank" rel="noopener">用Python和Pygame写游戏-从入门到精通</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/78677068" target="_blank" rel="noopener">井字棋真的有必胜方法吗？</a></p>
</li>
<li><p><a href="https://www.zhihu.com/question/41323126/answer/382320588" target="_blank" rel="noopener">有谁照着论文把 AlphaGo 重现出来了？</a></p>
</li>
</ol>
]]></content>
      <tags>
        <tag>paper</tag>
        <tag>think</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>自动出题机</title>
    <url>/articles/automatic-generate-question.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><pre><code>学校开始了新一轮的信息技术大赛,我们班的科技委员下发了3191道复习题,当时excel格式的复习题无论在PC和移动端看起来都不太方便,所以就想用一个空闲的时间弄一个自动出题机(带评分功能的).</code></pre>
<h3 id="step1-mysql大法好"><a href="#step1-mysql大法好" class="headerlink" title="step1:mysql大法好"></a>step1:mysql大法好</h3><p>  关于mysql表的设计,总共有两张表(暂时),一张examination表存的是问题,答案,题号,难度之类的:</p>
<p><img src="https://i.loli.net/2018/09/24/5ba86bc0380f6.png" alt="5ba86bc0380f6"></p>
<p>还有一张exam_report表存用户提交之后产生的数据,比如:内网ip,外网ip,agent,提交时间,分数和多少道题没做.</p>
<p><img src="https://i.loli.net/2018/09/24/5ba86cdf6f9e0.png" alt="5ba86cdf6f9e0"></p>
<p>然后把excel导入数据库.</p>
<h3 id="step2-后端API的设计-PHP是web最牛逼的语言"><a href="#step2-后端API的设计-PHP是web最牛逼的语言" class="headerlink" title="step2:后端API的设计(PHP是web最牛逼的语言)"></a>step2:后端API的设计(PHP是web最牛逼的语言)</h3><ol>
<li><p>先来说一下需求吧,首先是像从数据库中随机抽取100道题,在把这些题目转为json格式(这里有一个不理想的地方是答案也一起包含进去了,这个在v2.0中改进)向前端提供.然后从前端接受json格式的分数等用户信息.</p>
</li>
<li><p>需求弄清楚就好办了,在时间紧迫和项目比较小的情况下用PHP做后端是比较理想的.结果向前端提供题目数据的<code>handle.php</code>减掉注释只用了<font color="red">26-9</font>行,从前端接收信息的<code>report.php</code>只用了<font color="red">20-4</font>行.让我不禁感叹PHP是web开发对新人最友好的后端语言!!<img src="https://i.loli.net/2018/09/24/5ba8724b10653.jpg" alt="5ba8724b10653"></p>
</li>
</ol>
<h3 id="step3-前端页面设计-主要用jquery"><a href="#step3-前端页面设计-主要用jquery" class="headerlink" title="step3:前端页面设计(主要用jquery)"></a>step3:前端页面设计(主要用jquery)</h3><p>前端css用的很少主要是展示一个原型,在v2.0后会用现成的工具继续美化,主要是用js生成的页面</p>
<p><img src="https://i.loli.net/2018/09/24/5ba873882c817.png" alt="5ba873882c817"></p>
<p>做完之后评分和给出答案(后续在v2.0会添加一些feature):<img src="https://i.loli.net/2018/09/24/5ba873edaca3d.png" alt="5ba873edaca3d"></p>
<h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3><p>这不是一篇科普向的博文,主要是说明一个idea.然后在v2.0中需要添加的功能:</p>
<p><strong>todo list</strong></p>
<ul>
<li><p><input disabled type="checkbox">  单独列为一个项目用<code>http://www.exam.madeai.cn</code></p>
</li>
<li><p><input checked disabled type="checkbox">  添加rank排行榜</p>
</li>
<li><p><input disabled type="checkbox">  添加评论系统</p>
</li>
<li><p><input checked disabled type="checkbox">  css美化页面</p>
</li>
<li><p><input checked disabled type="checkbox">  更友好的交互体验</p>
</li>
</ul>
<p>然后是传送门:<a href="http://www.madeai.cn/exam" target="_blank" rel="noopener">信息技术大赛出题机</a></p>
]]></content>
      <tags>
        <tag>MySQL</tag>
        <tag>PHP</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Android线程</title>
    <url>/articles/about-android-thread.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/andy-lg.png" alt="banner"></p>
<h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><p>众所周知,android只能在主线程中更新UI视图,而一些诸如网络请求,socket通讯和Json解析之类比较耗时的操作一般放在子线程(用线程池来管理便于回收)中处理,否则会阻塞(zu se)UI线程.那么子线程中处理的结果怎么显示出来呢?有三种方法:</p>
<ul>
<li>使用RunOnUiThread切回主线程;</li>
<li>用handler来进行消息传递;</li>
<li>继承AsyncTask类,在onPostExecute方法中更新UI.</li>
</ul>
<h3 id="RunOnUiThread"><a href="#RunOnUiThread" class="headerlink" title="RunOnUiThread"></a>RunOnUiThread</h3><p>可以把RunOnUiThread看成是一个特殊的线程,如果RunOnUiThread运行在主线程,则立即执行里面的代码,否则将Runable对象添加到消息处理队列;<br>具体事例如下:</p>
<pre><code class="java">new Thread(new Runnable() {
            @Override
            public void run() {
                //模拟耗时操作;
                try {
                    Thread.sleep( 2000 );
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                //切回UI线程;
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        //更新UI视图;
                    }
                });
            }
        }).start();</code></pre>
<h3 id="handler"><a href="#handler" class="headerlink" title="handler"></a>handler</h3><p>我们用handler携带message来进行子线程和主线程间的通讯,在这里我把handler看成是一个hook或者signal;<br>handler的初始化:</p>
<pre><code class="java">Handler handler=new Handler(){
    public void handlerMessage(message msg){
        super.handlerMessage(msg);
        switch(msg.what){
            case 0:
                doSomething(msg.getData().getString(&quot;key&quot;));
                break;
            case 1:
                doAnotherthing((Cast)msg.obj);
                break;
            default:
        }
    }
};</code></pre>
<p>在这里message的用法有两种,一种是使用<code>message.obj</code>来传递具体的数据,还有一种是把数据放在<font color="red">bundle</font>里面再用<code>message.setData</code>来传递<font color="red">bundle</font>.</p>
<h4 id="利用message-obj来携带数据"><a href="#利用message-obj来携带数据" class="headerlink" title="利用message.obj来携带数据"></a>利用message.obj来携带数据</h4><pre><code class="java">Message msg=Message.obtain();
msg.what=1;
msg.obj=new Cast();
msg.arg1=123;
msg.arg2=1234;
handler.sendMessage(msg);</code></pre>
<h4 id="利用bundle来携带数据"><a href="#利用bundle来携带数据" class="headerlink" title="利用bundle来携带数据"></a>利用bundle来携带数据</h4><pre><code class="java">Message msg=new Message();
msg.what=0;
Bundle bundle=new Bundle();
bundle.putString(&quot;key&quot;,&quot;value&quot;);
msg.setData(bundle);
handler.sendMessage(msg);</code></pre>
<h3 id="AsyncTask"><a href="#AsyncTask" class="headerlink" title="AsyncTask"></a>AsyncTask</h3><p>顾名思(si)义,AsyncTask是异步任务;它的基本用法如下:</p>
<pre><code class="java">//传入三个泛型参数,分别是: a传入给后台任务的strings, b用于显示进度条, c返回结果;
class Task extends AsyncTask&lt;String,String,String&gt;{
    @Override
    protected void onPreExecute(){
    }
    @Override
    protected void doInBackground(String... strings){

    }
    @Override
    protected void postExecute(String string){

    }
}</code></pre>
<ul>
<li><code>onPreExecute()</code>中进行UI界面的初始化工作,列如显示进度条或onloading的Gif动画;<img src="/assets/blogimg/2019-02-14.png" width="30%" alt="onloading"></li>
<li><code>doInBackground()</code>中处理耗时操作,不能进行UI操作;</li>
<li><code>postExecute()</code>中后台任务执行完后要进行的事,列如提关闭进度条或显示任务执行结果.</li>
</ul>
<hr>
<p>关于AsyncTask的更多信息请参考郭霖老师的&lt;&lt;第二行代码&gt;&gt;第十章第二节.</p>
]]></content>
      <tags>
        <tag>Java</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数据类型</title>
    <url>/articles/data-type-of-java.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Java 语言是一种强类型语言。通俗点说就是，在 Java 中存储的数据都是有类型的，而且必须在编译时就确定其类型。 Java 中有两类数据类型：<br><img src="http://img.mukewang.com/535a6fc10001b8f604930247.jpg" alt="java数据类型" title="java数据类型"><br>在 Java 的领域里，基本数据类型变量存的是数据本身，而引用类型变量存的是保存数据的空间地址。说白了，基本数据类型变量里存储的是直接放在抽屉里的东西，而引用数据类型变量里存储的是这个抽屉的钥匙，钥匙和抽屉一一对应。</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>考研英语一写作题型</title>
    <url>/articles/english-article-sentences.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>社会热点<ul>
<li>健康</li>
<li>老年人</li>
<li>职业道德</li>
<li>爱心/社会公德</li>
</ul>
</li>
<li>教育文化</li>
<li>人生哲理</li>
<li>环境保护</li>
</ul>
<h3 id="社会热点"><a href="#社会热点" class="headerlink" title="社会热点"></a>社会热点</h3><h4 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h4><h4 id="老年人"><a href="#老年人" class="headerlink" title="老年人"></a>老年人</h4><table>
<thead>
<tr>
<th align="center">English</th>
<th align="center">Chinese</th>
</tr>
</thead>
<tbody><tr>
<td align="center">only child</td>
<td align="center">独子/女</td>
</tr>
<tr>
<td align="center">spoil; doting love</td>
<td align="center">溺爱</td>
</tr>
<tr>
<td align="center">fierce competition</td>
<td align="center">激烈的竞争</td>
</tr>
<tr>
<td align="center">generation gap</td>
<td align="center">代沟</td>
</tr>
<tr>
<td align="center">bridge the gap</td>
<td align="center">修复代沟</td>
</tr>
<tr>
<td align="center">mutual understanding</td>
<td align="center">相互理解</td>
</tr>
<tr>
<td align="center">misunderstanding</td>
<td align="center">误解</td>
</tr>
<tr>
<td align="center">support one’s parent</td>
<td align="center">体谅父母</td>
</tr>
<tr>
<td align="center">take care of; look after</td>
<td align="center">照顾</td>
</tr>
<tr>
<td align="center">mistreat/maltre</td>
<td align="center">虐待</td>
</tr>
<tr>
<td align="center">population aging</td>
<td align="center">人口老龄化</td>
</tr>
<tr>
<td align="center">the aged; the elderly; senior citizens</td>
<td align="center">老年人</td>
</tr>
<tr>
<td align="center">practice filial piety</td>
<td align="center">奉行孝道</td>
</tr>
</tbody></table>
<h4 id="职业道德-professional-ethics"><a href="#职业道德-professional-ethics" class="headerlink" title="职业道德(professional ethics)"></a>职业道德(professional ethics)</h4><blockquote>
<p>Honesty is the best policy.</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">English</th>
<th align="center">Chinese</th>
</tr>
</thead>
<tbody><tr>
<td align="center">dishonest behavior</td>
<td align="center">欺诈行为</td>
</tr>
<tr>
<td align="center">shoddy products/goods; counterfeit/inferior commodities</td>
<td align="center">伪劣产品</td>
</tr>
<tr>
<td align="center">fraudulent activity/behavior/conduct</td>
<td align="center">欺诈行为</td>
</tr>
<tr>
<td align="center">academic corruption</td>
<td align="center">学术腐败</td>
</tr>
<tr>
<td align="center">plagiarism</td>
<td align="center">剽窃/抄袭</td>
</tr>
<tr>
<td align="center">food safety</td>
<td align="center">食品安全</td>
</tr>
<tr>
<td align="center">drainage oil</td>
<td align="center">地沟油</td>
</tr>
<tr>
<td align="center">construction quality</td>
<td align="center">建筑安全</td>
</tr>
<tr>
<td align="center">self-centered</td>
<td align="center">自私自利</td>
</tr>
<tr>
<td align="center">selflessness</td>
<td align="center">无私的</td>
</tr>
<tr>
<td align="center">the level of social morality</td>
<td align="center">社会道德水准</td>
</tr>
<tr>
<td align="center">enthusiastic=passionate</td>
<td align="center">热情的</td>
</tr>
</tbody></table>
<ol>
<li>Take the consideration of other noble characters.</li>
<li>Want nothing but profit=Be blind to all but one’s own interest.</li>
<li><strong>Manufacturing units guarantee/promise to turn out the products of good quality; commercial enterprises swear/pledge to provide genuine/authentic commodities polite and enthusiastic services.</strong></li>
</ol>
<h4 id="爱心-社会公德"><a href="#爱心-社会公德" class="headerlink" title="爱心/社会公德"></a>爱心/社会公德</h4><table>
<thead>
<tr>
<th align="center">English</th>
<th align="center">Chinese</th>
</tr>
</thead>
<tbody><tr>
<td align="center">traditional vitue</td>
<td align="center">传统美德</td>
</tr>
<tr>
<td align="center">sense of responsibility</td>
<td align="center">责任感</td>
</tr>
<tr>
<td align="center">shoulder/assume/undertake one’s responsibility</td>
<td align="center">负起责任</td>
</tr>
<tr>
<td align="center">avoid/shirk one’s duty/responsibility</td>
<td align="center">逃避责任</td>
</tr>
<tr>
<td align="center">devote/dedicate/devotion/dedication</td>
<td align="center">奉献</td>
</tr>
<tr>
<td align="center">selfless devotion</td>
<td align="center">无私奉献</td>
</tr>
<tr>
<td align="center">trust crisis</td>
<td align="center">信任危机</td>
</tr>
<tr>
<td align="center">immoral behavior</td>
<td align="center">不道德的行为</td>
</tr>
<tr>
<td align="center"><em>Project Hope</em></td>
<td align="center">希望工程</td>
</tr>
<tr>
<td align="center">charity</td>
<td align="center">慈善</td>
</tr>
<tr>
<td align="center">donate/donation</td>
<td align="center">捐款</td>
</tr>
<tr>
<td align="center">poor rural areas</td>
<td align="center">贫困的乡村地区</td>
</tr>
<tr>
<td align="center">respect the old and love the young</td>
<td align="center">尊老爱幼</td>
</tr>
<tr>
<td align="center">spite everywhere</td>
<td align="center">随地吐痰</td>
</tr>
<tr>
<td align="center">make noise; take loudly</td>
<td align="center">大声说话</td>
</tr>
<tr>
<td align="center">social harmony</td>
<td align="center">社会和谐</td>
</tr>
<tr>
<td align="center">traditional work-moral values</td>
<td align="center">传统职业道德价值</td>
</tr>
</tbody></table>
<p><strong>eg: To begain with, poor children in backward and underdeveloped areas are likely to become drop-outs either because they cannot afford the tuition or because …</strong></p>
]]></content>
      <categories>
        <category>notebook</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>writing</tag>
      </tags>
  </entry>
  <entry>
    <title>&lt;算法第四版&gt;最佳实践</title>
    <url>/articles/algorithms-fourth-edition-best-practice.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/sort-algorithm-banner.png" alt="sort-algorithm"></p>
<h3 id="bucket-sort"><a href="#bucket-sort" class="headerlink" title="bucket sort"></a>bucket sort</h3><p><strong>桶排序</strong>的基本思路是遍历一个待排的数组,把每个数出现的次数记录到一个新的数组里面,那这个新的数组里的下标就是待排序的数组的值.</p>
<p>设待排数组是arr,记录待排数组的桶是bucket让我们来理一下思路:</p>
<ol>
<li>新建一个数组,数组的大小是arr.length-1;</li>
<li>循环遍历arr这个数组,在循环体里面将arr数出现的次数记录到bucket这个数组里面;</li>
<li>遍历bucket这个数组,判断值是多少就输出多少次bucket的下标;</li>
</ol>
<p>以下是Java代码:</p>
<pre><code class="java">public static void bucketSort(int [] arr){
        int[] bucket=new int[max(arr)+1];
        for (int i = 0; i &lt; arr.length; i++) {
            bucket[arr[i]]++;
        }
        int count=0;
        for (int i=0;i&lt;bucket.length;i++){
            for (int j = 1; j &lt;= bucket[i]; j++) {
                arr[count++]=i;
            }
        }
    }</code></pre>
<p>以上只是一个简单的桶排序,<em>不能排序负数和小数</em>,但它的时间复杂度也仅仅是<code>T(N)=O(N+M)</code>;</p>
<h3 id="buble-sort"><a href="#buble-sort" class="headerlink" title="buble sort"></a>buble sort</h3><p><strong>冒泡排序</strong>的的思路就是遍历数组,交换(<em>swap</em>)相邻两个元素,使余下未排序数组部分最大(或最小)的元素浮到最前或最后;<br>这样排序一个长度为N的数组所需要的时间复杂度<code>T(N)=O(N&lt;sup&gt;2&lt;/sup&gt;)</code></p>
<p>以下是java代码:</p>
<pre><code class="java">    public static void bubbleSort(int [] arr){
        for (int i = arr.length; i &gt; 0; i--) {
            for (int j = 0; j &lt; i-1; j++) {
                if (arr[j]&gt;arr[j+1]){
                    swap(arr,j,j+1);
                }
            }
        }
    }</code></pre>
<p>冒泡排序的缺点很明显,在全部无序的情况下,时间复杂度太高了(因为它只能交换相邻两个元素);<br>而且上述的示例有一个需要改进的地方就是:设想一个数组前半部分是有序的,但是如果有序的话检查一次就够了(前面在排序后半部分的元素中已经检查过了),所以我们可以设一个布尔型的flag值,有序就直接跳过,这样能大大缩短代码运行时间;</p>
<h3 id="selection-sort"><a href="#selection-sort" class="headerlink" title="selection sort"></a>selection sort</h3><p><strong>选择排序</strong>和冒泡排序有点类似,它的基本思路就是把数组看成两部分:一部分有序,一部分无序;<br>把后面无序的部分的最小值放到前半部分的最后面(<em>冒泡排序是交换相邻的元素</em>)</p>
<p>以下是java代码:</p>
<pre><code class="java">    public static void selectionSort(int[] arr){
        for (int i = 0; i &lt; arr.length; i++) {
            for (int j = i+1; j &lt; arr.length; j++) {
                if (arr[j]&lt;arr[i]){
                    swap(arr,j,i);
                }
            }
        }
    }</code></pre>
<p>选择排序的时间复杂度也是<code>O(N&lt;sup&gt;2&lt;/sup&gt;)</code></p>
<h3 id="insertion-sort"><a href="#insertion-sort" class="headerlink" title="insertion sort"></a>insertion sort</h3><p><strong>插入排序</strong>的基本思路是选择后面没排序的部分的第一个元素,插入到前半部分有序的合适位置(和选择排序正好相反);</p>
<p><em>让我们来理一下思路吧:</em></p>
<ol>
<li>arr[0]是有序的;</li>
<li>遍历余下的将arr[1]放到前面有序部分的合适位置(arr[0]前面或后面);</li>
<li>每次把余下部分的第一个放到前面有序的合适位置(重复1,2步骤);</li>
<li>直到余下的部分没有元素.</li>
</ol>
<p>以下是java代码:</p>
<pre><code class="java">    /**
     * thought the arr as two part, the front part is ordered and the end part is unordered;
     * in the loop each time put the fist element of the end part to the appropriate position in the front part;
     * until the outer loop is over;
     * @param arr the array wait to sort;
     */
    public static void insertionSort(int[] arr){
        for (int i = 0; i &lt; arr.length; i++) {
            for (int j = 0; j &lt; i; j++) {
                if (arr[i]&lt;arr[j]){
                    int tmp=arr[i];
                    for (int k = i; k &gt; j; k--) {
                        arr[k]=arr[k-1];
                    }
                    arr[j]=tmp;
                    break;
                }
            }
        }
    }</code></pre>
<p>由于有两层循环,所以它的时间复杂度也是<code>O(N&lt;sup&gt;2&lt;/sup&gt;)</code>,不过和选择排序不同的是它是<em>稳定的排序</em>;</p>
<h3 id="quick-sort"><a href="#quick-sort" class="headerlink" title="quick sort"></a>quick sort</h3><p><strong>快速排序</strong>采用分治法(<em>divide-and-conquer method</em>),利用递归(<em>recursion</em>)对数组作拆分处理;<br>分治法的基本思路就是:大事化小,小事化无;</p>
<p>让我们来理一下思路吧:</p>
<ol>
<li>随便找一个元素看作基准点(为了方便起见我们不妨把arr[0]看作基准点);</li>
<li>基准点左边的数比基准点小,右边的数比它大;</li>
<li>循环调用,直到每部分只有两数,左边小,右边大;</li>
</ol>
<p>java代码如下:</p>
<pre><code class="java">    /**
     * &lt;quote&gt;Quicksort is a divide-and-conquer method for sorting.&lt;/quote&gt;
     * divide the arr to two parts, set the leftest element as the standard position;
     * find the smaller element than standard position from the right;
     * find the larger element than standard position from the left;
     * @param arr the arr wait to sort
     * @param left left guard
     * @param right right guard
     */
    public static void quickSort(int[] arr,int left,int right){
        if (left&gt;right) return;
        int i=left,j=right,pos=arr[left];
        while(i!=j){
            while(i&lt;j&amp;&amp;arr[j]&gt;=pos){
                j--;
            }
            while(i&lt;j&amp;&amp;arr[i]&lt;=pos){
                i++;
            }
            if (i&lt;j){
                swap(arr,i,j);
            }
        }
        arr[left]=arr[i];
        arr[i]=pos;
        quickSort(arr,left,i-1);
        quickSort(arr,i+1,right);
    }</code></pre>
<p>由于快排是跳跃交换元素位置的(和冒泡排序不同),所以它的平均时间复杂度是<code>O(NlogN)</code>;<br>没接触到递归的同学可能觉得快排有点抽象,可以参照&lt;啊哈,算法&gt;或&lt;算法第四版&gt;(实际上我也在用这两本教材),你也可以看看发明者关于快排的论文;</p>
<h3 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h3><p>以下是每种算法的平均时间复杂度:</p>
<table>
<thead>
<tr>
<th>name</th>
<th>T(N)</th>
</tr>
</thead>
<tbody><tr>
<td>bucket sort</td>
<td>O(N+M)</td>
</tr>
<tr>
<td>buble sort</td>
<td>O(N<sup>2</sup>)</td>
</tr>
<tr>
<td>selection sort</td>
<td>O(N<sup>2</sup>)</td>
</tr>
<tr>
<td>insertion sort</td>
<td>O(N<sup>2</sup>)</td>
</tr>
<tr>
<td>quick sort</td>
<td>O(NlogN)</td>
</tr>
</tbody></table>
<p>还有其他的希尔排序,堆排序,计数排序,基数排序啊有待同学们去一一探索,这里就不再一一赘述了.</p>
]]></content>
      <tags>
        <tag>Java</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>《计算机与智能》读后感</title>
    <url>/articles/computing-machinery-and-intelligence.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Computing Machinery and Intelligence<sup id="fnref:1"><a href="#fn:1" rel="footnote">&lt;span class=”hint–top hint–error hint–medium hint–rounded hint–bounce” aria-label=”<a href="https://blog.csdn.net/xiaocai281/article/details/102473502?utm_source=app&tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">图灵的文章”Computing machinery and intelligence”译文</a>“&gt;[1]</a></sup></p>
<h2 id="模仿游戏"><a href="#模仿游戏" class="headerlink" title="模仿游戏 "></a>模仿游戏 </h2><p><img src="https://qiniu.madeai.cn/blogimg/computing_machinery_and_intelligence.drawio.svg?imgslim" alt="computing_machinery_and_intelligence.drawio"></p>
<p>图表 1模仿游戏示意图</p>
<h2 id="游戏中的机器"><a href="#游戏中的机器" class="headerlink" title="游戏中的机器"></a>游戏中的机器</h2><p>1.”一个或一队工程师制造出一个可以工作的机器，但是却不能很好的描述其工作方式，因为他们使用了基于试验的方法来设计它”</p>
<p>现在的神经网络通过训练来确定模型的权重、偏置参数，其内部也是一个黑盒子，输出的不确定性是由其非线性激活函数来决定的。当然最近的一篇《Explaining Deep Neural Networks》试图解释神经网络的原理<sup id="fnref:2"><a href="#fn:2" rel="footnote">&lt;span class=”hint–top hint–error hint–medium hint–rounded hint–bounce” aria-label=”<a href="https://zhuanlan.zhihu.com/p/262922354" target="_blank" rel="noopener">让神经网络解释自己：牛津大学博士小姐姐，用毕业论文揭示”炼丹炉”结构</a><br>“&gt;[2]</a></sup>。</p>
<p>2.”为什么不拿一台直接作实验？很容易就能满足游戏的要求。让许多提问者同时参加游戏，然后统计出判断正确的概率”</p>
<pre><code class="py">accuracy_cnt=0
for i in range(len(x)):
    y=predict(network,x[i])
    p=np.argmax(y)#获取概率最高的元素的引用
    if p==t[i]:
        accuracy_cnt+=1
print(&quot;Accuracy:&quot;+str(float(accuracy_cnt)/len(x)))#0.9352</code></pre>
<p>个人认为判断一个模型的好坏可以从它的执行时间和精确度两个方面来衡量。</p>
<p>3.”是否存在可想象的计算机能够通过游戏。”</p>
<p>得出<strong>强人工智能</strong>实现的可能性，标准即为能否通过图灵测试。</p>
<h2 id="数字计算机"><a href="#数字计算机" class="headerlink" title="数字计算机"></a>数字计算机</h2><p>1.”（i）存贮器（ii）执行单元（iii）控制器”</p>
<p>冯.诺伊曼计算机结构：控制器、运算器、存储器、输入设备、输出设备</p>
<p>2.”不妨把它们称为”指令表”。控制器的功能就是保证指令按照正确的顺序执行，其设计使得这成为可能。”</p>
<p>CPU中的指令集，高级语言都是把语义化的代码翻译成指令集供CPU执行。像Python、Javascript是边解释边运行；而Java、CPP要编译成字节码文件才能运行。</p>
<p>3.”把存放在6890的数加上存放在4302的数，并把结果存入后面单元。”</p>
<p>这种操作可以使用机器语言轻松完成。</p>
<p>4.””现在执行存储在 5606的指令，并从那里继续执行。”或者是：”如果 4505位置是0，那么执行存储在6707的指令，否则继续”。”</p>
<p>现在的高级语言有go和ifelse这类关键字对应。顺序结构、循环结构、分支结构。</p>
<p>5.”如果一个人想让机器模仿计算员执行复杂的操作，他必须告诉计算机如何做，并把结果翻译成某种形式的指令表。这种构造指令表的行为通常被称为”编程””</p>
<p>我觉得编程的概念是写代码，一般是高级语言；而”将结果翻译成某种形式的指令表”是编译器要做的事情将代码编程成计算机能理解的二进制文件，再通过CPU中的指令集运行二进制文件。</p>
<p>6.”通常并不能通过观察判断出一个机器是否有随机元素，因为一个相似的效果可以依据Pi的小数部分进行选择来产生。”</p>
<p>关于依据Pi的小数部分来产生随机数的想法我是不赞同的，就算现在大部分高级语言实现的Random接口来产生的随机数也只是伪随机数（依据从某个时间节点到现在的毫秒数来产生）。牵扯到如何把一个数组随机打乱，使每个元素的概率一致是不能仅仅用Random和排序来做的，要使用专门的Shuffle算法来操作。</p>
<p>7. “让一个计算机具有无限的存储空间并不存在理论上的困难，当然在任何时候都只有有限的部分被使用。同样，只有有限的存储空间被建造，不过我们可以想象越来越多的存储空间可以根据要求添加。”</p>
<p>“无限容量计算机”结合Google的三篇论文《GFS》、《Big Table》、《Map Reduce》，以及Hadoop和后来的分布式与云计算技术使其成为可能，同时具备实用价值。”根据要求添加”在《GFS》这篇论文中明确得指出了GFS系统设计要符合”可伸缩性”、”容错”、”灾难冗余”的原则或者要求。</p>
<p>8.”分析机的存储全部由用轮子和卡片组成的机械实现。”</p>
<p>在《Deep Learning from Scratch》这本书2.6章节（P60）中有提到”仅通过与非门的组合就能实现计算机”，并推荐《计算机系统要素：从零开始构建现代计算机》这本书。实际上结合我在本科学习过”<strong>电子电工</strong>“这门课程，就可以通过逻辑门电路累加器加法器…CPU计算机来实现（基于电流电路的硬件）。由此看来向华老师所言”软件硬件不分家”是有一定的道理的。</p>
<p>9.”在神经系统中，化学过程至少和电过程同样重要，某些计算机的存储器主要基于声学原理，计算机和神经系统都使用电仅仅是表面的相似，如果我们希望寻找这样的相似，倒不如寻找功能上的数学相似性。”</p>
<p>现代神经网络的构建和神经系统中的神经元有相似的地方（也可以看成一总仿生的应用）。神经元之间的通过生物电来传递介质（或者说信息），当然这种生物电是由生物的化学反应产生的（联想到可以用神经元来实现计算机的可行性，这种计算机可能天生对深度学习有较高的性能，同时软硬件会结合得更加紧密）。”某些计算机的存储器主要基于声学原理”这里有一些看不明白，存储器基于声学原理，这个好像在现代计算机硬件中没有见过。</p>
<h2 id="数字计算机的通用性"><a href="#数字计算机的通用性" class="headerlink" title="数字计算机的通用性"></a>数字计算机的通用性</h2><p>1.”即使是考虑实际的物理机器而不是理想机器，只要知道了某个时刻状态的合理准确的信息，就可以相当准确的预测未来状态的信息。”</p>
<p>然而神经网络确实恰恰相反，由于其内部的大量非线性函数，所以造成了内部的不可解释和结果的不确定性。即使可以通过调参来提高准确率，还是被相关从业人员笑称为”炼丹”。</p>
<p>2.”例如，现在在曼彻斯特工作的机器可以有2^165000个状态，也就是大约10^50000。”</p>
<p>现代CPU的制程能达到7微米（手机中的CPU），这意味着能在有限空间中集成更多的电路。晶圆（我把它看成一个一个小开关）的个数也是CPU的性能参数之一，但这是否和状态有关呢？</p>
<p>3.”具有这样性质的机器带来一个重要结果就是，若不考虑速度，并不需要设计出不同的新机器来执行不同的计算，它们都可以用一个数字计算机来实现，只要根据情况适当编程。由此可见，所有数字计算机在某种意义上是等价的。”</p>
<p>图灵的设想同过时间证明了其正确性，现代计算机软硬件的结合通过系统，编程的手段可以调用系统提供的顶层API来调用底层的硬件。家用PC、laptop、服务器等计算机都可以通过安装系统和软件来实现统用的功能。</p>
<p><img src="https://qiniu.madeai.cn/blogimg/architecture_of_modern_computer.drawio.svg?imgslim" alt="architecture_of_modern_computer.drawio"></p>
<p>图表 2现代通用计算机构造图</p>
<h2 id="关于主要问题的对立观点"><a href="#关于主要问题的对立观点" class="headerlink" title="关于主要问题的对立观点"></a>关于主要问题的对立观点</h2><p>1.”猜想往往是非常重要的，因为它们提示有用的研究线索。”</p>
<p>根据现实情况作出合理的猜想对科学研究有帮助，猜想验证结论</p>
<p><img src="https://qiniu.madeai.cn/blogimg/machine-can-think.svg?imgslim" alt="machine-can-think"></p>
<p>图表 3对所持意见的对立观点思维导图.SVG</p>
<p>2.”在两种情况下，我们其实都是上帝意志的工具，为他所创造的灵魂提供住所。　“</p>
<p>主观和客观，本我及…</p>
<p>3.”总而言之，人可能比任何特定的机器聪明，但是可能有更聪明的其他机器，等等。”</p>
<p>特定领域的计算机确实比人类聪明，”Deep Blue”和”AlphaGo”的出现使得强人工智能成为可能。</p>
<p>4.”除非机器能够因为感受到思想与情绪”</p>
<p>现代的弱人工智能尽管能够画出一些画作、写出一些诗文，但它不知道自己在做什么，更不会因此而喜悦。所以到强人工智能的路还有很长。</p>
<p>5.”要想知道某人是否在思维，唯一的途径就是成为那个人”</p>
<p>实际上现代脑机接口的发展可以通过脑电的波动来看出一个人是否在思考。但如何把这种方法应用到计算机上呢，看风扇的转速、CPU的温度么？</p>
<p>6.”在实际中经常采用”口试”的方式来发现某人是真的理解某事”</p>
<p>事实上，很多时候未成年人并没有自己的世界观、价值观和人生观。这种思维不健全的未成年人通常没有形成自己的观点，而是人云亦云，鹦鹉学舌。这和现在的一些对话机器人（弱人工智能）有相似的地方。对此我的理解是：只有深刻地经历过后才会理解语言背后的含义。</p>
<p>7.”机器能够通过观察自己行为的结果，修改自己的程序，以便更有效地达到某种目的。这并不是乌托邦式的空想，而是不久的将来可能办到的事”</p>
<p>“机器不能成为它自己思维的主体”现代的神经网络在没有确定权重、偏置参数的情况下是不确定的，可以说”没有主体”，但经过几轮训练之后就像初生的婴儿蹒跚学步，就有了类似经验的东西。”通过观察自己行为的结果，修改自己的程序”现在出现的GAN（对抗生成模型）有异曲同工之妙。</p>
<p>8.” 人们会认为机器所使用的方法（不管是什么方法，总是机械性的）实在太低级了”</p>
<p>现在的神经网络、深度学习似乎不这么低级了。</p>
<p>9. “这并不意味着就无法制造能’独立思考’的电子设备，用生物学的话说，我们能够在其中建立条件反射，用来作’学习’的基础”</p>
<p>实际上现在的深度学习都是基于神经元模仿生物大脑的思考来设计的。这也证实了Hartree的猜测的可能性。</p>
<p>10.”不可能制定一套旨在描述一个人在每种情况该做什么的规则”</p>
<p>在现实情况中，法律是约束人类行动的第一战线，其次是道德，最后才是经验习得。</p>
<p>11.”因为我们认为，受行为规律调控意味着人就是某种机器（尽管不一定是离散状态机器）”</p>
<p>有这种行为规律（或者说先天反射），但是这种行为规律不完备，所以说同样不能将人称之为机器。</p>
<p>12.”相信我们的身体除了按照已知的物理学规律运作外，还按照未知的、但相似的规律运作。”</p>
<p>心灵感应一般存在于双胞胎之间，似乎和量子纠缠有某种联系。</p>
<p>13.”但是，这个随机数字生成程序又受提问者的精神运动的影响，这个精神运动也许就能让计算机猜对的次数比概率计算高”</p>
<p>用意念或者精神来影响客观世界仍旧是神学范畴。</p>
<h2 id="学习机器"><a href="#学习机器" class="headerlink" title="学习机器"></a>学习机器</h2><p><img src="https://qiniu.madeai.cn/blogimg/nuclear_fusion.drawio.svg?imgslim" alt="nuclear_fusion.drawio"></p>
<p>图表 4核聚变链式反应</p>
<p>1.” 然而，如果原子堆的大小变的足够大的时候，中子产生的反应很可能会持续的增加，直到原子堆解体。思维中是否存在这样的现象呢？机器中呢？这样的现象在人脑中应该是存在的。”</p>
<p>这里用核聚变中的链式反应来作类比，我觉得是不合适的，科学研究应该是严谨认真的（尽管有些文学作品中可能会用思维爆炸这类词来形容一个人的思维过程）</p>
<p>2.”进入其中的想法将会产生二级三级越来越多的想法，最终成为一个完整的&quot;理论&quot;。”</p>
<p>显然当我的思想成为超临界状态的时候只会胡思乱想而不会形成什么理论。</p>
<p>3.”如果是后一种情况，那么整个思维都是机械的。”</p>
<p>人类的某些思维活动可能会和剥洋葱皮有些类似。但我不赞成这种纯机械的方式来比喻人类的思维活动过程，因为我认为人类的思维活动是非线性的。</p>
<p>4.”而且认为只有一小部分用来进行高级的思考，其余大部分用来保存图像。”</p>
<p>根据生物学的知识来看，人类的大脑可以分为几个区域，这些区域分别对应不同的功能。由此看来人类大脑的构造和计算机有相似之处。</p>
<p>5. 被视为模拟神经细胞的现代机器，其速度比神经细胞快1000倍，这在许多方面可以为补偿速度的损失提供”安全余地”，剩下的问题主要就是如何编程让机器能够完成游戏。</p>
<p>“模拟神经细胞的现代机器”那个时候就有仿生计算机的出现吗？对此我表示怀疑。</p>
<p><img src="https://qiniu.madeai.cn/blogimg/human_brain.drawio.svg?imgslim" alt="human_brain.drawio"></p>
<p>图表 5大脑是怎么进入状态的</p>
<p>6.”在试图模拟成人大脑的过程中，我们必须考虑大脑是怎么进入状态的”</p>
<p>有时候我会想，大脑进入状态的过程和计算机开机的过程是否相似。</p>
<p>7.”大脑所经历的经验，此经验不被称为教育。”</p>
<p>我对这个观点持反对意见，经验是对经历的一种总结，也应该被视为一种教育。并且我认为这种教育要比课堂上的教育有效的多。</p>
<p>8.”与其试图编程模拟成人大脑，不如模拟儿童大脑，如果让儿童大脑接受正确的教育课程，就可能获得成人大脑。”</p>
<p>这个我在没看图灵的论文之前也想过，试图用深度学习的技术开发一个对话机器人，然后让它和同龄的学生从幼儿园开始接受人类的教育，最后进化为成人的大脑。此刻我和图灵隔空对话。</p>
<p>9.”显然这个过程与进化有联系”</p>
<p>遗传算法物竞天择，适者生存。</p>
<p>10.” 并不需要局限于随机的变异，如果能够找出某些缺陷的原因，就可能想到改进它的变异。”</p>
<p>随机变异+人类辅助的过程确实会加快机器的进化，同时人类的辅助过程决定者机器未来的属性。这里人类充当着自然界中的环境因素（或者说是上帝），我更乐意看成是一个孔洞不一致的筛子。</p>
<p>11.”其他的学生肯定会嘲笑它，它必须得到专门地训练。”</p>
<p>这里将机器赋予人权，机器没有腿和胳膊、机器的视觉传感器可能不如人类的发达。但是教育是平等的（至少是相对平等）</p>
<p>12.”海伦.勒女士的例子表明只要老师和学生能够以某种方式进行双向的交流，教育就能进行。”</p>
<p>让我想起了中学的一篇课文，海伦女士对待盲人的”我”充满耐心和爱，让”我”感受到生活下去的力量。</p>
<p>13.”使得遭到惩罚的事件不大可能重复，而受到奖励的事件则会增加重复的可能性。”</p>
<p>这里我想到了GAN（对抗生成模型），有这种奖励和惩戒的机制在里面。</p>
<p>14.”如果教师没有与学生沟通的其他方式，那么所传达的信息量不会超过所用的奖励和惩罚的总和。”</p>
<p>教育”儿童机器”还应该有其他更加温和的方法，奖励惩戒机制可以用作验证其他温和方法的一种。</p>
<p>15.” 在后一种情况下，大多数存储空间将被用来存储定义和命题，这些命题可能具有各种各样的形式，例如，确定的事实，推测，数学上证明的定理，权威给出的判断，具有逻辑形式却没有确定值的表达式等等。”</p>
<p>我赞同第一种”尽可能保持简单以保持通用性”，毕竟大多数人生下来就没有所谓的天赋，多数的技能都是通过后天习得，practice make perfect。</p>
<p>16.”合理的命令（在系统内部表达，并不是系统规则的一部分）”</p>
<p>机器人三大定律：一：机器人不得伤害人类个体，或者目睹人类个体将遭受危险而袖手不管；二：机器人必须服从人给予它的命令，当该命令与第一定律冲突时例外；三：机器人在不违反第一、第二定律的情况下要尽可能保护自己的生存。个人认为这三大定律在一定程度上保证了人类的安全，但是同时也使得机器和人类不能平等地享有人权。所以我是不赞成的。</p>
<p>17.”在这些指令中，最重要的是调节逻辑系统规则的执行顺序，因为在使用这个系统的每一步，都会有许多不同选择，在遵守逻辑系统规则的情况下，任意选择一个都是允许的。”</p>
<p>在现代深度学习神经网络中的表现在于权重和偏置参数的调节，而这也依赖于训练的次数和数据集的质量。</p>
<p>18.”这些命题可能来自权威，也可能来自机器本身，例如科学归纳。”</p>
<p>“科学归纳”意味着机器要有获得经验的能力。</p>
<p>19. 在学习过程中发生变化的规则是一类不那么自命不凡的规则，只声称短暂的有效性。读者可以将之与美国宪法类比。</p>
<p>可以用人类基因是不变的规则，但是后天的条件反射是可变的规则来类比。</p>
<p>20.”智能行为应该和完全服从命令的行为有别，但又不能太大，不应该产生随机的行为或无限循环。”</p>
<p>线性回归、梯度下降、最小二乘</p>
<p>21.”学习的过程并不会产生百分之百的确定结果，否则就不是学习了。”</p>
<p>类比现在的深度学习神经网络，准确率也不可能达到100%。否则就不是学习了，而是既定的规则。</p>
<p>22.”在一个学习机器中加入随机元素应该是明智的”</p>
<p>神经网络中大量的非线性函数。</p>
<p>23. 如何跟踪已经尝试过的不同基因组合，从而避免重复呢？</p>
<p>在有些递归或者动态规划算法中，可能会用一个数组来存储已经计算过的值，从而减少计算的次数，优化算法的时间复杂度。同时也是用空间换时间的一种思想的实践。</p>
<p>24.”我们希望机器最终能和人在所有纯智力领域竞争，但何处是最好的开端？”</p>
<p>“Blue Deep”在智力问答游戏中的出色表现和”AlphaGo”、”AlphaZero”在围棋的出色表现使得强人工智能的实现又近了一步。</p>
<p>25.”也有人认为最好用钱给机器买最好的传感器，然后教它听说英语，和教一个正常的小孩一样，教它命名事物等等。”</p>
<p>在我还没看过图灵这篇论文的时候也有过这种想法，用最好的传感器造一个类人机器人，然后让它从幼儿园开始接受教育，最终实现强人工智能的目的（显然还要强大的算法的支持）。</p>
<p>26.”我们的目光所及，只是不远的前方，但是可以看到，那里有许多工作要做。”</p>
<p>此时此刻，两个灵魂在隔空对话，图灵的大部分想法到了这个时代有的已经验证有的还没实现。图灵的大多数想法放到这个时代并没有落后，甚至还有一些超前。”我们的目光所及，只是不远的前方”我们还有许多工作要完成。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/xiaocai281/article/details/102473502?utm_source=app&amp;tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">图灵的文章&quot;Computing machinery and intelligence&quot;译文</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/262922354" target="_blank" rel="noopener">让神经网络解释自己：牛津大学博士小姐姐，用毕业论文揭示&quot;炼丹炉&quot;结构</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>paper</tag>
        <tag>think</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>欧拉公式の推导</title>
    <url>/articles/euler-s-formula.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="https://upload.wikimedia.org/wikipedia/commons/6/60/Leonhard_Euler_2.jpg" alt="Euler"></p>
<h3 id="Euler’s-formula"><a href="#Euler’s-formula" class="headerlink" title="Euler’s formula:"></a>Euler’s formula:</h3><p>$$<br>\Large{e^{ix}=cosx+isinx<br>\xrightarrow{x=\pi}<br>e^{\pi i}+1=0}<br>$$<br>This formula called <code>created by god</code>, because it contain $e\quad\pi\quad1$.</p>
<h3 id="How-the-formula-come-from"><a href="#How-the-formula-come-from" class="headerlink" title="How the formula come from?"></a>How the formula come from?</h3><p>This answer is <strong>Taloyr</strong><br>$$<br>\underset{x \to x_{0}}{\lim}f(x)=\sum_{i=0}^{n}\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+o(x^n)<br>$$<br>when $x_0$ equals $0$, the formula transform to<br>$$<br>\underset{x \to 0}{\lim}f(x)=\sum_{i=0}^{n}\frac{f^{(n)}(0)}{n!}x^n+o(x^n)<br>$$<br>Here’s three items about $e^x\quad sinx\quad cosx$</p>
<p>$<br>\small{e^x=1+x+\frac{x^2}{2!}+\frac{x^3}{3!}+…+\frac{x^n}{n!}}<br>$</p>
<p>$<br>\small{sinx=x-\frac{x^3}{3!}+\frac{x^5}{5!}+O(x^5)}<br>$</p>
<p>$<br>\small{cosx=1-\frac{x^2}{2!}+\frac{x^4}{4!}+O(x^4)}<br>$</p>
<p>At the first equaltion we replace the partation of $x$ with $ix$<br>and the orgainal equaltion become to</p>
<p>$<br>e^{ix}=1+ix-\frac{x^2}{2!}-i\frac{x^3}{3!}+\frac{x^4}{4!}+i\frac{x^5}{5!}+…+\frac{x^{in}}{in!}\Rightarrow e^{ix}=\left(1-\frac{x^2}{2!}+\frac{x^4}{4!}+O(x^4)\right)+\left(ix-i\frac{x^3}{3!}+i\frac{x^5}{5!}+O(x^5)\right)<br>$</p>
<p>that is $e^{ix}=cosx+isinx$</p>
]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>官网信息更新获得通知</title>
    <url>/articles/get-website-message-alert.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><p>国家线还没出, 众多2020考研学子们一定异常焦急地等待官网的通告, 想着复试名单什么时候出, 但又不能时时刻刻盯着官网的通知栏; 别担心, 让代码来帮助你…<br>我们需要代码帮我们完成这样几件事:</p>
<ol>
<li>每隔10min检查一下官网的通知栏</li>
<li>抓取第一条通知</li>
<li>将抓取到的通知与上一条抓取的通知比对<ul>
<li>如果不相同则将这次的通知发送到用户的手机上, 将上一条通告覆盖并重复以上步骤</li>
<li>如果相同则不进行操作, 重复以上三个步骤</li>
</ul>
</li>
</ol>
<h3 id="jsoup"><a href="#jsoup" class="headerlink" title="jsoup"></a>jsoup</h3><blockquote>
<p>jsoup is a Java library for working with real-world HTML. It provides a very convenient API for fetching URLs and extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</p>
</blockquote>
<p>jsoup是一个HTML解析器, 他能像CSS选择器一样选取DOM节点, 做到类似于XPath的效果;</p>
<p>使用jsoup获得网页内容就一句话<code>Document doc = Jsoup.connect(TARGET_URL).get();</code><br><img src="/assets/blogimg/example_2020-03-10.jpg" alt="example"><br>如何选到<code>&lt;a&gt;</code>标签中的Text呢?</p>
<ol>
<li>先获取到它们的父级标签<code>&lt;td class=&quot;tablexu&quot;&gt;</code><pre><code class="java">Element element = doc.select(&quot;td.tablexu&quot;).first();</code></pre>
</li>
<li>在<code>&lt;a&gt;</code>标签所组成的集合里面选取第一个标签并获取标签内的文字, 也就是最新的通告<pre><code class="java">String newMsg=element.select(&quot;a&quot;).first().text();</code></pre>
</li>
</ol>
<h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3><p><strong>Timer</strong>是javaAPI中的一个定时器, 它能每隔一段时间开启一个子线程处理任务(C#中也有类似的API);</p>
<p>java代码如下:</p>
<pre><code class="java">import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

public class Main {
    public final static String TARGET_URL=&quot;http://jky.yangtzeu.edu.cn/tzgg.htm&quot;;
    public final static String TARGET_URL2=&quot;http://yjsc.yangtzeu.edu.cn/zsgz/tzgg.htm&quot;;
    public final static String MSG_URL;

    private static String oldMsg=&quot;&quot;;
    public static void main(String[] args) {
        Timer timer=new Timer();
        timer.schedule(new FooTimerTask(),1000,1000*60*10);
    }
    static class FooTimerTask extends TimerTask {
        @Override
        public void run() {
            try {
                Document doc = Jsoup.connect(TARGET_URL2).get();
                Element element = doc.select(&quot;td.tablexu&quot;).first();
                String newMsg=element.select(&quot;a&quot;).first().text();
                if (!newMsg.equals(oldMsg)){
                    System.out.println(newMsg);
                    System.out.println(sendGet(MSG_URL+&quot;?text=&quot;+newMsg.replace(&quot; &quot;,&quot;&quot;)+&quot;&amp;desp=[点击这里](http://yjsc.yangtzeu.edu.cn/&quot;+element.select(&quot;a&quot;).attr(&quot;href&quot;).replace(&quot;..&quot;,&quot;&quot;)+&quot;)&quot;));
                    oldMsg=newMsg;
                }
            }catch(Exception e) {
                System.err.println(sendGet(MSG_URL+&quot;?text=get website message failed!!!&amp;desep=&quot;+e.getMessage()));
            }
        }
    }

    public static String sendGet(String urlName){
        String result = &quot;&quot;;
        try{
            URL realUrl = new URL(urlName);
            URLConnection conn = realUrl.openConnection();
            conn.setRequestProperty(&quot;accept&quot;, &quot;*/*&quot;);
            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);
            conn.setRequestProperty(&quot;user-agent&quot;,
                    &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);
            conn.connect();
            Map&lt;String, List&lt;String&gt;&gt; map = conn.getHeaderFields();
            for (String key : map.keySet()) {
                System.out.println(key + &quot;--&gt;&quot; + map.get(key));
            }
            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
            System.out.println(&quot;get request failed!!&quot; + e);
            e.printStackTrace();
        }
        return result;
    }
}
</code></pre>
<h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><ul>
<li>怎么把通知发送到手机上?<ul>
<li>可以借助于微信或者QQ的API(我用的是Server酱)</li>
<li>可以用做一个AndroidAPP用Socket和部署在服务器上的脚本建立连接;</li>
</ul>
</li>
<li>怎么部署<ul>
<li>将项目打包成可执行的jar包扔到装有JDK的服务器上运行</li>
<li>服务器甚至不需要开放相应的端口(省去了很多麻烦)</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么使用live2d做一个看板娘</title>
    <url>/articles/how-to-make-a-showgirl-use-live2d.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="如你所见右边是我老婆-≧▽≦-如你所见左边是我老婆-≧▽≦-，"><a href="#如你所见右边是我老婆-≧▽≦-如你所见左边是我老婆-≧▽≦-，" class="headerlink" title="如你所见右边是我老婆(/≧▽≦)/如你所见左边是我老婆(/≧▽≦)/，"></a>如你所见右边是我老婆(/≧▽≦)/如你所见左边是我老婆(/≧▽≦)/，</h4><p>噗，开个玩笑，博主没老婆的啦！<br><img src="/assets/blogimg/2151926752.png" alt="下载 (1).png"><br>如何利用live2d做一个悬浮小人呢？<br>这其中我经历了九九八十一难，这要从我玩天命之子（日服）说起，当我打开天命之子这款游戏时，哇塞，这精美的立体手绘，这暴露的战斗服装。俺♥中一颤，这这这不就是我一直寻找的老婆吗？</p>
<h4 id="于是过了很久很久。。。"><a href="#于是过了很久很久。。。" class="headerlink" title="于是过了很久很久。。。"></a>于是过了很久很久。。。</h4><h2 id="寒假期间浏览网页无意中看到许多博客有漂亮的看板娘，哇，这个有创意，"><a href="#寒假期间浏览网页无意中看到许多博客有漂亮的看板娘，哇，这个有创意，" class="headerlink" title="寒假期间浏览网页无意中看到许多博客有漂亮的看板娘，哇，这个有创意，"></a>寒假期间浏览网页无意中看到许多博客有漂亮的看板娘，哇，这个有创意，</h2><p>…待续</p>
]]></content>
      <tags>
        <tag>live2d</tag>
      </tags>
  </entry>
  <entry>
    <title>极限&amp;导数</title>
    <url>/articles/limitation-derivative.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h3><ul>
<li>函数的极限<ul>
<li>$frac{0}{0}; \frac{\infty}{\infty}$</li>
<li>$\infty-\infty; 0\cdot\infty$</li>
<li>$1^{\infty} 0^{0}; \infty^{0}$</li>
</ul>
</li>
<li>数列的极限<ul>
<li>夹逼准则</li>
<li>单调有界收敛准则</li>
<li>定积分的定义</li>
</ul>
</li>
<li>极限的应用<ul>
<li>连续,间断点</li>
<li>渐近线(垂直,水平,斜)</li>
<li>导数的定义</li>
</ul>
</li>
</ul>
<h4 id="函数的极限"><a href="#函数的极限" class="headerlink" title="函数的极限"></a>函数的极限</h4><h5 id="frac-0-0-frac-infty-infty"><a href="#frac-0-0-frac-infty-infty" class="headerlink" title="$frac{0}{0}; \frac{\infty}{\infty}$"></a>$frac{0}{0}; \frac{\infty}{\infty}$</h5><h6 id="洛必达"><a href="#洛必达" class="headerlink" title="洛必达"></a><em>洛必达</em></h6><h6 id="泰勒公式"><a href="#泰勒公式" class="headerlink" title="泰勒公式"></a><em>泰勒公式</em></h6><p>$$\underset{x \to x_{0}}{\lim}f(x)=\sum_{i=0}^{n}\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+o(x^n)$$</p>
<p>常见的泰勒公式:</p>
<ul>
<li>$e^x=1+x+\frac{x^2}{2!}+\frac{x^3}{3!}+o(x^3)$</li>
<li>$ln(1+x)=x-\frac{x^2}{2}+\frac{x^3}{3}+o(x^3)$</li>
<li>${1+x}^a=1+ax+\frac{a(a-1)}{2!}x+o(x^2)$</li>
</ul>
<h6 id="抓大头"><a href="#抓大头" class="headerlink" title="抓大头"></a><em>抓大头</em></h6><h5 id="infty-infty-0-cdot-infty"><a href="#infty-infty-0-cdot-infty" class="headerlink" title="$\infty-\infty; 0\cdot\infty$"></a>$\infty-\infty; 0\cdot\infty$</h5><h5 id="1-infty-0-0-infty-0"><a href="#1-infty-0-0-infty-0" class="headerlink" title="$1^{\infty} 0^{0}; \infty^{0}$"></a>$1^{\infty} 0^{0}; \infty^{0}$</h5><h4 id="数列的极限"><a href="#数列的极限" class="headerlink" title="数列的极限"></a>数列的极限</h4><h4 id="极限的应用"><a href="#极限的应用" class="headerlink" title="极限的应用"></a>极限的应用</h4><h3 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h3><h4 id="导数的计算"><a href="#导数的计算" class="headerlink" title="导数的计算"></a>导数的计算</h4><h4 id="导数的应用"><a href="#导数的应用" class="headerlink" title="导数的应用"></a>导数的应用</h4>]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>撒野</title>
    <url>/articles/i-can-not-hear-you.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><meting-js server="netease" type="song" id="483937795"></meting-js></p>
<p>这首歌就一句话:好听！</p>
]]></content>
      <tags>
        <tag>think</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>扔骰（tou）子小游戏</title>
    <url>/articles/make-dice-game.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：</p>
<h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1:"></a>demo1:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;craps&lt;/title&gt;
    &lt;script&gt;
        function init() {
            var ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);
            ctx.beginPath();

            ctx.fillStyle = &quot;rgb(200,0,200)&quot;;
            ctx.arc(200,20,200,0,0.5*Math.PI,true);
            ctx.lineWidth=5;
            ctx.closePath();
            ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;
            ctx.stroke();
            ctx.fill();

        }
    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init();&quot; &gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;
      your explor don&#39;t support h5 cavas
    &lt;/canvas&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>
<h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2:"></a>demo2:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;craps&lt;/title&gt;
    &lt;script&gt;
        var sw=50;//骰子的宽高
        var sh=50;
        var cw=400;//画布的宽高
        var ch=300;
        var sx=50;//骰子的距画布的位置
        var sy=50;
        var pd=6;//圆点半径
        var ctx;//保存上下文变量
        function init() {
            //var rs=1+math.floor(math.random()*6);
            var rs=5;
            drewface(rs);
        }


            function drewface(n) {
                ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);
                ctx.lineWidth=5;
                ctx.clearRect(sx,sy,sw,sh);
                ctx.strokeRect(sx,sy,sw,sh);
                ctx.fillStyle = &quot;rgb(0,0,0)&quot;;
                switch (n){
                    case 1: drew1(); break;
                    case 2: drew2(); break;
                    case 3: drew2(); drew1();  break;
                    case 4: drew4();  break;
                    case 5: drew4(); drew1(); break;
                    case 6: drew4(); drew2mid(); break;
                }

                /*ctx.beginPath();

                ctx.arc(200,20,200,0,0.5*Math.PI,true);
                ctx.lineWidth=5;
                ctx.closePath();
                ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;
                ctx.stroke();
                ctx.fill();*/
                function drew1() {
                    var px=sx+0.5*sw;
                    var py=sy+0.5*sh;
                    ctx.beginPath();
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.fill();
                }
                function drew2() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+sh-3-pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
                function drew4() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+sh-3-pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+3+pd;
                    py=sy+sh-3-pd;
                    ctx.closePath();/*注意要先结束左上角和右下角圆点的绘制不然会产生交叉感染*/
                    ctx.fill();
                    ctx.beginPath()
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
                function drew2mid() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+0.5*sh;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+0.5*sh;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
            }

    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init();&quot; &gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;300&quot;&gt;
      your explor don&#39;t support h5 cavas
    &lt;/canvas&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<h3 id="demo3"><a href="#demo3" class="headerlink" title="demo3:"></a>demo3:</h3><pre><code class="javascript">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;craps&lt;/title&gt;
    &lt;script&gt;
        var sw=50;//骰子的宽高
        var sh=50;
        var cw=400;//画布的宽高
        var ch=300;
        var sx=50;//骰子的距画布的位置
        var sy=50;
        var pd=6;//圆点半径
        var ctx;//保存上下文变量
        function init() {
            var rs=1+Math.floor(Math.random()*6);
            drewface(rs);
            document.f.point.value=rs;
        }


            function drewface(n) {
                ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);
                ctx.lineWidth=5;
                ctx.clearRect(sx,sy,sw,sh);
                ctx.strokeRect(sx,sy,sw,sh);
                ctx.fillStyle = &quot;rgb(0,0,0)&quot;;
                switch (n){
                    case 1: drew1(); break;
                    case 2: drew2(); break;
                    case 3: drew2(); drew1();  break;
                    case 4: drew4();  break;
                    case 5: drew4(); drew1(); break;
                    case 6: drew4(); drew2mid(); break;
                }

                /*ctx.beginPath();

                ctx.arc(200,20,200,0,0.5*Math.PI,true);
                ctx.lineWidth=5;
                ctx.closePath();
                ctx.strokeStyle = &quot;rgb(200,0,0)&quot;;
                ctx.stroke();
                ctx.fill();*/
                function drew1() {
                    var px=sx+0.5*sw;
                    var py=sy+0.5*sh;
                    ctx.beginPath();
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.fill();
                }
                function drew2() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+sh-3-pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
                function drew4() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+sh-3-pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+3+pd;
                    py=sy+sh-3-pd;
                    ctx.closePath();/*注意要先结束左上角和右下角圆点的绘制不然会产生交叉感染*/
                    ctx.fill();
                    ctx.beginPath()
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+3+pd;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
                function drew2mid() {
                    var px;
                    var py;
                    ctx.beginPath()
                    px=sx+3+pd;
                    py=sy+0.5*sh;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    px=sx+sw-3-pd;
                    py=sy+0.5*sh;
                    ctx.arc(px,py,pd,0,2*Math.PI,true);
                    ctx.closePath();
                    ctx.fill();
                }
            }

    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init();&quot; &gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;300&quot;&gt;
      your explor don&#39;t support h5 cavas
    &lt;/canvas&gt;
    &lt;form name=&quot;f&quot;&gt;
        &lt;input type=&quot;submit&quot; value=&quot;扔骰子&quot;&gt;
        你的点数是&lt;input name=&quot;point&quot; type=&quot;text&quot; value=&quot; &quot;&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>附：<br>1.<a href="http://www.friendsofed.com/downloads.html" target="_blank" rel="noopener">The Essential Guide to HTML5—using games to learn html5 and javascript</a></p>
]]></content>
      <tags>
        <tag>JS</tag>
        <tag>H5</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用win10提高工作效率</title>
    <url>/articles/p16.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/windows-icon.png" alt="windows-icon"><br><meting-js server="netease" type="song" id="5197160"></meting-js></p>
<h3 id="windows-10-快捷键"><a href="#windows-10-快捷键" class="headerlink" title="windows 10 快捷键"></a>windows 10 快捷键</h3><h5 id="1-截图"><a href="#1-截图" class="headerlink" title="1. 截图"></a>1. 截图</h5><table>
<thead>
<tr>
<th>快捷键</th>
<th>是否保存到剪贴板</th>
<th>是否保存到目录</th>
<th>是否可选区域</th>
</tr>
</thead>
<tbody><tr>
<td>win+shift+s</td>
<td>是</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>printscreen</td>
<td>是</td>
<td>是(onedrive)</td>
<td>否(全屏)</td>
</tr>
<tr>
<td>alt+printscreen</td>
<td>是</td>
<td>是(onedrive)</td>
<td>否(当前窗口)</td>
</tr>
<tr>
<td>win+printscreen</td>
<td>是</td>
<td>是</td>
<td>否(全屏)</td>
</tr>
</tbody></table>
<h5 id="2-窗口操作"><a href="#2-窗口操作" class="headerlink" title="2. 窗口操作"></a>2. 窗口操作</h5><ul>
<li><p>切换当前工作窗口用<code>win+tab</code>或<code>alt+tab</code></p>
</li>
<li><p><code>alt+f4</code>关闭当前窗口</p>
</li>
<li><p><code>win+↓</code>缩小当前窗口至任务栏</p>
</li>
<li><p><code>win+↑</code>放大当前窗口至全屏</p>
</li>
<li><p><code>win+m</code>缩小所有窗口至任务栏,恢复缩小的窗口用<code>win+shift+m</code></p>
</li>
<li><p><code>win+d</code>缩小所有窗口至任务栏,恢复缩小的窗口用<code>win+d</code></p>
</li>
</ul>
<h5 id="3-文件操作"><a href="#3-文件操作" class="headerlink" title="3. 文件操作"></a>3. 文件操作</h5><ul>
<li><p><code>win+e</code>打开资源管理器</p>
</li>
<li><p><code>win+shift+n</code>新建文件夹</p>
</li>
<li><p><code>选中文件+f2</code>文件重命名</p>
</li>
<li><p><code>alt+double click</code>查看文件属性</p>
</li>
<li><p><code>选中文件+ctrl+d</code>删除文件(不可恢复)</p>
</li>
</ul>
<h5 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h5><ul>
<li><p><code>win+a</code>打开通知面板</p>
</li>
<li><p><code>win+p</code>打开投影(此电脑投影到同一局域网下别的设备)</p>
</li>
<li><p><code>win+k</code>同一局域网下别的设备(智能手机)投影到此电脑</p>
</li>
<li><p><code>win+t</code>任务栏切换图标,配合<code>win+shift+t</code>和<code>win+number</code>使用效果更佳</p>
</li>
<li><p><code>win+break</code>控制面板中的系统界面(设置环境变量佷方便)</p>
</li>
<li><p><code>win+r</code>打开运行界面(输入后可以快捷地打开一些小工具)</p>
</li>
</ul>
<h3 id="windows10运行界面"><a href="#windows10运行界面" class="headerlink" title="windows10运行界面"></a>windows10运行界面</h3><ul>
<li><p>mspaint—画图工具</p>
</li>
<li><p>osk—虚拟键盘(一些tablet computer会用到)</p>
</li>
<li><p>psr—步骤记录器</p>
</li>
<li><p>ftp—windows10自带的文件传输协议(其他版本的windows应该也有)</p>
</li>
<li><p>notepad—windows最**的记事本(推荐用notepad++,你会爱上它)</p>
</li>
<li><p>sysdm.cpl—打开系统属性界(可以方便地设置远程协助)</p>
</li>
<li><p>mstsc(microsoft terminal services client)—打开远程桌面连接(remote desktop connecting)</p>
</li>
<li><p>cmd—windows自带的dos系统</p>
</li>
</ul>
<hr>
<p>ps:由于正在身为学生的博主正在学习英语所以会穿插一些英语不要见怪…</p>
<p>and:未完待续…</p>
<p>other:一些格式上的问题不习惯的话<a href="../item/example/windows10-hotkey.html">点我</a></p>
]]></content>
      <tags>
        <tag>DOS</tag>
        <tag>hotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD批处理命令的强大</title>
    <url>/articles/p11.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre><code>前几天我用quickbms批量提取韩游天命之子（destiny_child）的pck文件，提取出来的是一个一个文件夹：</code></pre>
<p><img src="/assets/blogimg/p11-1.png" alt="p11-1" title="p11-1"><br>    每个文件夹里是这样的文件：<br><img src="/assets/blogimg/p11-2.png" alt="p11-2" title="p11-2"><br>现在我需要：</p>
<ol>
<li>将每个子文件夹里以.dat为后缀的文件批量改成.exp.json为后缀;将每个子文件夹里以.txt为后缀的文件批量改成.mtn为后缀.</li>
<li>在每个子文件夹里建立3个文件夹：expressions，montions，textures.</li>
<li>将每个子文件夹里.exp.json为后缀的文件放入expressions文件夹，以.mtn为后缀的文件放入montions文件夹，以png为后缀的文件放入textures文件夹.<h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3> 毫无疑问，在图形界面面对200多个子文件夹做复制粘贴的重复工作不仅枯燥而且效率低下。那么有没有更快捷的方法呢？答案是有，下面有请cmd批处理命令！！！！<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3></li>
<li>对于我们以上提出的第一个<code>for /r %i in (*.txt) do ren &quot;%i&quot; *.mtn</code>命令是行之有效的。他的作用是遍历output这个主文件夹下的所有子文件夹，并且把.txt后缀改为.mtn。%i这个变量代表.txt,就是不断在每个子目录下运行<code>ren *.txt *.mtn</code>这个命令。</li>
<li>对于第二个我们可以用<code>for /d %i in (*) do md &quot;%~fsi\expressions&quot; &quot;%~fsi\motions&quot; %~fsi\textures&quot; </code>这个命令来完成。意思就是不断在每个子目录下运行<code>md &quot;\expressions&quot; &quot;\motions&quot; &quot;\textures&quot;</code>这个命令。</li>
<li>对于第三个<code>for /d %i in (*) do move &quot;%~fsi\*.exp.json&quot; &quot;%~fsi\expressions&quot;</code>意思大同小异。<br>然后我们看看效果：<br><img src="/assets/blogimg/p11-3.png" alt="p11-3" title="p11-3"><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3></li>
</ol>
<ul>
<li>小彩蛋：<br><img src="/assets/blogimg/p11-4.gif" alt="p11-4" title="p11-4"></li>
<li>参考：</li>
</ul>
<ol>
<li><a href="https://tieba.baidu.com/p/5218112440" title="【教程】提取韩游【天命之子】的人物模型" target="_blank" rel="noopener">【教程】提取韩游【天命之子】的人物模型</a></li>
<li><a href="https://tieba.baidu.com/p/5260198912?share=9105&fr=share&see_lz=1" title="天命之子 live2d打包教程" target="_blank" rel="noopener">天命之子 live2d打包教程</a></li>
<li><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" title="给博客添加能动的看板娘(Live2D)" target="_blank" rel="noopener">给博客添加能动的看板娘(Live2D)</a></li>
<li><a href="https://tieba.baidu.com/p/3192612677?pn=1" title="24小时快速建模[Live2D Cubism 2.0 closed beta]报告" target="_blank" rel="noopener">24小时快速建模[Live2D Cubism 2.0 closed beta]报告</a></li>
</ol>
<ul>
<li>demo click <a href="http://www.madeai.cn/live2d/" title="demo" target="_blank" rel="noopener">here</a></li>
</ul>
]]></content>
      <tags>
        <tag>DOS</tag>
        <tag>CMD</tag>
        <tag>.bat</tag>
      </tags>
  </entry>
  <entry>
    <title>跳跳球</title>
    <url>/articles/mark-ball-game.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这些天没什么事读了《HTML5游戏开发》这本书，做一下实例：<br><img src="/assets/blogimg/item_game_tiaotiaoball_ball.png"><br>1.<a href="/item/game/tiaotiaoball/settime">计时器：</a></p>
<pre><code class="bash">&lt;html&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;!--解决中文乱码的问题--&gt;
    &lt;script&gt;
        function init() {
            setInterval(&quot;document.f.display.value=String(Number(document.f.display.value)+1)&quot;,1000);
        }//定时器 每隔一秒加一次
        /*function incre() {
         document.f.display.value=String(Number(document.f.display.value)+1);

         }*/

    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init()&quot;&gt;
    &lt;form name=&quot;f&quot;&gt;&lt;!--不写form总报错 不知道为啥--&gt;
        &lt;input name=&quot;display&quot; type=&quot;text&quot; value=&quot;0&quot;/&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>2.<a href="/item/game/tiaotiaoball/ball1">用canvas插入img：</a></p>
<pre><code class="bash">&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;ball&lt;/title&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    var img1=new Image();
    var img2=new Image();
    img1.src=&quot;../../images/cool.jpg&quot;;
    img2.src=&quot;../../images/dog.gif&quot;;
    var ctx;
    function init(){
        ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);
        ctx.drawImage(img1,10,20,50,50);
        ctx.drawImage(img2,150,20,100,100);
    }
    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init();&quot;&gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;
        your browser don&#39;t support convas
    &lt;/canvas&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>3.<a href="/item/game/tiaotiaoball/ball">跳跳球：</a></p>
<pre><code class="bash">&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;ball&lt;/title&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    var boxx=50,boxy=50,boxw=300,boxh=300;//盒子左上角据左边画布的距离，盒子左上角据上边画布的距离，盒子的宽高；
    var ballx=20,bally=20,ballvx=2,ballvy=4,ballr=6;//球的初始位置（相对盒子），球的位移，球的半径；
    var hshang=boxy+ballr,hxia=boxh+boxy-ballr,hzuo=boxx+ballr,hyou=boxw+boxx-ballr;//里面的小盒子 用于检测碰撞；
    var ctx;//保存上下文 不太懂上下文是啥
    function init(){
        ctx=document.getElementById(&quot;canvas&quot;).getContext(&#39;2d&#39;);//获取canvas的上下文
        ctx.fillStyle=&quot;rgb(200.0.0)&quot;;//设置填充颜色
        ctx.lineWidth=6; //设置线宽
        moveball();//先显示ball
        setInterval(moveball,10); //setTimeout()只执行一次事件 不能重复调用moveball事件；
    }
    function moveball() {
        ctx.clearRect(boxx,boxy,boxw,boxh);//擦除整个盒子包括ball 第一次运行不会有任何影响
        moveandcheck();
        ctx.beginPath();
        ctx.arc(ballx,bally,ballr,0,2*Math.PI,true);//画圆
        ctx.fill();
        ctx.strokeRect(boxx,boxy,boxw,boxh);//画盒子
    }
    function moveandcheck() {//检测碰撞
        var perballx=ballx+ballvx,perbally=bally+ballvy;
        if(perballx&gt;hyou) {//如果超过小盒子的右边
            ballvx=-ballvx;//改变水平方向
            perballx=hyou; //&quot;设置下一个x等于这个边界值&quot; 没看懂啥意思；
        }
        if(perballx&lt;hzuo) {
            perballx=hzuo;
            ballvx=-ballvx;
        }
        if(perbally&gt;hxia) {
            perbally=hxia;
            ballvy=-ballvy;
        }
        if(perbally&lt;hshang) {
            perbally=hshang;
            ballvy=-ballvy;
        }
        ballx=perballx;
        bally=perbally;
    }
    function change() {
        ballvx=Number(document.f.vx.value);
        ballvy=Number(document.f.vy.value);
    }//在form标签里调用onsubmit=&quot;return change();&quot;需要设置return false不然会整个刷新页面
    &lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&quot;init();&quot;&gt;
    &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot; style=&quot;background-color: aqua;&quot;&gt;
        your browser don&#39;t support convas
    &lt;/canvas&gt;
    &lt;form name=&quot;f&quot; id=&quot;f&quot;&gt;
        水平速度:&lt;input name=&quot;vx&quot; id=&quot;vx&quot; type=&quot;number&quot; value=&quot;2&quot;&gt;
        垂直速度:&lt;input name=&quot;vy&quot; id=&quot;xy&quot; type=&quot;number&quot; value=&quot;4&quot;&gt;
        &lt;input type=&quot;button&quot; value=&quot;change&quot; onclick=&quot;change()&quot;&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>附：<br>1.<a href="http://www.friendsofed.com/downloads.html" target="_blank" rel="noopener">The Essential Guide to HTML5—using games to learn html5 and javascript</a></p>
]]></content>
      <tags>
        <tag>JS</tag>
        <tag>H5</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>ajax异步加载</title>
    <url>/articles/p12.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/p12-1.png" alt="p12-1" title="p12-1"></p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre><code>ajax即Asynchronous Javascript And XML,异步javascript和XML;json即JavaScript Object Notation,javascript对象标记.</code></pre>
<h3 id="使用原生js创建XMLHttpRequest对象"><a href="#使用原生js创建XMLHttpRequest对象" class="headerlink" title="使用原生js创建XMLHttpRequest对象"></a>使用原生js创建XMLHttpRequest对象</h3><pre><code class="javascript">var xhr = new XMLHttpRequest;
xhr.open(&quot;GET&quot;, &quot;https://blog.madeai.cn/api&quot;);
xhr.onload = function () {
    var data = JSON.parse(xhr.responseText);
    doSomething(data);
}
xhr.send();</code></pre>
<ol>
<li>其中<code>xhr.open();</code>有3个传入参数,第一个是数据传输的方式,最常用的就是<code>post</code>,<code>get</code>,<code>put</code>,<code>delect</code>了.第二个是后端的URL,值得注意的是如果是<strong>跨域</strong>的话,需要在后端PHP代码前添加<code>header(&quot;Access-Control-Allow-Origin: *&quot;);</code>,或者用代理.<br>第三参数是Boolean型的可选项,表示是否异步加载;</li>
<li><code>xhr.onload();</code>是在数据加载完成后要处理的事情;也可以用<code>xhr.onreadystatechange=doSomething;</code>.<blockquote>
<p>onreadystatechange 是一个事件句柄。它的值 (state_Change) 是一个函数的名称，当 XMLHttpRequest 对象的状态发生改变时，会触发此函数。状态从 0 (uninitialized) 到 4 (complete) 进行变化。仅在状态为 4 时，我们才执行代码。</p>
</blockquote>
</li>
<li>最后一个<code>xhr.send();</code>就是将请求发送到服务器端了;</li>
</ol>
<h3 id="使用jquery封装的-ajax-和-getJSON-函数"><a href="#使用jquery封装的-ajax-和-getJSON-函数" class="headerlink" title="使用jquery封装的$ajax()和$getJSON()函数"></a>使用jquery封装的$ajax()和$getJSON()函数</h3><ul>
<li>$ajax比较灵活哦,异步加载任何格式的数据;<pre><code class="javascript">$.ajax({
  type: &quot;POST&quot;,//像登陆一样的比较重要的数据要用post,放进请求体里哦;
  url: &quot;http://madeai.cn/api&quot;,
  dataType: &quot;json&quot;,
  data: {
      username:444,
      password:6666//用md5签名,数据传输更安全;
  },
  success: function (obj) {
      doSomething(obj);
  },
  error: function(XMLHttpRequest, textStatus, errorThrown) {
      console.log(XMLHttpRequest.status,XMLHttpRequest.status,textStatus);
  },</code></pre>
</li>
<li>用$getJSON()来获取json数据;<pre><code class="javascript">$.getJSON(&quot;http://madeai.cn/api&quot;, &quot;&quot;, function (data) {
  $.each(data[&quot;result&quot;].tracks, function (i, item) {//each循环 使用$.each方法遍历返回的数据data
  /*doSomething;
   *function();中第一个参数是数组的索引index,第二个是原数组对象;
   */
  });
});</code></pre>
</li>
</ul>
<p>jquery还封装了类似<code>$get()</code>,<code>$.post()</code>的函数;</p>
<hr>
<p>demo click <a href="https://huangyebiaoke.github.io/item/example/ajax&json.html" target="_blank" rel="noopener">here</a></p>
]]></content>
      <tags>
        <tag>JS</tag>
        <tag>AJAX</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>网红辞职信</title>
    <url>/articles/p15.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/p15-1.png" alt="banner"></p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景:"></a>背景:</h3><pre><code>前几天抖音头条刷的特别火的臣退了的视频被人拿来写辞职信,于是就蹭一波热度.</code></pre>
<p>头条上的视频</p>
{% dplayer "url=http://publicereadmsmnsnsnnss.oss-cn-hangzhou.aliyuncs.com/_14-39-09.mp4 " "loop=no" "theme=#FADFA3" "autoplay=false" %}

<h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><h4 id="样式"><a href="#样式" class="headerlink" title="样式:"></a>样式:</h4><pre><code>&lt;style&gt;
    .main{
        width: 500px;
        height: 250px;
        border: 2px solid black;
        margin: 0 auto;
        position:absolute;
        left: 500px;
    }
    .title,.chose{
        text-align: center;
    }
    .chose{
        margin:40px;
    }
    .yes{
        margin-right: 40px;
    }
&lt;/style&gt;</code></pre>
<h4 id="dom树"><a href="#dom树" class="headerlink" title="dom树:"></a>dom树:</h4><pre><code class="html">&lt;div class=&quot;main&quot;&gt;
    &lt;h2 class=&quot;title&quot;&gt;辞职信&lt;/h2&gt;
    &lt;article&gt;老板我要辞职&lt;img width=&quot;100&quot; src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1530346447488&amp;di=cdd760f50b3188a667921dc3de943d38&amp;imgtype=0&amp;src=http%3A%2F%2F1873.img.pp.sohu.com.cn%2Fimages%2Fblog%2F2011%2F5%2F3%2F13%2F13%2Fu115243949_1306e5597e5g214.gif&quot;&gt;,请批准!&lt;/article&gt;
    &lt;div class=&quot;chose&quot;&gt;&lt;button class=&quot;yes&quot; id=&quot;yes&quot;&gt;同意&lt;/button&gt;&lt;button class=&quot;no&quot; id=&quot;no&quot;&gt;不同意&lt;/button&gt;&lt;/div&gt;
&lt;/div&gt;</code></pre>
<h4 id="javascript"><a href="#javascript" class="headerlink" title="javascript:"></a>javascript:</h4><pre><code class="script">&lt;script type=&quot;text/javascript&quot;&gt;
    var no=document.getElementById(&quot;no&quot;);
    var yes=document.getElementById(&quot;yes&quot;);
    var main=document.querySelector(&quot;.main&quot;);
    no.onmouseover=function () {
        var x=Math.random() * (500-this.offsetWidth);
        var y=Math.random()*(250-this.offsetHeight);
        this.setAttribute(&#39;style&#39;,
            &#39;position:absolute;&#39;+
            &#39;left:&#39;+x+&#39;px;&#39;+
            &#39;top:&#39;+y+&#39;px;&#39;
        );
    }
    yes.onmousedown=function () {
    main.innerHTML=&quot;&lt;h3 style=&#39;size: 30px; color: orangered;&#39;&gt;臣退了&lt;/h3&gt;,这一退也许就是一辈子~~~~&quot;;
    }
&lt;/script&gt;</code></pre>
<hr>
<p>实际演示请转向<a href="http://blog.madeai.cn/item/example/resign.html">demo</a></p>
]]></content>
      <tags>
        <tag>JS</tag>
        <tag>H5</tag>
      </tags>
  </entry>
  <entry>
    <title>堕落之王-想法</title>
    <url>/articles/p19.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>2018-01-31<br>原文：“走了？分手？好啊！滚吧，我早就想甩了你了，就是不好开口！哈哈……哈哈！”<br>想法：</p>
<p>2018-01-31<br>原文：叹了一口气，又瘫软在床上，喃喃自语道：“走吧！走吧！走了好啊！不要再找像我这样的王八蛋了！”<br>想法：</p>
<p>2018-01-31<br>原文：很久以后，眼睛开始渐渐恢复了视觉，耳朵也渐渐你恢复了听觉，一摸脸，已经泪流满面。“对不起，对不起！sorry，sorry。”我跪倒在床前，喃喃自语，泣不成声……<br>想法：</p>
<p>2018-01-31<br>原文：像是辫子姑娘、窗外没有身体的脸、厕所里面一张狞笑的鬼面孔、漂浮在空中没有身体的鬼影……有些鬼不出现，但是会催眠你，将你引诱到他的坟墓上，让你捏泥球塞住自己的鼻孔、塞住自己的嘴巴，活活让自己窒息而死；有些鬼会让你一直干活，抬几百斤的东西搬上搬下，让你活活累死。<br>想法：</p>
<p>2018-01-31<br>原文：处于恐惧和亢奋的我，非常愚蠢地对着那一个绿色的点走直线。遇到两三米的小悬崖，也直接跳了下来，遇到半腰深的池水，也直接游了过去。<br>想法：</p>
<p>2018-01-31<br>原文：这种精妙加巧合的算计，竟然可以不费任何代价让张世宏这个老狐狸答应拿出那几百万的保险金，这种精<br>想法：</p>
<p>2018-01-31<br>原文：我解释道：“准确地说这次的钱，我不得不赚，下次赚钱，就会有目的有计画地赚了。”<br>想法：</p>
<p>2018-01-31<br>原文：就好像一堆乱七八糟的线团里面藏着一条带血的丝，根本看都看不见，只是露出了一撮比汗毛还要细的小头. 这个女人，竟然可以一把拈住线头，然後将带血的丝线扯了出来。只不过，血已经乾涸，她还不能确定，这个丝线本来就是红的，还是被血染红的。<br>想法：</p>
<p>2018-01-31<br>原文：我把这一切归咎於我穷，我没钱. 穷人，是没有骨气的。或许，历史上有些人非常穷，但是他们的思想非常的丰富、纯粹，甚至高尚，所以他们顶天立地。<br>想法：</p>
<p>2018-01-31<br>原文：当一个没钱的人，去想有钱应该怎麽花时，通常是想怎麽在酒吧里面摆阔吸引女人，怎麽买名牌衣服，怎麽买好车子，怎麽在同学聚会上享受我混得比你们好的那种快感。这些都是白日梦，是非常痛苦的事情。因为这种幻想，不如梦境中的梦来得逼真，却有着美梦醒来後的痛苦、遗憾和饥饿感，一直处於自我幻想中的人，是可怜的。<br>想法：</p>
<p>2018-02-01<br>原文：最好是一个作家，可以安静地生活，安静地写东西。赚来的稿费，足够维持我们一家人的吃穿住行，也不用太好。”章允声音带着一些羞涩，继续道：十也可以是低调的音乐家，最好不是那种满世界开音乐会忙得不得了的那种. 还可以是老师，也可以是一个有艺术天分的电脑工程师。画家最好不要，因为画家会画别的女人的裸体，我会吃醋的。”<br>想法：</p>
<p>2018-02-01<br>原文：比如，在设定一百万这个任务的时候，我根本不知道，我怎麽去拥有这一百万. 这种不能掌握的感觉，让我非常恐惧，非常的不舒服。<br>想法：</p>
<p>2018-02-01<br>原文：会，不熟练。”我努力绷着脸，奇怪今天晚上我怎麽尽在说实话了。<br>想法：</p>
<p>2018-02-01<br>原文：我掏出钱包，开始数钱，数到第八张的时候，便显得微微有些不耐烦，直接将一叠钱交到她手中道：“你自己数，多了给你做小费，少了找他要。”<br>想法：</p>
<p>2018-02-01<br>原文：但是我知道这样是不行的，是会输的。<br>想法：</p>
<p>2018-02-01<br>原文：这些目光只在顷刻之间，很奇怪，我却看得清清楚楚。<br>想法：</p>
<p>2018-02-01<br>原文：美学素养是奇怪的东西。就好比不少人觉得某个人长得挺帅，然而美学家却觉得他一般；而美学家觉得某个人长得有味道、很美，普通人却看不出来。<br>想法：</p>
<p>2018-02-01<br>原文：（此处向昆汀塔伦提诺的《黑色追缉令》致敬。<br>想法：</p>
<p>2018-02-01<br>原文：表现得善良，却不长情。<br>想法：</p>
<p>2018-02-01<br>原文：宁紫道：“你知道吗?为了这双大美腿，我跳了多少绳，做了多少瑜伽，跳了多少舞。连每一处的曲线，都花了我不知道多少钱、多少精力、多少时间。<br>想法：</p>
<p>2018-02-01<br>原文：我轻轻地咳嗽一声，才发现自己没有穿衣衫，所以有些冷了，不由得用手搓了搓手臂，转过脸去，却在镜子上看到泪流满面的我。<br>想法：</p>
]]></content>
      <tags>
        <tag>think</tag>
        <tag>reading book</tag>
      </tags>
  </entry>
  <entry>
    <title>爱丽丝梦游仙境-想法</title>
    <url>/articles/p20.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>2018-07-13<br>原文：起来，哭是没用的！”爱丽丝严厉地对自己说，”限你-，分钟内就停止哭！<br>想法：</p>
<p>2018-07-13<br>原文：这个小孩很喜欢装成两个人<br>想法：</p>
<p>2018-07-13<br>原文：小鳄鱼怎样保养 它闪亮的尾巴， 把尼罗河水灌进 每一片金色的鳞甲。 它笑得多么快乐， 伸开爪子的姿势多么文雅， 它在欢迎那些小鱼 游进它温柔微笑着的嘴巴。<br>想法：</p>
<p>2018-07-13<br>原文：她第一个念头是掉进海里了。她对自己说：”那么我可以坐火车回去了，”<br>想法：孩子的想法可爱又单纯ಠ౪ಠ</p>
<p>2018-07-13<br>原文：只渡渡鸟（一种现已绝种的鸟，原产非洲毛里求斯。）<br>想法：中学课本上的渡渡鸟，可怜的小家伙╥﹏╥</p>
<p>2018-07-13<br>原文：我发现了什么吃的东西时，当然知道’这’是指什么。’这’通常指一只青蛙或一条蚯蚓<br>想法：可爱的小鸭子～(^з^)-</p>
<p>2018-07-13<br>原文：”你的口袋里还有别的东西吗，”它转向爱丽丝问道。 “只有一个顶针了。”爱丽丝伤心地说。 “把它拿来。”渡渡鸟说， 这时，大家又围住了爱丽丝，渡渡鸟接过顶针后兑严肃地递给了她，说：”我们请求你接受这只精致的顶针，”<br>想法：自己给自己奖品嘛？渡渡鸟严肃起来可真好笑ಠ౪ಠ</p>
<p>2018-07-13<br>原文： “你记得吗，你答应过讲你的历史，”爱丽丝说，”作为什么恨……恨’m’和’g’呀，”她压低声音，说完了这句话，她怕说出猫和狗这两个字惹老鼠生气，于是只说出猫和狗两字的拼音字头。<br>想法：这个翻译我不同意，猫就是m，狗就是g，有点low还是写c和d好。</p>
<p>2018-07-13<br>原文：因为今晨我没事干，所以我要跟你捣捣蛋<br>想法：</p>
<p>2018-07-13<br>原文：你要个碗（弯）！”爱丽丝说，由于她总是热心帮助别人的，因此就焦急她四周寻找，”哦，让我帮你找找看。”<br>想法：傻白甜的天然呆爱丽丝o(*≧▽≦)ツ┏━┓拍桌狂笑</p>
<p>2018-07-13<br>原文：”别说了，妈！你这样罗嗦，就是牡蛎都忍耐不了。”小螃蟹耐着小脾气说。<br>想法：螃蟹都是这样吃杜蛎的么？ಥ_ಥ</p>
]]></content>
      <tags>
        <tag>think</tag>
        <tag>reading book</tag>
      </tags>
  </entry>
  <entry>
    <title>一些linux命令</title>
    <url>/articles/p17.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="//img2.tfd.com/pp/wikiimg.ashx?p=commons/thumb/3/35/Tux.svg/280px-Tux.svg.png" alt="liunx"></p>
<blockquote><p>Talk is cheap, show me the code.</p>
<footer><strong>@Linus Benedict Torvalds ---</strong><cite><a href="https://github.com/torvalds" target="_blank" rel="noopener">github.com/torvalds</a></cite></footer></blockquote>

<h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><pre><code>liunx常见的发行版有ubuntu,red hat,centos,gun,kail...整理一些常用的liunx(测试环境 centos release 6.9)命令,然后由于要学英语嘛,尝试用英语写作.</code></pre>
<div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","video":{"url":"https://gslb.miaopai.com/stream/gX1nvE-FwDbx3sHgFfAvVfhdFHSViZLDe7mO9Q__.mp4?yx=&refer=weibo_app&Expires=1531913346&ssig=ieIoafqxGZ&KID=unistore,video","pic":"/assets/img/dplayer-cover.svg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>

<h3 id="file-operation-at-touch-vi-ls-cd"><a href="#file-operation-at-touch-vi-ls-cd" class="headerlink" title="file operation (at,touch,vi,ls,cd..)"></a>file operation (at,touch,vi,ls,cd..)</h3><ul>
<li><p>cat perview file content.</p>
</li>
<li><p><code>touch+path+filename</code> creat an empty file.</p>
</li>
<li><p>vi edit file.<br>vim有四种模式,分别是command(normal)-mode,last-line-mode,insert-mode,和visual-mode.默认进入vim时是普通模式,此时按:是底行模式,按insert是插入模式,按v是视图模式(可以用鼠标滑动)</p>
<ul>
<li>在普通模式下dd删除光标所在行</li>
<li>在底行模式下wq保存并退出!q不保存退出</li>
</ul>
</li>
<li><p>ls list folder or file.</p>
<ul>
<li><p><code>ls -l +path</code>view property of file or folder.<br><img src="https://i.loli.net/2018/07/16/5b4c66f7af213.png" alt="5b4c66f7af213"></p>
</li>
<li><p><code>ls +[letters]*</code>list file or folder began with letters(正则表达式).<br><img src="https://i.loli.net/2018/07/16/5b4c694bc560a.png" alt="5b4c694bc560a"></p>
</li>
</ul>
</li>
<li><p>cd Change the shell working directory.</p>
<ul>
<li><code>cd ..</code>进入当前目录的父目录</li>
<li><code>cd -</code>切换到上一个工作目录</li>
<li><code>cd ~</code>切换到root工作目录</li>
<li><code>cd \</code>切换到根目录注意不是root目录</li>
<li>如果路径太长你不想用cd的话看这里–&gt;<a href="https://olivierlacan.com/posts/cd-is-wasting-your-time/?utm_source=wanqu.co&utm_campaign=Wanqu+Daily&utm_medium=website" target="_blank" rel="noopener">cd is wasting time</a></li>
</ul>
</li>
<li><p><code>tree -d -L 2</code>搜索的深度为2层且只搜索文件夹,注意区分大小写</p>
</li>
</ul>
<h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><ol>
<li>切换用户<ul>
<li>root-&gt;普通用户:<code>su +username</code></li>
<li>普通用户-&gt;root:<code>sudo su</code>或者<code>su -root</code><br><img src="https://i.loli.net/2018/07/22/5b54953315576.png" alt="5b54953315576"><br>需要稍加注意的是当在root环境下时前面是#,而在普通用户环境下时前面是~</li>
</ul>
</li>
</ol>
<h3 id="package-management"><a href="#package-management" class="headerlink" title="package management"></a>package management</h3><p>yum,pkg,apt…</p>
<p>brew,npm,yarn,pip…</p>
<h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><ol>
<li><a href="https://www.jianshu.com/p/a182a0be4b8a" target="_blank" rel="noopener">看完这篇Linux基本的操作就会了</a></li>
</ol>
]]></content>
      <tags>
        <tag>hotkey</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>风往南吹-想法</title>
    <url>/articles/p18.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><meting-js server="netease" type="song" id="145586"></meting-js></p>
<p>2018-03-20<br>原文：人的感情就是这样善变，当你的注意力被吸引过来的时候，所有的精力就会投入其中，而当这些注意力转移后，一切的一切就都全变了，以前越专心，改变就会越大。<br>想法：</p>
<p>2018-03-20<br>原文：还是了解的太迟了？我发觉感情这个玩意其实就是有足够精力才能享受的快乐，是给生活锦上添花的东西，而不是生存的必要条件。<br>想法：先填饱肚子，饱暖思淫欲(,• ₃ •,)</p>
<p>2018-03-20<br>原文：我很清楚，从感情上讲，女人通常记忆最深的是她第一个男人，而男人则刚好相反，记忆里的总是最后一个女人。<br>想法：</p>
<p>2018-03-20<br>原文：疼痛让我麻木的大脑清醒了一些，我内心里要把这种横来的力量化作工作上的动力，为了我的工作，我失去了曾经认为要相伴一生的微微，所以我唯一能继续做的，就是努力地去工作，我失去的，不能白失去。<br>想法：补偿心理，失去的想要以别的方式补回来[呲牙]</p>
<p>2018-03-20<br>原文：嗯，该过去的就是会过去，不过一切都没关系，因为昨天总会被今天代替，今天又会很快被明天代替，所以人都该有希望，因为没有力量能阻挡明天的到来。<br>想法：</p>
<p>2018-03-20<br>原文：有时候我觉得世界就想一台计算精确的计算机，每一个人都在其中，接受着它的安排。<br>想法：</p>
<p>2018-03-20<br>原文：我心里想，嘿，我这总花公司钱请客吃饭的，到头来还总能加薪受表扬，这，这何乐而不为呢？用脑子挣钱和用腿挣钱就差这个区别，呵呵。<br>想法：</p>
<p>2018-03-20<br>原文：因为我一直认为接吻时睁着眼的女人不值得信任<br>想法：</p>
<p>2018-03-20<br>原文：不过每当我在回忆当时的事情，就嘲笑自己的无知和幼稚，殊不知张哥每次关心我伤口的时候，实际上就是在提醒我，他曾经为我的生命都做出过贡献，让我觉得为他做事是天经地义一般。<br>想法：</p>
<p>2018-03-20<br>原文：两个人好了容易，分开就恶心了。<br>想法：</p>
<p>2018-03-20<br>原文：我对女人的手非常敏感，可能大家对女人的手散发女人味很难理解？其实我觉得这只是种感觉，很细、很长又很肉乎的就是女人味的那种。<br>想法：</p>
<p>2018-03-20<br>原文：自从经历了张全佑的那次事情之后，我一直感觉自己太累了，体力加脑力都在辛苦，所以我刚躺下就已经睡着了。<br>想法：过了35岁就干不动了，这是亚健康ಥ_ಥ</p>
<p>2018-03-20<br>原文：因为我发现，我真心的爱整体的人们，我爱这片土地，但又痛恨每一个单独的人。<br>想法：每一个人都是可爱的，但是分开看又是另一回事了(＠_＠;)</p>
<p>2018-03-20<br>原文：做人、做公司都是这样，如果不向上发展了，脚步一旦停滞就会后退，就像逆水行舟。<br>想法：永远不要让自己太安逸(๑•̀ㅂ•́)ง</p>
<p>2018-03-21<br>原文：但是问题没有我想象的那般简单，因为当一个集体不能团结一致工作的话，那麻烦根本就是你难以想象的。交待下去的事情，员工还是正常地去做，但是你就是感觉很别扭，总是在某个地方让你觉得吃惊，就好像有很大仇恨一样，这就是内斗的痛苦。<br>想法：</p>
<p>2018-03-21<br>原文：我发现，这款游戏真的很好玩，关键是它代表的风格，是一种更高更强的味道。和真实生活中的竞争颇有相似，而且它在游戏开始的时候，基本上是公平的，而且比赛双方的机会也是一样的。这点和生活不同，生活中除了时间外，就没有公平可言了。<br>想法：quake3，《雷神之锤：竞技场》是2001年由id software推出的吃鸡游戏（没错，最早的第一人称fps3D实施对抗类打枪游戏▄█▀█●），id software的每一款游戏都在挑战显卡和CPU的最高性能，推动着硬件的不断发展（就像现在的王者荣耀ヾ(≧O≦)〃嗷~）</p>
<p>2018-03-21<br>原文：现在到好，我开始烦恼女人，因为前来和她说话的人太多了，总会碍到我喝酒。不过对这些网友前来约她，我心里也有反感，只是我自己告诉自己不能表现出来，否则又会有可能发生一段好开始不好终结的感情，这是我最不希望的感情，因为我觉得男人扔到感情里，是在糟蹋自己，而且我已经累了。<br>想法：</p>
<p>2018-03-21<br>原文：在这个时候，我突然对女人产生一种厌恶，因为我当时就认为这钱不会丢失，只要我安排得当。<br>想法：女人的可怕你不懂，世界上最可怕的动物莫过于女人╥﹏╥</p>
<p>2018-03-21<br>原文：饭菜基本上都是我们吃个刚好，没有过多的讲究排场。看来，富贵不是吃的。<br>想法：</p>
<p>2018-03-21<br>原文：我听完这话后，我都呆住了。因为我一直认为的大好人、大男人居然是这样卑鄙龌龊。还好意思向一个弱不禁风的女孩子要分手费，而且张口还不是小数。我刹那间感觉天旋地转，好像天和地是掉过来的，原来认为是好的，居然都是坏的。我的世界观都跌进了混乱当众，一直认为正确的事情被全盘推翻了一样，不由得让我心里一阵抽搐。<br>想法：</p>
<p>2018-03-21<br>原文：我早听说过，上海边上有一个叫周庄的地方，那里号称是东方的威尼斯，城市房子中间都是水道组成，过往的交通工具都是大小船舶，咱去不了威尼斯，就去个周庄也不错，况且还有美女相伴。<br>想法：mark一下，有机会一定要去看看～(^з^)-</p>
<p>2018-03-21<br>原文：且站在石桥上，和站在北京山顶上看日落的感觉也完全不同，就好像是太阳特别优待你，在她就要隐去的瞬间里，把最后一点浪漫和温存都偷偷地洒给需要她的人。<br>想法：</p>
<p>2018-03-21<br>原文：灵魂在阴影中挣扎，似乎在快乐中的一个个瞬间，总是带有空洞和压抑，让我有种余恨未消的感觉，但这种感觉来得莫名其妙，我不明白怎么会有这样的感觉。<br>想法：</p>
<p>2018-03-21<br>原文：我开始想，是不是这个社会的教育下，人的外面和里面永远不能配套？<br>想法：</p>
<p>2018-03-21<br>原文：飞机要是一路顺风就肯定要掉下去了，我得逆风才飞的起来啊。<br>想法：</p>
<p>2018-03-21<br>原文：七、不过男人的这种情结也不能完全怪罪于可怜的男人，因为这个观点是女人们慢慢帮着树立起来的，她们也是帮凶。按照自己的意愿去捏造男人的性情和行为，然后又冠冕堂皇的用各种理由去指责男人的缺点，却不知道这一切的制造者才是罪魁祸首。<br>想法：</p>
<p>2018-03-21<br>原文：二十、我的脑子一片混乱，我在颠簸中，看到罗骁呆呆的样子，不知道为什么，我开始发现这张天使面孔底下，充满了邪恶的忧郁。我发现她很反常，面孔中有内疚的表情，但却不知道像上次我受伤那样帮我止血。<br>想法：</p>
<p>2018-03-21<br>原文：我也明白事理，人家有事情要忙，这是第一；男女经常是只能共福却不能共难这是第二；人在世界上只能相信自己，对其他人还是不要抱有太大的希望，否则希望越大失望越大。<br>想法：</p>
<p>2018-03-21<br>原文：我在想，为什么会这样呢？命运为什么总捉弄强者呢？不过我很快就冷静了下来，因为现在即便再怎么样，对已经发生的事情也无济于事，最应该做的，是立刻把事情查清楚，毕竟这300万不会莫名其妙的人间蒸发。<br>想法：</p>
<p>2018-03-21<br>原文：后来我发现，罗骁这种成熟的女人，似乎已经被社会沾染的太油滑，太圆滑了，根本就不能够完全赤诚相待。虽然也不知道罗骁究竟是怎么圆滑，但就是感觉相处，她的处事方式让我产生了一种危机感。也许女人注定就不要太强，否则就只能找那些可以与她互补的人才可以相安无事的在一起。或者我这样说欠缺公平，毕竟我现在的情况让任何人难以有安全感，而罗骁这样的女人最需要的就是安全感。<br>想法：</p>
<p>2018-03-21<br>原文：生活往往是出人意料的，也许你一直以为是好的，实际却是坏的。不过你一直怀疑的，也许反而是最好的。<br>想法：</p>
<p>2018-03-21<br>原文：一阵风从我的右边刮来，好冷，冷的刺骨，怎么风向南刮会冷呢？我混沌的脑子用唯一剩下的智慧思考这个问题。！！！！原来，现在刮的是北风啊，原来风往南吹，吹的却是北风，难怪我一直错觉风往南吹时是那么温暖，原来是刺骨的北风。怪不得我以为的好人却都害了我，而爱我的人却总是离开自己，原来，我早就是个自以为是的瞎子了……<br>想法：男主弥留之际的顿悟，看的不是太懂(°ー°〃)</p>
<p>2018-03-21<br>原文：我既然已经表示了辞职，就不会再回头，否则就算回头了，也未必能得到重用。<br>想法：辞职上司挽留只是礼貌性的，想好再辞职，提出辞职就不能再待下去了(。_。)</p>
<p>原文阅读☞<a href="/assets/files/1206665799.txt">风往南吹.TXT</a>，结局泪目T_T，又被作者摆了一道</p>
]]></content>
      <tags>
        <tag>think</tag>
        <tag>reading book</tag>
      </tags>
  </entry>
  <entry>
    <title>考研经验分享</title>
    <url>/articles/p21.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h3><p>离初试过去已有9个月之久,写一点东西希望对学弟学妹们有用;对自己也是一个复盘的作用.</p>
<h3 id="关于初试"><a href="#关于初试" class="headerlink" title="关于初试"></a>关于初试</h3><h4 id="回忆"><a href="#回忆" class="headerlink" title="回忆"></a>回忆</h4><p>初试选考,我考的是<strong>英语一+政治+数据结构+CPP程序设计</strong>,初试分数截图如下:</p>
<p><img src="/assets/blogimg/p20-1.png" alt="p20-1"></p>
<h4 id="关于英语一"><a href="#关于英语一" class="headerlink" title="关于英语一"></a>关于英语一</h4><ul>
<li><p>英语很重要,无论是在读研期间<strong>阅读外文文献</strong>还是看<strong>官方文档</strong>都有用(最好过四六级,复试是加分项),英语一考到60分以上是理想的分数,<em>可以争取优秀生源奖.</em><br><img src="https://qiniu.madeai.cn/blog/20200907164220.png" alt="20200907164220"></p>
</li>
<li><p>我英语一复习的比较早,大概3-4月份就把十年的真题和5套模拟题做完了,这也导致了我后继乏力,对英语一没怎么复习后期.</p>
<table>
<thead>
<tr>
<th>PART</th>
<th>SUMMARY</th>
</tr>
</thead>
<tbody><tr>
<td>单词</td>
<td>前期看了很多<strong>刘晓艳老师的单词课</strong>(视频),单词很重要,最好买一本小的单词本放在口袋里,时不时拿出来看看.</td>
</tr>
<tr>
<td>阅读理解</td>
<td><strong>唐迟老师的阅读理解</strong>(视频)</td>
</tr>
<tr>
<td>作文</td>
<td>我的作文是硬伤,因为我的字写得不好看,如果给我再来一次的机会的话我一定对作文有针对性的练习.<a href="https://blog.madeai.cn/articles/english-article-sentences.html">这里</a>有我的笔记,感兴趣可以看看.</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="关于政治"><a href="#关于政治" class="headerlink" title="关于政治"></a>关于政治</h4><p>我不擅长政治,所以我的政治复习的比较晚,在考前背了一下同学给的<strong>肖四肖八押题卷</strong>,按模板答题的话也勉强能得50分左右的分数,能过国家线.</p>
<p><img src="/assets/blogimg/p20-2.png" alt="p20-2"></p>
<h4 id="关于数据结构"><a href="#关于数据结构" class="headerlink" title="关于数据结构"></a>关于数据结构</h4><p>数据结构方面前期看了一些视频,哔哩哔哩上的还有百度网盘上面的,主要是<strong>百度网盘上的王道视频</strong>,个人觉得讲得比较好,通俗易懂.最好跟着视频自己写写代码,印象会更深刻(<a href="https://github.com/huangyebiaoke/LearningDataStructure" target="_blank" rel="noopener">这里</a>有我写的实例,感兴趣可以看看).也可以买**严蔚敏的&lt;&lt;数据结构(C语言描述)&gt;&gt;**来看看,这个是标准的参考书目.</p>
<p>数据结构后面的大题一个20分,我还记得有个哈夫曼树,还有一个DFS,好像还有一个平衡二叉树之类的.</p>
<h4 id="关于C-程序设计"><a href="#关于C-程序设计" class="headerlink" title="关于C++程序设计"></a>关于C++程序设计</h4><p>我是淘宝上买的谭浩强的**&lt;&lt;CPP面向对象程序设计&gt;&gt;**,这也是标准的考研参考书目.我的方法是看书并练练后面的习题,一定要用代码编辑器写一写,这样会对这门语言理解得更加深刻.(<a href="https://github.com/huangyebiaoke/LearningCpp" target="_blank" rel="noopener">这里</a>有我写的实例,感兴趣可以看看)</p>
<h3 id="关于发邮件联系导师这件事"><a href="#关于发邮件联系导师这件事" class="headerlink" title="关于发邮件联系导师这件事"></a>关于发邮件联系导师这件事</h3><p>这个时间点在国家线出来之前完成,注意邮件不能发给太多导师,2-3个即可.</p>
<p>在给老师发邮件之前建议先读一读导师公开发表的论文,最好能有一些自己的见解,导师喜欢有独特观点的学生.</p>
<p>然后就是网上有发给导师邮件的模板,把自己的高光时刻写进去(像获奖,项目之类的经历).我建议不要写得太长,150-200字左右即可.最好附上简历和证书扫描件.</p>
<p>以下是我联系导师时写的邮件,仅作参考:</p>
<pre><code>尊敬的XX教授：

您好！冒昧打搅您了，我是XXX，男，今年23岁。今年报考贵校计算机科学与技术专业(077500)学硕，准考证号XXXX，初试成绩323(政治51，英一55，数据结构88，c++程序设计129)，参照去年的复试分数线，我可能有机会参加贵校的复试，我希望能够有机会攻读您2020年的硕士研究生，所以非常冒昧的给您写信。
本科生期间我刻苦学习，成绩优秀，专业基础知识相对扎实，在英语方面，通过了四级六级考试，具备了一定的英语听、说、读、写能力；并且注重积极实践，尽可能参与老师的科研项目，在老师的精心培养以及大学良好的学术氛围的影响下，我在基础知识，动手能力，执行能力等方面积累了一定的经验，为读研打下坚实的基础。
近期我查阅了一定量您的学术论著和学术专长，对您的学术研究方向和重点有了一定的认证和认同，并且发现您所研究的方向就是我的兴趣和专长所在，比如人工智能和机器学习，所以非常希望能在您的指导下攻读硕士学位，我相信我能很好的完成硕士期间的任务。

大学期间，我接触过的计算机编程语言有c(60%),java(90%),c++(80%),c#(50%),python(10%),kotlin(10%),php(30%);
使用过的代码编辑器有IDEA, vs code, vistual studio, Android studio, sublime, eclipse, devcpp;
接触过的技术栈有Spring boot, severlet+jsp+tomcat, Android MVC, WinForm, html5+css3+js6;
平时也会做一些项目练练手，我的GitHub地址是 XXXX
有时也会写写博客，我的个人博客地址是 XXXX

接下来，我将好好准备复试，冒昧的问老师，面试时主要考察哪些知识，我应该看哪些书籍。希望老师给予我指导以及提出对我的要求。
冒昧致信，恳请您海涵！非常感谢您能在百忙之中抽出时间阅信！祝身体健康， 工作愉快！

此致

敬礼！</code></pre>
<p>另外联系导师的邮件模板我放在了<code>附件\我自己的部分资料\我备忘录里的内容\联系导师邮件模板.txt</code>中,同样是仅供参考.</p>
<h3 id="关于复试"><a href="#关于复试" class="headerlink" title="关于复试"></a>关于复试</h3><p>复试没什么好说的,只要自己不作,初试过了复试大概率不会被刷.</p>
<p>国家线出来了可以先联系联系导师,说不定能在复试的面试流程上能给你加加分.</p>
<p>说说复试的流程吧:</p>
<p><strong>笔试:</strong></p>
<p>由于疫情影响,我们的笔试是开卷的,可以翻书,大概有三道题目,一道考概念,两道编程题目大概,编程题目随便用什么语言都行(比较简单).</p>
<p><strong>面试:</strong></p>
<ol>
<li>先是一个英文的自我介绍,这个网上能找到模板的,自己写一写背下来就行了.</li>
<li>然后是抽签翻译,这个是关于人工智能(Artificial Intelligence)的小短文,<strong>千万不能逐字逐句的翻译</strong>,看完后再想一两分钟,再翻译(有一些专业术语建议平时多看看科技类的小短文,可以知道是什么意思)</li>
<li>对社会观点的看法,我的题目是:看你做得最能体现德智体美的一件事(这里最好不要犹豫,想到什么就说什么).</li>
</ol>
<p><strong>面试tips:</strong></p>
<ul>
<li><p>面试是一大群导师在面你,但是不要紧张,导师是不会为难你的,不要把导师放在你的对立面.</p>
</li>
<li><p>面试千万不能紧张,也不能结结巴巴(这个大概率是因为准备不充分,肚子里没货,好好准备就行),我就是因为这个<a href="http://jky.yangtzeu.edu.cn/info/1014/3518.htm" target="_blank" rel="noopener">初试排名</a>很高,<a href="http://jky.yangtzeu.edu.cn/info/1035/3528.htm?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">复试</a>之后掉到下游的.</p>
</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h4><ol>
<li>学长 你是考研上了长江大学嘛,你选的是啥专业<ul>
<li>对,我考的专业代码是07750计算机科学与技术理学学硕.选的科目是<strong>英语一+政治+数据结构+CPP程序设计</strong></li>
</ul>
</li>
<li>你当时复习了多久考上的啊 想了解一下哈哈<ul>
<li>前期按学校辅导班走的,大概是1月份开始的,后续学校课程结束后有一段倦怠期,考前一两个月发力,想着起码要过国家线不是.</li>
</ul>
</li>
<li>考长江大学要复习啥呢<ul>
<li>准确来说我们考的是<a href="http://jky.yangtzeu.edu.cn/yjspy/zsxx.htm" target="_blank" rel="noopener">长江大学计算机学院</a>,要复习的东西根据你选的科目来复习就好了(英语和政治是一定要考的),至于选科目看你本科什么学得好喽.</li>
</ul>
</li>
<li>这个第四项的话你选的啥啊<ul>
<li>看问题一</li>
</ul>
</li>
<li>你复习专业课的时候主要是看视频还是刷题啊<ul>
<li>我主要是看书吧,然后用vscode写了一下书上的实例.**这个看自己的喜好,怎么喜欢怎么来,看视频看不下去就看书,看书看不下就写写代码之类的.**没有心思坐不下来就出去锻炼锻炼</li>
</ul>
</li>
<li>学长你这个第四项选的是408吗<ul>
<li>我选的是<strong>C++程序设计</strong>.建议不要考408,因为408要复习四门科目**(数据结构+计算机组成原理+操作系统+计算机网络)**,知识面太广.当然也要结合你本科学得怎么样和自己的兴趣来选.</li>
</ul>
</li>
<li>你们去年拟招人数是多少啊<ul>
<li>具体的初试名单能在<a href="http://jky.yangtzeu.edu.cn/info/1014/3518.htm" target="_blank" rel="noopener">这里</a>看到,报录比是1:1.2,实际上只刷了一个人.(根据国家政策21年估计还得扩招)</li>
</ul>
</li>
<li>去年来宣传的时候是说上线就可以联系那边 然后优先录取我们的学生嘛<ul>
<li>这个我没有了解,去年来做招生宣传的时候我没去,是听同学说的,所以报考那里的.</li>
</ul>
</li>
</ol>
<h4 id="网络资源汇总"><a href="#网络资源汇总" class="headerlink" title="网络资源汇总:"></a>网络资源汇总:</h4><table>
<thead>
<tr>
<th>NAME</th>
<th>INFO</th>
</tr>
</thead>
<tbody><tr>
<td>百度网盘上的资源</td>
<td>链接: <a href="https://pan.baidu.com/s/1wtWbK8X637C22aME7DXIeQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1wtWbK8X637C22aME7DXIeQ</a> 提取码: g7i7<br>链接: <a href="https://pan.baidu.com/s/1WYvLkU70jO65ZPgDhuflqg" target="_blank" rel="noopener">https://pan.baidu.com/s/1WYvLkU70jO65ZPgDhuflqg</a> 提取码: n2mf<br>ps:我的百度盘账号:荒野飙客X,链接挂了可以加我好友,我发给你.</td>
</tr>
<tr>
<td>经济学人阅读材料</td>
<td><a href="https://github.com/cch123/eco2020" target="_blank" rel="noopener">https://github.com/cch123/eco2020</a></td>
</tr>
<tr>
<td>我复试时的资料</td>
<td>无</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>notebook</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构和算法分析(第三版)练习</title>
    <url>/articles/p22.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h3><ul>
<li>base case</li>
<li>making progress</li>
<li>design rule</li>
<li>compound interst rule</li>
</ul>
<h3 id="自动装箱和拆箱"><a href="#自动装箱和拆箱" class="headerlink" title="自动装箱和拆箱"></a>自动装箱和拆箱</h3><pre><code class="java">class BoxingDemo{
    public static void main(String[] args) {
        // Cell类中的set方法传入的是Object类型
        Cell&lt;Integer&gt; c=new Cell&lt;&gt;();
        c.set(37);
        int val=c.get();
        System.out.println(val+&quot;&quot;);
    }
}</code></pre>
<h3 id="java5中的通配符-wildcard"><a href="#java5中的通配符-wildcard" class="headerlink" title="java5中的通配符(wildcard)"></a>java5中的<strong>通配符</strong>(wildcard)</h3><pre><code class="java">/*可以传入Shape类型或者它的子类Square*/
public static double totalArea(Collection&lt;? extends Shape&gt; arr){
    double total=0;
    for (Shape s : arr) {
        if (s!=null) {
            total+=s.area();
        }
        return total;
    }
}</code></pre>
<h3 id="折半查找"><a href="#折半查找" class="headerlink" title="折半查找"></a>折半查找</h3><pre><code class="java">public static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;  int binarySearch(AnyType[] a,AnyType x){
    int low=0,high=a.length-1;
    while(low&lt;=high){
        int mid=(low+high)/2;
        if(a[mid].compareTo(x)&lt;0){
            low=mid+1;
        }else if(a[mid].compareTo(x)&gt;0){
            high=mid-1;
        }else{
            return mid;
        }
    }
    return -1;
}</code></pre>
<h3 id="ADT-abstract-data-type"><a href="#ADT-abstract-data-type" class="headerlink" title="ADT(abstract data type)"></a>ADT(abstract data type)</h3><pre><code>是带有一组操作的一些对象的集合.抽象数据类型是数学的抽象(表,集合,图);</code></pre>
<h4 id="Iterator接口"><a href="#Iterator接口" class="headerlink" title="Iterator接口"></a>Iterator接口</h4><pre><code class="java">public static&lt;AnyType&gt; void print(Collection&lt;AnyType&gt; coll){
    Iterator&lt;AnyType&gt; itr=coll.iterator();
    while(itr.hasNext()){
        AnyType item=itr.next();
        System.out.println(item);
    }
}</code></pre>
<h4 id="List接口-ArrayList-LinkedList"><a href="#List接口-ArrayList-LinkedList" class="headerlink" title="List接口(ArrayList,LinkedList)"></a>List接口(ArrayList,LinkedList)</h4><table>
<thead>
<tr>
<th align="left"></th>
<th align="left">ArrayList</th>
<th align="left">LinkedList</th>
</tr>
</thead>
<tbody><tr>
<td align="left">实现</td>
<td align="left">可增长的数组</td>
<td align="left">双链表</td>
</tr>
<tr>
<td align="left">优点</td>
<td align="left">get&amp;set耗费常数级的时间</td>
<td align="left">在现有表进行删除和插入都是常数级的耗时</td>
</tr>
<tr>
<td align="left">缺点</td>
<td align="left">新项的插入和现有项的删除代价昂贵,除非是在末端</td>
<td align="left">由于不容易做索引,因此对get的调用时昂贵的O(N)</td>
</tr>
</tbody></table>
<p><em>tips:</em></p>
<ul>
<li>LinkedList常用方法:addFirst,removeFist,addLast,removeLast,getFirst,getLast;</li>
</ul>
]]></content>
      <categories>
        <category>notebook</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>reading book</tag>
      </tags>
  </entry>
  <entry>
    <title>My idol--Obama</title>
    <url>/articles/p6.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><img src="/assets/blogimg/President_Barack_Obama.jpg" alt="Obama" align="left" hspace="30" style="width=3rem;border-radius: 5px;box-shadow: 0.6px 0.6px o.5px #888888;">
    As an old saying goes: An idol is an example to advise you what should do and what should not do.everyone has
their own idol.Maybe actor singer or other famous people.
    My idol is Obama--the first African American to have served as the 44th President of the United States.He is so 
humorous,wise and farsighted.He is so glamour that attract me to look forward with him.
    As a president,he did so many great for America.The first thing he did is promote the establishment of a world 
without nuclear weapons in 2009.The second thing is killed BenLaden--the biggest terrorist.without Obama's order,who care you live or die.The third event occur in 2008--the global financial crisis.The president Obama saved America,again.
    As a husband,he love his wife Michele so much,no somking no drinking and no whoring.As a father,he also pay 
withhis daughter whenever how busy he is.
    Oboma is so great person that's why I like him.

<p>附：</p>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Barack_Obama" target="_blank" rel="noopener">wiki/Barack_Obama</a></li>
</ol>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>就是不听话</title>
    <url>/articles/p5.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><iframe src="//player.bilibili.com/player.html?aid=15018146&bvid=BV1Gx41137eT&cid=24462732&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
]]></content>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title>线性表的增删查改</title>
    <url>/articles/p7.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>part1:头部</p>
<pre><code class="c++">#include&lt;stdio.h&gt;

#define datatype int
#define MAXSIZE 100

typedef struct{
    datatype data[MAXSIZE];
    int last;
}SeqList;</code></pre>
<p>part2:初始化线性表 建立空表</p>
<pre><code class="c++">SeqList *InIt(){
    SeqList *L;
    L=new SeqList;//L=(SeqList*)malloc(sizeof(SeqList));
    L-&gt;last=-1;
    return L;
}</code></pre>
<p>part3:插入 尾插法</p>
<pre><code class="c++">int InsList(SeqList *L, int i, datatype x){
    if (i&lt;0||i&gt;MAXSIZE){
        printf(&quot;要插入点不在范围内&quot;);
        return -1;
    }
    if (L-&gt;last==MAXSIZE){
        printf(&quot;线性表已满&quot;);
        return -1;
    }
    for (int j=L-&gt;last+1; j&gt;=i; --j){
        L-&gt;data[j]=L-&gt;data[--j];/* data(j++) */    
    }
    L-&gt;data[i]=x;
    L-&gt;last++;//插入一个新元素 last指针后移
    return 1;
}</code></pre>
<p>part4:删除</p>
<pre><code class="c++">int DelList(SeqList *L, int i){
    if (i&lt;0||i&gt;MAXSIZE){
        printf(&quot;要删除点不在范围内&quot;);
        return -1;

    }
    for (int j=i; j&lt;=L-&gt;last-1; ++j){
        L-&gt;data[j]=L-&gt;data[++j];
    }
    L-&gt;last--;
    return 1;
}</code></pre>
<p>part5:按值查找</p>
<pre><code class="c++">int SeacherList(SeqList *L, datatype x){
    for (int j=0; j&lt;=L-&gt;last; ++j){
        if(L-&gt;data[j]==x){
        return j;
        }
    }
}</code></pre>
<p>part6:输出控制台</p>
<pre><code class="c++">void ShowList(SeqList *L){
    for (int j=0; j&lt;=L-&gt;last; ++j){
        printf(&quot;%d\t&quot;,L-&gt;data[j]);
    }
}</code></pre>
<p>part7:主函数 调用</p>
<pre><code class="c++">int main(int argc, char const *argv[]){//int main(void)
    int x=0;
    SeqList *L;
    L=InIt();
    for (int i=0; ; ++i){
        scanf(&quot;%d&quot;,&amp;x);
        if (x==-1)
            break;
        InsList(L,i,x);
    }
    ShowList(L);
    return 0;
}</code></pre>
<p>结果:<br><img src="/assets/blogimg/p9-1.png" alt="result"></p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>CPP</tag>
      </tags>
  </entry>
  <entry>
    <title>git创建版本库和关联远程库</title>
    <url>/articles/p8.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="/assets/blogimg/p8-1.png" alt="banner"></p>
<h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><ol>
<li>mkdir LearningDataStructure//创建本地文件夹</li>
<li>cd LearningDataStructure//进入文件夹</li>
<li>pwd//显示当前目录<pre><code class="bash">/e/LearningDataStructure</code></pre>
</li>
<li>git init//初始化<br> Initialized empty Git repository in /e/LearningDataStructure/.git/</li>
<li>git add README.md//把文件添加到仓库</li>
<li>git commit -m “这是一个readme文件”//把文件提交到仓库并添加描述<pre><code class="bash">[master (root-commit) cb926e7] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt</code></pre>
<h2 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h2></li>
<li>click “Create a new repository”</li>
<li>git remote add origin <a href="mailto:&#x67;&#105;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#109;" target="_blank" rel="noopener">&#x67;&#105;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#109;</a>:huangyebiaoke/LearningDataStructure.git//本地关联远程库</li>
<li>git remote remove origin//取消本地关联远程库</li>
<li>git push -u origin master//把本地内容推送到远程库<h2 id="git思维导图"><a href="#git思维导图" class="headerlink" title="git思维导图"></a>git思维导图</h2><img src="/assets/blogimg/p8-2.png" alt="git picture"></li>
</ol>
<hr>
<p>附:<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰老师的git教程</a></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>什么是伴随矩阵？</title>
    <url>/articles/what-is-adjoint-matrix.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><img src="/assets/blogimg/伴随矩阵.jpg">
<h2>首先我们来看如何得到<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5" target="_blank" rel="noopener">伴随矩阵</a>:</h2>
~~1.设A=（a<sub>ij</sub>）为n阶方阵
2.A<sub>ij</sub>是|A|在（i，j）上a<sub>ij</sub>的代数余子式
3.则全部由代数余子式组成的n阶方阵为A的伴随矩阵A~~


<h2>我们来弄清楚几个专有名词：</h2>
~~|A|：n阶方阵的n阶行列式，行列式是一个数;
a<sub>ij</sub>的元余子式：n阶行列式去除i行j列剩下的部分，记作M<sub>ij</sub>;
a<sub>ij</sub>的代数余子式：A<sub>ij</sub>=(-1)<sup>i+j</sup>M<sub>ij</sub>;~~

<p>现在知道什么叫伴随矩阵了吗？不知道点这里—&gt;<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5" target="_blank" rel="noopener">https://www.baidu.com/s?ie=UTF-8&amp;wd=伴随矩阵</a></p>
<h2>放图时间：</h2>
<img src="/assets/blogimg/cat1.jpg">
<img src="/assets/blogimg/cat2.jpg">
<img src="/assets/blogimg/cat3.jpg">
]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>关于java的各种包</title>
    <url>/articles/p9.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>在整个JavaSE API中，大约包含1 200个包，总体来看，包名第一个名称主要有3种：java、javax和org。其中以java开头的包名是基础语言包，以javax开头的属于扩展包（其中x是extend的简写），而以org开头的则是第三方组织提供的功能包（organization的简写）。<br>下面简单介绍几个Java SE API的主要包。<br>（1）java．lang，是Java语言的核心包，是编写Java程序所需要的基本类和接口，包括Object类、System类、Class类、异常处理类、线程类等。这个包由编译器自动引入。<br>（2）java．applet，提供Applet执行时需要的类。<br>（3）java．awt，提供操作图形用户界面的基本功能。<br>（4）java．io，提供Java程序进行输入输出的类，以及目录和文件管理类。<br>（5）java．net，提供实现网络功能。<br>（6）java．util，提供实用程序类及集合类等常用的工具类。<br>（7）java．sql，提供使Java程序具有访问不同数据库的能力。<br>（8）java．rmi，提供远程连接与载入，实现了远程方法调用的功能。</p>
</blockquote>
<h3 id="java-util-Arrays"><a href="#java-util-Arrays" class="headerlink" title="java.util.Arrays;"></a>java.util.Arrays;</h3><p>usage：</p>
<pre><code class="java">    import java.util.Arrays;

    Arrays.sort(arr);//升序排序
    Arrays.toString(arr);//将数组转为字符串</code></pre>
<h3 id="java-util-Scanner"><a href="#java-util-Scanner" class="headerlink" title="java.util.Scanner;"></a>java.util.Scanner;</h3><pre><code class="java">import java.util.Scanner;

Scanner input = new Scanner(System.in);
String name=input.next();
int num=input.nextIn();</code></pre>
<h3 id="关于equals；"><a href="#关于equals；" class="headerlink" title="关于equals；"></a>关于equals；</h3><p><img src="http://img.mukewang.com/53703cb10001f78a06340312.jpg" alt="picture" title="picture"></p>
<pre><code class="java">import java.util.*;
if( a!=null &amp;&amp; a.equals(b) ){.............}

if(Objects.equals(a,b)){.......}
</code></pre>
<p>more…click <a href="https://docs.oracle.com/javase/9/index.html" target="_blank" rel="noopener">docs.oracle.com</a></p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>&lt;算法第四版&gt;最佳实践-优先队列</title>
    <url>/articles/priority-queues.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="优先队列的例子"><a href="#优先队列的例子" class="headerlink" title="优先队列的例子"></a>优先队列的例子</h2><p>从N(数据量很大，超过内存限制)个数中找最大的M个数</p>
<pre><code class="java">MinPQ&lt;Transaction&gt; pq = new MinPQ&lt;Transaction&gt;();
while (StdIn.hasNextLine())
{
   String line = StdIn.readLine();
   Transaction item = new Transaction(line);
   pq.insert(item); 
   if (pq.size() &gt; M)
      pq.delMin();
}</code></pre>
<h2 id="二叉堆实现"><a href="#二叉堆实现" class="headerlink" title="二叉堆实现"></a>二叉堆实现</h2><ul>
<li><p>大顶堆(小根堆): 左右子节点小于父节点, 右子节点小于左子节点(和排序二叉树区分)</p>
</li>
<li><p>完全二叉树可用数组表示, 位置k的父节点为k/2, 左右子节点分别为2k和2k+1</p>
<img src="/assets/blogimg/image-20220523163429676.png" alt="image-20220523163429676" style="zoom:80%;">

</li>
</ul>
<h3 id="堆的有序化-reheapifying"><a href="#堆的有序化-reheapifying" class="headerlink" title="堆的有序化(reheapifying)"></a>堆的有序化(reheapifying)</h3><blockquote>
<p>问题: 当插入元素大于根节点的元素时(insert), 或者删除根节点的元素时(delMax)需要对堆进行重排以保证堆是有序的大顶堆</p>
</blockquote>
<h4 id="当插入的节点比根节点更大时"><a href="#当插入的节点比根节点更大时" class="headerlink" title="当插入的节点比根节点更大时:"></a>当插入的节点比根节点更大时:</h4><ul>
<li>将插入的节点和它的父节点进行交换(类似于冒泡排序中的内层循环)</li>
<li>直到整个大顶堆有序</li>
</ul>
<pre><code class="java">private void swim(int k)
{
   while (k &gt; 1 &amp;&amp; less(k/2, k))
   {
      exch(k, k/2);
      k = k/2;
   }
}</code></pre>
<p><img src="/assets/blogimg/image-20220523172347153.png" alt="image-20220523172347153"></p>
<p><strong>插入操作:</strong> 每次插入操作都要检查二叉树是否有序, 最多花费 1 + lg N 次比较</p>
<pre><code class="java">public void insert(Key x)
{
   pq[++N] = x;
   swim(N);
}</code></pre>
<h4 id="当删除根节点的元素时"><a href="#当删除根节点的元素时" class="headerlink" title="当删除根节点的元素时:"></a>当删除根节点的元素时:</h4><ul>
<li>将根节点和尾节点(数组最后一个元素)交换并删除尾节点;</li>
<li>自上而下调整根节点中元素的位置</li>
</ul>
<p><strong>删除根节点操作:</strong></p>
<pre><code class="java">public Key delMax()
{
   Key max = pq[1];//记录要删除的根节点
   exch(1, N--);//根节点和数组最后的元素交换, 然后删除数组最后一个元素
   sink(1);//从上而下调整时使堆有序
   pq[N+1] = null;//数组最后一个元素置为null使之能够被GC回收(防止游离)
   return max;//返回删除的元素
}</code></pre>
<p><strong>自上而下调整:</strong></p>
<ul>
<li>将较小的根节点元素和子节点中较大的元素交换</li>
<li>直到大顶堆有序</li>
</ul>
<pre><code class="java">private void sink(int k)
{
   while (2*k &lt;= N)
   {
      int j = 2*k;
      //交换子节点中的较大者
      if (j &lt; N &amp;&amp; less(j, j+1)) j++;
      if (!less(k, j)) break;
      exch(k, j);
      k = j;
   }
}</code></pre>
<p><img src="/assets/blogimg/image-20220523175021545.png" alt="image-20220523175021545"></p>
<h2 id="优先队列实现代码"><a href="#优先队列实现代码" class="headerlink" title="优先队列实现代码"></a>优先队列实现代码</h2><pre><code class="java">public class MaxPQ&lt;Key extends Comparable&lt;Key&gt;&gt;
{
   private Key[] pq;
   private int N;
   public MaxPQ(int capacity)
   {  pq = (Key[]) new Comparable[capacity+1];  }
   public boolean isEmpty()
   {   return N == 0;   }
   public void insert(Key key)
   public Key delMax()
   {   /* see previous code */  }
   private void swim(int k)
   private void sink(int k)
   {   /* see previous code */  }
   private boolean less(int i, int j)
   {   return pq[i].compareTo(pq[j]) &lt; 0;  }
   private void exch(int i, int j)
   {   Key t = pq[i]; pq[i] = pq[j]; pq[j] = t;  }
}</code></pre>
<table>
<thead>
<tr>
<th>实现方式</th>
<th>插入</th>
<th>删除堆顶元素</th>
<th>查找堆顶元素</th>
</tr>
</thead>
<tbody><tr>
<td>无序数组</td>
<td>1</td>
<td>N</td>
<td>N</td>
</tr>
<tr>
<td>有序数组</td>
<td>N</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td><strong>大顶堆</strong></td>
<td><strong>logN</strong></td>
<td><strong>logN</strong></td>
<td><strong>1</strong></td>
</tr>
<tr>
<td>d-ary heap</td>
<td>log<del>d</del>N</td>
<td>d*log<del>d</del>N</td>
<td>1</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>notebook</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>六级写作模板</title>
    <url>/articles/six-band-writing-template.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1.<br>    In recent years,<em>has/have been prevailing among</em>. In contrast,<em>.<br>    In number of factors can account for such phenomenon, but the following might be the critial ones. First and foremost,</em>. Moreover,<em>. Undoubtedly,</em>.Firstly_. Secondly,<em>.<br>    In my view,</em>. To begin with,<em>. What’s more,</em>. Only_.<br>2.<br>    It is widely accepted that_. What’s more,<em>.However</em>.<br>    On the one hand, some people hold the view that_. On the other hand, a great many people insist that_.<br>    From my perspective, however,<em>. Therefore</em>.<br>3.<br>    It is not an uncommon social phenomenon that_. For example,<em>.<br>    As to this issue, opinions vary from person to person. Some people hold that</em>. But others maintain that_.<br>    As far as I am concerned,<em>. On the one hand,</em>. On the other hand,<em>. In a word,</em>.<br>4.<br>    As is portrayed  in the picture,<em>. Actually, recent years have witnessed an increasing trend of</em>.<br>    This_ has inevitably brought about some_ effects. Anyway,<em>.<br>    However,</em>. Therefore, people should become fully aware of both sides of_.<br> 5.<br>    Nowdays, it is widely acknowledged that_. Therefore,<em>.However, as for this phenomenon, people’s ideas vary.<br>    Some insist that</em>.However,<em>.<br>    From my perspective,</em>. On the one hand,<em>.One the other hand,</em>.What’s more,<em>.<br>6.<br>    As is known to all,</em>. However,<em>.The cases of</em>.<br>    Therefore,<em>.Firstly,</em>.Secondly,<em>.Thirdly</em>.<br>    As far as I’m concerned,<em>.<br>7.<br>    As a saying goes</em>.Nowadays we are in an era of_.More and more people_.<br>    Admittedly, no one can deny the fact that_. Nevertheless,<em>. For example,</em>.Besides,<em>.<br>    Then what can we do to aviod being</em>? Here are some useful tips: To begin with,<em>. What’s more,</em>.<br>8.<br>    As someone once said,”<em>.”<em>have enormously facilitated and enriched our lives, yet</em>.<br>    In order to</em>, one needs_. Only when one succeeds in <em>can he</em>.<br>    It is never easy to_.Just as the saying goes,<em>.<br>9.<br>    As is vivdly shown in the picture,</em>. It mirrors a common phenomenon, which has raised a wide range of concern.<br>    This phenomenon may bring about some severe consequences. On the other hand,<em>.<br>    Considering the seriousness of the condition, some measures can be taken to improve it. Only in this way can we</em>.<br>10.<br>    For a growing number of_,<em>has come into fashion. From_to_.What’s more,</em>.<br>    Admittedly, there are different purposes behind this phenomenon, but the following are the most critical ones. To begin with,<em>. In addition,</em>.All of the above is_. In my opinion,<em>.To conclude,</em>.</p>
]]></content>
      <tags>
        <tag>English</tag>
        <tag>writing</tag>
      </tags>
  </entry>
</search>
